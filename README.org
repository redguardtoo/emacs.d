* Checklist
- Tested with Emacs 24.3.1, 24.4, 24.5 on Linux/Windows/Cygwin/Mac
- Please read FAQ to disable [[http://www.vim.org][Vim]] key bindings
- Please read section "Key bindings" to learn key bindings
- I intentionally make packages from [[http://melpa.org][melpa-unstable]] *uninstallable* by default. You can modify variable =melpa-include-packages= in =~/.emacs.d/lisp/init-elpa.el= to add packages from melpa-unstable
- Other issues are covered in FAQ
- Please read section "About Emacs 23" if you uses Emacs 23.4
* Features
- Stable
- Efficient
- Native key bindings are preserved
- Usable in [[https://packages.debian.org/emacs-nox][emacs-nox]] (Emacs in Shell)
- Robust (For example, you can install packages behind Corp firewall)
- Popular programming languages supported (C/C++/Java/Ruby/Perl/Python/C#/Lua/Javascript ...)
* Installation
Most users should follow the section "Install in normal way".

You need the section "Install stable version in easiest way" *if and only if*:
- You are absolutely newbie, knowing nothing about Linux/Unix
- You are living in North Korea without internet access
** Install in normal way
Please remove the file =~/.emacs.d/init.el= and =~/.emacs=. =~= is [[https://en.wikipedia.org/wiki/Home_directory][Home directory]].

Please uninstall any package which is not installed at =~/.emacs.d=. For example, run =apt-get autoremove emacs-w3m= on Debian/Ubuntu.

If you don't know what I mean, then *do nothing*.

All packages should be placed at =~/.emacs.d= from now on.

There are TWO ways to install this setup:

- *Way 1*, download [[https://github.com/redguardtoo/emacs.d/archive/master.zip][latest setup]] and extract its content into =~/.emacs.d=, OR run command =cd ~; git clone https://github.com/redguardtoo/emacs.d.git .emacs.d= in shell.

- *Way 2*, use [[https://github.com/redguardtoo/emacs.d/archive/stable.zip][stable setup]], OR run command =cd ~; git clone https://github.com/redguardtoo/emacs.d.git .emacs.d; cd .emacs.d; git reset --hard stable= in shell.

Ensure that the init.el contained in this repo ends up at ~/.emacs.d/init.el.

By default, all packages will be installed automatically during Emacs startup. Edit =~/.emacs.d/init-elpa.el= to avoid certain package be installed automatically.

** Install stable version in easiest way (OPTIONAL)
You only need two zip files instead of git or network.

Here are the *exact steps*,
- Remove =~/.emacs=.
- Download [[https://github.com/redguardtoo/emacs.d/archive/stable.zip]]
- Extract its content into empty directory =~/.emacs.d=
- Download [[https://github.com/redguardtoo/myelpa/archive/stable.zip]]
- Extract the zip somewhere, say =~/projs/myelpa=
- Make sure a file named =archive-contents= exists in =~/projs/myelpa=
- Add =(setq package-archives '(("myelpa" . "~/projs/myelpa/")))= into =~/.emacs.d/lisp/init-elpa.el= 
- Start Emacs now!

Now you are using local package repository =~/projs/melpa=.

You can switch to online repositories like http://elpa.gnu.org or http://melpa.org by modifying =~/.emacs.d/lisp/init-elpa.el=.
** Third party tools (OPTIONAL)
*** Install
You can install them in any way you like. But =OS package manager= is easier.

=OS package manager= means:
- [[https://github.com/transcode-open/apt-cyg][apt-cyg]] at Cygwin
- [[https://github.com/mxcl/homebrew][homebrew]] at Mac
- any package manager at Linux (apt-get at Ubuntu, yum at Redhat, pacman at Arch, emerge at Gentoo ...)
*** List of tools
These tools are *OPTIONAL*.

Please ignore any related error message. For example, if aspell and hunspell are not installed, you can ignore all the flyspell error messages.
**** w3m (web browser in console)
- Needed by =w3m= (w3m is emacs package name written in elisp)
- Install through OS package manager
- Please note only emacs with GUI can display image
**** lua
- Required by =flymake-lua=
- Install through OS package manager
**** aspell or hunspell
- Needed by =flyspell=
- hunspell is the alternative of =aspell=. So you need only one of them.
- Install through OS package manager
- For aspell, you may need its dictionary =aspell-en=
- I force the dictionary to "en_US" in =~/.emacs./lisp/init-spelling.el=. You can modify it.
- I recommend aspell for programmers

**** sbcl (lisp environment)
- Needed by lisp =slime=
- Install through OS package manager

**** tidy
- Needed by =web-mode= for syntax check and =tidy.el= html formatting
- Install through OS package manager

**** csslint
- Install =node.js= through OS package manager, then =sudo npm install -g csslint=

**** identify from [[http://www.imagemagick.org/][ImageMagick]]
- Needed by =org-mode= to export org file to odt file when image embedded
- Install through OS package manager
**** zip and unzip
- Needed by =org-mode= to export org file to odt file
- Install through OS package manager
**** jshint
- Install =node.js= through OS package manager, then =sudo npm install -g jshint=
- required by js-mode
- by default I use js2-mode which does NOT need jshint
**** xsel
- Needed by my clipboard command =copy-to-x-clipboard= and =paste-from-x-clipboard= under Linux
- Install through OS package manager

**** [[http://www.cmake.org][CMake]]
- Needed by =cpputils-cmake=
- Install through OS package manager
- Please use [[http://www.cmake.org/Wiki/CMake_FAQ][out-of-source build tree]] when using CMake

**** [[http://clang.llvm.org][Clang]]
- Needed by =cpputils-cmake=, =company-clang=
- Install through OS package manager
- If you use =cpputils-cmake= and =cmake=, =cpputils-cmake= will do all the setup for you. You don't need read next item! But please spend *a few minutes to learn the basics of cmake*! There is a one minute step-by-step-guide in [[https://github.com/redguardtoo/cpputils-cmake][README of cpputils-cmake]] to teach you how to use cmake.
- If you use =company-clang=, add =(setq company-clang-arguments '("-I/example1/dir" "-I/example2/dir"))= into ~/.emacs.d/init.el

**** GCC/Make
- Needed by =flymake=
- Install through OS package manager

**** [[https://addons.mozilla.org/en-us/firefox/addon/mozrepl/][MozRepl (Firefox addon)]]
- Needed by [[http://www.emacswiki.org/emacs/MozRepl][MozRepl]]
- Used by Firefox

**** [[http://ctags.sourceforge.net][CTags]]
- It creates tags file for code navigation and code completion
- Needed by many tags related packages
- Install through OS package manager
- See [[http://blog.binchen.org/?p=1057][How to use ctags in Emacs effectively]]

**** [[http://www.gnu.org/software/global][GNU Global]]
- Needed by =ggtags.el=
- It creates index files for code navigation
- More advanced than ctags, supports references and has better performance
- Install through OS package manager

**** LibreOffice
- Only one executable =soffice= needed when converting odt file into doc/pdf
- conversion happens automatically when exporting org-mode to odt
- The conversion command is in variable =org-export-odt-convert-processes=
- Install through OS package manager
**** js-beautify
- Beautify javascript code
- Install [[http://pip.readthedocs.org/en/stable/installing/][pip]] through OS package manager, then =pip install jsbeautifier=
**** syntaxerl
- syntax check [[http://www.erlang.org/][Erlang]] through flymake
- Install from [[https://github.com/ten0s/syntaxerl]]
**** jedi & flake8
- Required by [[https://github.com/jorgenschaefer/elpy][elpy]] which is python IDE
- At least =pip install jedi flake8=. Check elpy website for more tips.
**** sdcv (console version of StarDict)
- Required by sdcv.el
- Install through OS package manager
- Run =curl http://abloz.com/huzheng/stardict-dic/dict.org/stardict-dictd_www.dict.org_wn-2.4.2.tar.bz2 | tar jx -C ~/.stardict/dic= to install dictionary
**** [[https://github.com/ggreer/the_silver_searcher][the_silver_search (ag)]]
- Search text in files
- Required by `M-x my-grep`
- Install through OS package manager
* Usage
** Tutorial (OPTIONAL)
=~/.emacs.d/lisp/init-evil.el= contains my most frequently used key bindings.
*** Basic tutorial
Everyone should finish this tutorial at first.
**** Step 1, learn OS basics
At minimum you need know,
- What is [[https://en.wikipedia.org/wiki/Environment_variable][Environment variable]] 
- What is [[https://en.wikipedia.org/wiki/Pipeline_(Unix)][Pipeline (Unix)]], [[https://en.wikipedia.org/wiki/Standard_streams][Standard streams]]
**** Step 2, read official tutorial at least once
Press =C-h t= in Emacs ("C" means Ctrl key, "M" means Alt key) to read bundled tutorial. 

At minimum you need know:
- How to move cursor
- How to read help by pressing =C-h v= and =C-h f=.
**** Step 3, know org-mode basics
[[http://orgmode.org/][Org-mode]] is for notes-keeping and planning.

Please watch the [[https://www.youtube.com/watch?v=oJTwQvgfgMM][Carsten Dominik's talk]]. It's really simple. The only hot key to remember is =Tab=.
**** Step 4, solve your first problem
For that problem, you can visit [[http://www.emacswiki.org/emacs/][EmacsWiki]] for the solution. Newbies can ask for help at [[http://www.reddit.com/r/emacs/]].
*** Evil-mode tutorial
Required for vim user,
- Finish [[http://superuser.com/questions/246487/how-to-use-vimtutor][vimtutor]].
- Read ~/.emacs.d/site-lisp/evil/doc/evil.pdf
*** Methodology
See [[https://github.com/redguardtoo/mastering-emacs-in-one-year-guide][Master Emacs in One Year]].
** Key bindings
I only use key bindings defined in =~/.emacs.d/lisp/init-evil.el=.

For example, there is below code in that file,
#+begin_src elisp
(nvmap :prefix ","
       "bu" 'backward-up-list)
#+end_src

It means I press ",bu" to execute command =backward-up-list=.

So pressing ",bu" equals =M-x backward-up-list=. The official tutorials I recommended provide enough information about usage of the commands.

Besides, "[[http://blog.binchen.org/posts/how-to-be-extremely-efficient-in-emacs.html][How to be extremely efficient in Emacs]]" lists my frequently used commands.
* FAQ
** Toggle color theme
By default [[https://github.com/alloy-d/color-theme-molokai/blob/master/molokai-theme.el][color-theme-molokai]] is used.

But you can run the =M-x my-toggle-color-theme= to switch to the fallback theme =color-theme-deep-blue=.

You can change the definition of =my-toggle-color-theme= in =init-color-theme.el=.
** Start a shell inside Emacs
Please =M-x multi-term=.

If you want to use Zsh instead of Bash, please modify init-term-mode.el
** Use HTTPS instead of HTTP to download packages
=(setq melpa-use-https-repo t)=. =melpa-use-https-repo= is defined in init-elpa.el.
** Setup fonts in GUI Emacs
Non-Chinese use [[https://github.com/rolandwalker/unicode-fonts][unicode-fonts]] and Chinese use [[https://github.com/tumashu/chinese-fonts-setup][chinese-fonts-setup]].

Neither package is included in this setup. You need install them manually.
** Synchronize setup with Git
Most people should synchronize from my stable setup which is updated every 6 months:
#+begin_src bash
git pull https://redguardtoo@github.com/redguardtoo/emacs.d.git stable
#+end_src

But advanced users can use latest setup:
#+begin_src bash
git pull https://redguardtoo@github.com/redguardtoo/emacs.d.git
#+end_src

If you don't like my commits, you can revert them:
#+begin_src bash
# always start from the latest related commit
git revert commit-2014-12-01
git revert commit-2014-11-01
#+end_src
** Indentation
Learn [[http://www.emacswiki.org/emacs/IndentationBasics][basics]].

Then use [[http://blog.binchen.org/posts/easy-indentation-setup-in-emacs-for-web-development.html][my solution]].
** Editing Lisp
Please note [[http://emacswiki.org/emacs/ParEdit][paredit-mode]] is enabled when editing Lisp. Search "paredit cheat sheet" to learn its key bindings.
** Use [[https://github.com/Malabarba/smart-mode-line][smart-mode-line]] or [[https://github.com/milkypostman/powerline][powerline]]?
Comment out =(require 'init-modeline)= in init.el at first.
** Key bindings doesn't work?
Other software may intercept the key bindings. For example, someone [[https://github.com/redguardtoo/emacs.d/issues/320][reported QQ on windows 8 can intercept =M-x=]].
** Plugins doesn't work?
If two plugins conflicts, the more frequently used plugin takes priority.

But there exists workaround for less used plugin. Check "~/.emacs.d/lisp/init-evil.el" for the list of alternative.

For example, if =which-func-mode= cannot display function name at mode-line, you can use =M-x popup-which-function= instead.

=popup-which-function= is mentioned in init-evil.el.
** How to use org-mode
Press =M-x org-version=, then read corresponding online manual.

If you find anything doesn't work out of the box, it's because you haven't do the required setup required by official setup yet.

For example, =org-capture= need your [[http://orgmode.org/manual/Setting-up-capture.html#Setting-up-capture][manual setup]].
** OS X user?
You need replace legacy Emacs 22 and ctags with the new versions.

The easiest way is change [[https://en.wikipedia.org/wiki/PATH_(variable)][Environment variable PATH]].
** Locked packages
Some packages (Evil, Helm, Web-mode ...) are so important to my workflow that I locked their versions.

Those packages are placed at =~/.emacs.d/site-lisp=.

They will not be upgraded through ELPA automatically unless you delete corresponding folders.
** Customize global variables
Some variables are hard coded so you cannot "M-x customize" to modify them.

Here are the steps to change their values:
- Find the variable description by =M-x customize=
- For text "Company Clang Insert Arguments", search =company-clang-insert-argument= in =~/.emacs.d/lisp/=
- You will find =~/.emacs.d/lisp/init-company.el= and modify =company-clang-insert-argument=

BTW, please *read my comments* above the code at first.
** Open file with Ido
If you press =C-x C-f= to open a file, [[http://emacswiki.org/emacs/InteractivelyDoThings][Ido]] will show the completions.

You can keep pressing =C-f= to ignore the completions.
** Windows
I strongly suggest [[http://www.cygwin.com/][Cygwin]] version of Emacs. But native windows version is OK if you declare *Environment variable* HOME which points to a user directory =C:\Users\<username>= on Windows 7+. You need extract =.emacs.d= into the directory HOME points to.
** Yasnippet key bindings
Instead of =M-x yas-expand= or press TAB key, you may press =M-j= instead.
** Non-English users
Locale must be *UTF-8 compatible*. For example, as I type =locale= in shell, I got the output "zh_CN.UTF-8".
** Behind corporate firewall
Type below command in shell:
#+begin_src bash
http_proxy=http://yourname:passwd@proxy.company.com:8080 emacs -nw
#+end_src
** Government blocks the internet?
You may need [[https://github.com/goagent/goagent][goagent]]. Run command =http_proxy=http://127.0.0.1:8087 emacs -nw= in shell after starting goagent server.
** Email
If you use Gnus for email, check init-gnus.el and read [[http://blog.binchen.org/?p=403][my Gnus tutorial]].
** Cannot download ELPA packages?
Some package cannot be downloaded automatically because of network problem.

You could
- =M-x list-packages= to manually install it
- Or =M-x package-refresh-content= and restart Emacs. the package will be installed automatically
** Disable vim key binding
By default EVIL (Vim emulation in Emacs) is used. You can comment out line containing =(require 'init-evil)= in init.el to unload it.
** Evil setup
It's defined in "~/.emacs.d/lisp/init-evil.el". Press =C-z= to switch between Emacs and Vim key bindings.

Please reading [[https://gitorious.org/evil/evil/blobs/raw/doc/doc/evil.pdf][its PDF manual]] before using evil-mode.

** C++ auto-completion doesn't work?
I assume you are using company-mode. Other packages have similar setup.

At minimum:
- You need install clang
- Make sure your code is syntax correct at the beginning
- assign reasonable value into company-clang-arguments

Here is sample code:
#+begin_src elisp
(setq company-clang-arguments '("-I/home/myname/projs/test-cmake" "-I/home/myname/projs/test-cmake/inc"))
#+end_src

In "friendly" Visual C++, you need do [[http://www.codeproject.com/Tips/588022/Using-Additional-Include-Directories][similar setup]].

** Color theme
*** Preview color theme
Check [[https://emacsthemes.com/]].

Write down the name of color theme (for example, molokai).

*** Setup color theme manually (recommended)
Insert below code into "~/.emacs.d/lisp/init-color-theme.el",
#+BEGIN_SRC elisp
;; the color theme name "molokai"" could be replaced with other theme name
(require 'color-theme-molokai)
(color-theme-molokai)
#+END_SRC

"M-x color-theme-select" *may not work* because of some design flaw in Emacs.

Please note there is *NO unified way* to enable color theme. You need read color theme's documentation at first.

My sample code works for most color themes.

If you *insist on configuring the color theme in a different way*, please,
- Comment out the line containing =(require 'init-color-theme)= in =~/.emacs.d/init.el= at first
- Read [[http://www.emacswiki.org/emacs?action=browse;oldid=ColorTheme;id=ColorAndCustomThemes][EmacsWiki]]
*** Use color theme in terminal
#+BEGIN_SRC sh
TERM=xterm-256color emacs -nw
#+END_SRC
** Chinese Input Method Editor
Run command =M-x toggle-input-method= to toggle input method. A 20M Chinese dictionary is already provided.

If your *personal* word file =~/.eim/pyim-personal.txt= exists, it will be used.

Or else =~/.emacs.d/pyim/pyim-personal.txt= will be created.

** Install Emacs elsewhere
Run below commands:
#+begin_src sh
mkdir -p ~/tmp;
curl http://ftp.gnu.org/gnu/emacs/emacs-24.3.tar.gz | tar xvz -C ~/tmp/emacs-24.3
cd ~/tmp/emacs-24.3;
mkdir -p ~/myemacs/24.3;
rm -rf ~/myemacs/24.3/*;
./configure --prefix=~/myemacs/24.3 --without-gtk --without-gtk3 --without-aqua --without-x --without-xpm --without-png --without-gif --without-alsa --without-tiff --without-jpeg --without-aqua --without-rsvg --without-xft --without-xaw3d --without-xim --without-xpm --without-dbus --without-makeinfo --with-x-toolkit=no --without-sound --without-sync-input --without-pop;make;make install
#+end_src

Feel free to replace 24.3 with other version number.
** Directory structure
=~/.emacs.d/init.el= is the main file. It includes all the other *.el files.

=~/.emacs.d/lisp/init-elpa.el= defines how and what packages will be installed from [[http://melpa.org][MELPA]].

The package manager will extract packages into =~/.emacs.d/elpa/=.

I also manually download and extract some packages into =~/.emacs.d/site-lisp/=. Packages in =~/.emacs.d/site-lisp/= is not visible to the package manager.

My own snippets for [[https://github.com/capitaomorte/yasnippet][Yasnippet]] is at =~/.emacs.d/snippets=.

Other directories don't matter.

** About Emacs 23
Emacs 23 support was dropped on <2015-04-21>.

The latest Emacs23 compatible version of setup is 1.2!

Here are the steps to use that setup:
- Download [[https://github.com/redguardtoo/emacs.d/archive/1.2.zip]]
- Download [[https://github.com/redguardtoo/myelpa/archive/1.2.zip]]
- Follow the section "Install stable version in easiest way" but skip the download steps

Since most third party plugins don't support Emacs 23 any more. I strongly recommend you upgrading to Emacs 24 instead!

Emacs is *portable* on any platform. So you can install Emacs even when you are not root of the Linux server. Please read "Install Emacs at home directory" for HOW
* Tips
- Never turn off any bundled mode if it's on by default. Future version of Emacs may assume it's on. Tweak its flag in mode hook instead!
- Git skills are *extremely useful*. Please read the chapters "Git Basics", "Git Branching", "Git Tools" from [[https://git-scm.com/book/en/][Pro Git]]
* Report bug
- Check [[http://www.emacswiki.org/emacs/][EmacsWiki]] and my FAQ at first to find a solution, please
- If your issue is still NOT resolved, restart Emacs with option =---debug-init=, run =M-x toggle-debug-on-error= in Emacs, reproduce the issue
- Send the error messages to the original developer if it's third party package issue
- If you are *sure* it's my issue, file bug report at [[https://github.com/redguardtoo/emacs.d]]. Don't email me directly!

Bug report should include details (OS, Emacs version ...).
