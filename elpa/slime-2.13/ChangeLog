2015-02-19  Luís Oliveira  <loliveira@common-lisp.net>

	* slime.el (slime-cycle-connections): It's an obsolete function,
	not an obsolete variable.
	(slime-prev-connection): Tweak docstring.

2015-02-12  Stas Boukarev  <stassats@gmail.com>

	* swank/sbcl.lisp (definition-source-buffer-and-file-location):
	Fix xrefs from C-c C-c. source-file-position may now return NIL,
	be prepared.

2015-02-08  Adlai Chandrasekhar  <adlai.chandrasekhar@gmail.com>

	* slime.el (slime-next-connection, slime-prev-connection): New
	functions for cycling connections in both directions, deprecating
	slime-cycle-connections and adding 'C-c C-x p' (and ?p in
	slime-selector) for cycling in the opposite direction.

2015-01-28  Helmut Eller  <heller@common-lisp.net>

	* swank/source-path-parser.lisp (skip-toplevel-forms): Use the
	package tracking code; return multiple values instead of a macro.
	Also remove the error handling; let it crash.
	(skip-one-toplevel-form): New helper.
	(call-with-skipping-toplevel-forms, with-skipping-toplevel-forms):
	Merged into skip-toplevel-forms.

2015-01-27  Gábor Melis  <mega@retes.hu>

	* Makefile (clean-fasls): Don't fail if ~/.slime/fasl/ does not
	exist.

	* swank/source-path-parser.lisp: Make source parser to honor
	SWANK:*READTABLE-ALIST* which makes M-. work on SBCL even if
	skipping over forms requires a special readtable.

2015-01-27  Helmut Eller  <heller@common-lisp.net>

	* lib/hyperspec.el (common-lisp-hyperspec-root): Use file://
	in example.

2015-01-02  Luís Oliveira  <loliveira@common-lisp.net>

	* slime.el (slime-path): Only set slime-path at load-time. Setting
	at compile time is potentially premature if compilation is not
	immediately followed by loading. (See gh issue #125 for more
	discussion.)
	(slime--changelog-file-name): New function. Computes
	the location of the SLIME ChangeLog based on
	byte-compile-current-file at compile time, or based on slime-path
	at load time when slime.el is not compiled.
	(slime-changelog-date): Use slime--changelog-file-name. No longer
	looks at slime-path at compile time.

2015-01-05  Christian Schafmeister  <chris.schaf@verizon.net>

	* swank/clasp.lisp: New file.

	* swank-loader.lisp (*sysdep-files*, *implementation-features*)
	(clasp-version-string, lisp-version-string): Added CLASP backend.

2014-12-23  Daniel Kochmański  <dkochmanski@gmail.com>

	* swank-loader.lisp (*architecture-features*): Add ARM architectures
	as reported by ECL (armv5l, armv6l and armv7l) to mentioned variable.

2014-12-17  Luís Oliveira  <loliveira@common-lisp.net>

	* swank-loader.lisp (delete-packages): Robustify in case some
	package outside the set returned by LIST-SWANK-PACKAGES uses one
	of the SWANK packages. Previous version would enter an infinite
	loop.

2014-12-15  Luís Oliveira  <loliveira@common-lisp.net>

	Fix deletion of SWANK packages in swank-loader.lisp. Reported by
	Ruben Vaz.

	* swank-loader.lisp (list-swank-packages): Catch more SWANK
	packages.
	(string-starts-with): Refactored out from LIST-SWANK-PACKAGES.
	(delete-packages): New function capable of
	deleting interdependent packages.
	(init): Use it.

2014-12-12  Luís Oliveira  <loliveira@common-lisp.net>

	Don't try to save every changed buffer when compiling a file.

	* slime.el (slime--maybe-save-buffer): New function adapted from
	slime--save-some-buffers that maybe saves the current buffer
	rather than potentially every changed buffer.
	(slime-compile-file): Use it.

2014-12-04  Adlai Chandrasekhar  <adlai.chandrasekhar@gmail.com>

	Factor out an "AST-sugar" macro for concisely stating a condition
	system idiom: restarting an operation after performing one or more
	changes to its execution state and environment.

	* swank.lisp (restart-loop, socket-quest): Factor out the macro, and
	refactor socket-quest with it.

2014-12-04  Adlai Chandrasekhar  <adlai.chandrasekhar@gmail.com>

	Factor out the socket-quest function, which also incorporates a default
	behavior of incrementing the port number by one.

	* swank.lisp (socket-quest, setup-server): Factor out the former, and
	call it from the latter.
	* contrib/swank-repl.lisp (open-dedicated-output-stream): Drop in a call
	to our new quest-wrapper, for good measure.

2014-12-04  Adlai Chandrasekhar  <adlai.chandrasekhar@gmail.com>

	Add a loop around the port number restart to allow multiple tries.

	* swank.lisp (setup-server): Successful socket creation terminates
	the loop through the return statement.

2014-12-04  Adlai Chandrasekhar  <adlai.chandraeskhar@gmail.com>

	* swank.lisp Delete trailing whitespace.

2014-11-18  Adlai Chandrasekhar  <adlai.chandrasekhar@gmail.com>

	Add a restart around socket creation to allow trying other ports
	should the initially selected number be unavailable.

	* swank.lisp (setup-server): Offer a use-value restart around the
	call to backend code, which retries the call on a different port.

2014-11-28  Luís Oliveira  <loliveira@common-lisp.net>

	Restore workingness for Allegro's modern mode.

	* swank/allegro.lisp (gray-package-name): Let the reader decide
	whether the package name is in lower or upper case.

2014-11-26  Luís Oliveira  <loliveira@common-lisp.net>

	Make sure the contrib directory is pushed to load-path so that
	package.el succeeds in byte compiling the contribs.

	* slime.el (slime--setup-contribs): Always push the contrib
	directory to load-path, even if there aren't any contribs to load.

2014-11-22  Luís Oliveira  <loliveira@common-lisp.net>

	Avoid compiling a stale slime-path into slime.elc when upgrading
	SLIME within an Emacs session, e.g. via MELPA. (gh issue #125)

	* slime.el (slime-path): Use setq.

2014-11-18  Luís Oliveira  <loliveira@common-lisp.net>

	Regression test for slime-recompile-all-xrefs.

	* slime-tests.el (slime-recompile-all-xrefs): New test.

2014-11-18  Bart Botta  <00003b@gmail.com>

	* slime.el (slime-all-xrefs): Call forward-line directly instead
	of slime-next-line/not-add-newlines.
	(slime-next-line/not-add-newlines): Delete.

2014-11-17  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-all-xrefs): Know when to stop iterating over
	buffer lines.

2014-11-16  Bart Botta  <00003b@gmail.com>

	Fix source locations when recompiling from an xref buffer.

	* slime.el (slime-recompile-locations): Pass full filenames to
	swank:compile-multiple-strings-for-emacs.

2014-11-14  Luís Oliveira  <loliveira@common-lisp.net>

	* doc/slime.texi (Installation): Reworked to add MELPA
	instructions.

	* doc/contributors.texi: Include this auto-generated file so that
	MELPA is able to build the manual.

	* README.md: Add instructions on how to use MELPA to install SLIME
	and move the Git instructions to the manual and other minor
	tweaks.

2014-10-10  Luís Oliveira  <loliveira@common-lisp.net>

	* swank-loader.lisp (init): Delete swank/* packages.
	(dump-image): use SWANK/BACKEND.

2014-10-09  Luís Oliveira  <loliveira@common-lisp.net>

	* swank/backend.lisp (swank/backend): Add SWANK-BACKEND nickname
	to ease the migration of external projects.

2014-10-02  Helmut Eller  <heller@common-lisp.net>

	Can't use Gray streams for ABCL

	* swank/abcl.lisp (make-output-stream, make-input-stream): Use
	ext:make-slime-output-stream because ABCL's Gray streams don't
	work well enough.
	* swank-loader.lisp (*sysdep-files*, *swank-files*): Don't load
	swank/gray.lisp for ABCL.

2014-10-01  Luís Oliveira  <luismbo@gmail.com>

	* swank-loader.lisp (src-files): inherit src-dir's defaults,
	otherwise things like the Windows drive won't be picked up.

2014-09-30  Robert P. Goldman  <rpgoldman@gmail.com>

	* doc/slime.texi (Other configurables): fixed anchor and
	cross-reference since makeinfo doesn't colons in reference
	targets.

2014-09-30  Helmut Eller  <heller@common-lisp.net>

	* swank/backend.lisp (codepoint-length): Deleted. No longer used.

2014-09-30  Helmut Eller  <heller@common-lisp.net>

	Fix some compiler warnings.

	* slime-tests.el (slime-tests--undefine-all): Use cl-remprop
	instead of remprop.
	(slime-test--compile-defun): Fix typo.

2014-09-30  Helmut Eller  <heller@common-lisp.net>

	Fix github issue #193.  Respect compilation-ask-about-save.

	* slime.el (slime--save-some-buffers): New helper.
	(slime-compile-file): Use it.

	* slime.el (slime-echo-arglist): Renamed from slime-show-arglist
	as there still users of it.

2014-09-30  Helmut Eller  <heller@common-lisp.net>

	* swank/cmucl.lisp: Require at least version 20c and remove some
	code that was there only for compatibility with older versions.

2014-09-30  Helmut Eller  <heller@common-lisp.net>

	* swank/cmucl.lisp, swank/sbcl.lisp: Whitespace cleanup.

2014-09-30  Helmut Eller  <heller@common-lisp.net>

	Fix github issue #192

	sb-sys:enable-interrupt does not exist on SBCL +win32
	so disable it on Windows.

	* swank/sbcl.lisp (add-sigio-handler, remove-sigio-handlers):
	Disable it on Windows along with install-sigint-handler.

2014-09-29  Helmut Eller  <heller@common-lisp.net>

	More deadlock workaround workarounds.

	* swank/sbcl.lisp (stream-force-output): Use swank/gray.

2014-09-26  Helmut Eller  <heller@common-lisp.net>

	* slime-tests.el (compile-defun-with-backquote): Fails for
	SBCL also on Travis now.
	(compile-file): Works for LispWorks.

2014-09-26  Helmut Eller  <heller@common-lisp.net>

	Fix github issue#190

	* swank/clisp.lisp: Use swank/clisp as package qualifier where
	needed.

2014-09-13  Helmut Eller  <heller@common-lisp.net>

	Move backend files to new swank/ directory.

	In the swank/ directory drop the swank- prefix from filenames.

	To mirror the directory structure in package names use swank/
	instead of swank- as prefix.  (This will presumably break a lot of
	code as many people seem to assume that a swank-backend package
	exists.)

	* swank-loader.lisp (src-files): Treat lists like (swank foo) as
	the filename swank/foo.lisp.

2014-09-13  Helmut Eller  <heller@common-lisp.net>

 	Add support for MKCL

	* swank-mkcl.lisp: New file. Mostly the one from MLCL's contrib/
	directory.
	* swank-loader.lisp (*sysdep-files*): Add swank-mkcl and move
	swank-gray to the shared *swank-files*.

2014-09-13  Helmut Eller  <heller@common-lisp.net>

	Remove no longer needed indirections.

	* slime.el (slime-echo-arglist-function, slime-echo-arglist):
	Deleted.  slime-autodoc was the only client and the indirection
	makes the code unnecessary complicated.
	(slime-space): Call slime-show-arglist directly.

2014-09-12  Douglas Katzman  <dougk@google.com>

	* swank-sbcl.lisp (macroexpand-all): sb-cltl2:macroexpand-all is
	preferable to using sb-walker directly

2014-09-10  Helmut Eller  <heller@common-lisp.net>

	Fix gray stream issue for SBCL

	The pretty printer seems to call the non-standard
	stream-line-length generic function.

	* swank-sbcl.lisp (sb-gray:stream-line-length): Implement default.

2014-09-10  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (frame-call): Muffle unreachable code warnings.

2014-09-09  Helmut Eller  <heller@common-lisp.net>

	Rename destructure-case -> slime-dcase.

	That keeps the namespace clean, even though it's unlikely that
	anybody else would have used that name.
	Do the analog destructure-case -> dcase renaming on the CL side
	to keep the names similar.

	* slime.el (slime-dcase): Renamed from destructure-case. Update
	users accordingly.
	* swank.lisp (dcase): Renamed from destructure-case. Update users
	accordingly.

2014-09-09  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (gray-package-name): Fix docstring.

2014-09-09  Helmut Eller  <heller@common-lisp.net>

	Make the ugly deadlock workaround even more ugly.

	* swank-sbcl.lisp (stream-force-output): Create swank-gray package
	early enough.

2014-09-09  Helmut Eller  <heller@common-lisp.net>

	Remove non-used optional gray stream methods.

	* swank-gray.lisp (stream-read-char-will-hang-p)
	(stream-line-length): Deleted.

2014-09-08  Helmut Eller  <heller@common-lisp.net>

	Use a separate package for swank-gray.lisp.
	Use gray streams also for CMUCL, SCL, and ABCL.

	* swank-backend.lisp (gray-package-name): New interface function.
	(import-from): Deleted. No longer used.
	(*gray-stream-symbols*): Moved to swank-gray.lisp.
	* swank-abcl.lisp, swank-cmucl.lisp, swank-scl.lisp
	(gray-package-name): Implemented and delete old implementations of
	make-input-stream and make-output-stream.
	* swank-allegro.lisp, swank-ccl.lisp, swank-clisp, swank-ecl.lisp,
	swan-lispworks.lisp, swank-sbcl.lisp,  (gray-package-name):
	Implemented.
	* swank-gray.lisp: Make and use swank-gray package for this file.
	* swank-loader.lisp (*sysdep-files*): Load swank-gray for CMUCL,
	SCL, and ABCL.

2014-09-07  Helmut Eller  <heller@common-lisp.net>

	Replace cl-values with list because that's shorter.

	* slime.el (slime-group-and-sort-notes,
	(slime-insert-compilation-log)
	(slime-goto-next-xref): Use list.

2014-09-07  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp, swank-scl.lisp (*source-snippet-size*):
	Remove redundant definitions.

2014-09-07  Helmut Eller  <heller@common-lisp.net>

	* Makefile (compile-swank, run-swank): New targets.
	(clean-fasls): Also remove ~/.slime/fasl/.

2014-09-07  Helmut Eller  <heller@common-lisp.net>

	Clear all tests out at the beginning.

	* slime-tests.el (slime-tests--undefine-all): New function.

2014-09-07  Helmut Eller  <heller@common-lisp.net>

	Use one package per backend to make interfaces more explicit.

	* swank-abcl.lisp, swank-allergo.lisp, swank-ccl.lisp,
	swank-clisp.lisp, swank-ecl.lisp, swank-lispworks,
	swank-sbcl.lisp, swank-scl.lisp, swank-source-file-cache.lisp,
	swank-source-path-parser.lisp: Use packages.
	* swank-backend.lisp: Export some more stuff.

2014-09-07  Helmut Eller  <heller@common-lisp.net>

	Get rid of when-let as it conflicts with a definition subr-x.el

	* slime.el (when-let): Deleted. Update all uses accordingly.

2014-09-02  Luís Oliveira  <loliveira@common-lisp.net>

	* doc/slime.texi: use plain rather than typographical quotes in
	code blocks so that examples from the PDF manual can be copy and
	pasted directly.

2014-09-02  Helmut Eller  <heller@common-lisp.net>

	Factor out the backquote test.

	* slime-tests.el (slime-test--compile-defun): New helper.
	([test] compile-defun, compile-defun-with-reader-conditionals):
	Use it.
	([test] compile-defun-with-backquote): New.

2014-09-02  Helmut Eller  <heller@common-lisp.net>

	Allow partially visible lines when scrolling.
	[github issue #186]

	* slime.el (slime--adjust-window-start)
	(slime--adjust-window-point): Relax the assertion to allow
	partially vsible lines.

2014-08-26  Helmut Eller  <heller@common-lisp.net>

	SBCL's reader changed recently. Fix some issues caused by that.

	* swank-source-path-parser.lisp (make-source-recording-readtable):
	Wrap the sharp-dot "#." reader before wrapping the dispatch macro
	"#" because with the new reader get-dispatch-macro-character
	doesn't work if "#" is wrapped first.  Suggested by Paulo Madeira.
	(skip-whitespace): New helper.
	(read-source-form): Use it.  Skipping over whitespace is a slight
	improvement and seems fairly conservative.
	* slime-tests.el ([test] find-definition.2-2): New test.

2014-08-18  Mark Evenson  <evenson.not.org@gmail.com>

	* swank-abcl.lisp: Adjust MOP symbols to publically exported
	version.

   	* swank-abcl.lisp (frame-locals): Implement inspection of sldb
 	frame args.  Thanks to Theam Yong Chew.

2014-08-01  Helmut Eller  <heller@common-lisp.net>

	For CMUCL, make M-. work on condition classes.

	* swank-cmucl.lisp (pcl-class-location): Renamed from
	class-location.
	(class-location): New.
	(class-definitions): Search condition classes in infodb.

2014-07-29  Helmut Eller  <heller@common-lisp.net>

	* Makefile (clean-fasls): Recognize more file extensions.

2014-07-29  Helmut Eller  <heller@common-lisp.net>

	Avoid some compiler warnings.

	* swank-backend.lisp (utf8-encode): Avoid unreachable code
	warnings.
	(%utf8-encode): New helper.
	* swank-sbcl.lisp (sbcl-wrap): Add ignore declaration.
	* swank.lisp (before-init): Don't call
	warn-unimplemented-interfaces as it confuses first time users.
	(thread-for-evaluation): Suppress unused var warnings.

2014-07-28  Helmut Eller  <heller@common-lisp.net>

	Fix bug involving stale window-end.

	Call window-end with update=t.  That works better than calling
	redisplay when we scroll because window-end may be wrong even
	without scrolling.

	* slime.el (slime--adjust-window-point): Call window-end with
	update argument.
	(slime--adjust-window-start): Remove explicit call to redisplay.
	Stricter assertion: LAST should be visible as long as
	REGION-HEIGHT <= WINDOW-HEIGHT not <.
	* slime-tests.el (display-region): Actually check point ends up as
	expected.  The old code was buggy and only checked for non-nil.

2014-07-27  Helmut Eller  <heller@common-lisp.net>

	Fix another off-by-one bug.

	* slime.el (slime--adjust-window-start): Scroll one line more.
	Also handle case when (= start end 1).
	* slime-tests.el (display-region): Add test.

2014-07-27  Helmut Eller  <heller@common-lisp.net>

	Don't use cl-labels as it is miscompiled in some Emacs versions.

	* slime.el (define-slime-contrib): Get rid of cl-labels.
	(slime-contrib--enable-fun, slime-contrib--disable-fun): New
	helpers.

2014-07-27  Helmut Eller  <heller@common-lisp.net>

	Update modeline more often.

	The numbers in the modeline can be out of date when all RPCs
	complete without user input; probably because modeline updating is
	performed in some lazy way.

	* slime.el (slime--recompute-modelines): Resurrected.
	(slime-dispatch-event): Force modeline updates.
	(slime-modeline-string): Deleted. The variable is no longer
	needed.

2014-07-27  Helmut Eller  <heller@common-lisp.net>

	Fix display related bugs.

	* slime.el (slime--adjust-window-start): Consider the END argument
	exclusive but count trailing newlines normally.  Adjust the
	assertion so that (1- END) is the last visible position.
	* slime-tests.el (display-region):  Add tests for the situation
	when (1- END) should be visible but not END.

2014-06-17  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (emacs-inspect sb-kernel:code-component):
	There's no TRACE-TABLE-OFFSET slot. Don't bother showing it on
	older SBCLs, since it isn't really useful.

2014-05-16  Helmut Eller  <heller@common-lisp.net>

	Fix display related bugs.

	* slime.el (slime--display-region): Renamed from slime-recenter.
	Also work in the case when the condition message takes up the
	entire window.
	(slime--adjust-window-start, slime--adjust-window-point): New
	helpers.
	(slime-show-source-location): Display buffer in other window, as
	it always was.  Invert no-highlight-p argument to simplify
	callers.  Add recenter-arg to get rid of the heuristic that
	detected "sldb show source" vs. "show definition".
	(slime--display-position): Factored out, again.

	* slime-tests.el (display-region):  New test.
	(slime-test--display-region-line-to-position)
	(slime-test--display-region-eval-arg): New Helpers.

2014-05-15  Helmut Eller  <heller@common-lisp.net>

	* slime-tests.el: Break long lines.

2014-05-10  Stas Boukarev  <stassats@gmail.com>

	* swank-rpc.lisp (prin1-to-string-for-emacs): Convert floats into
	double-floats, when possible. Emacs lisp only has double floats.

2014-05-08  Gábor Melis  <mega@retes.hu>

	* swank-allegro.lisp (function-name, find-source-location): New.

	* swank-backend.lisp (find-source-location): Fix name in error
	message.

2014-05-06  Stas Boukarev  <stassats@gmail.com>

	* swank-source-path-parser.lisp (make-source-recorder): Remove
	FUNCTION type declaration, get-macro-character returns a
	designator, not a function. Recent changes to SBCL exposed the
	problem.

2014-04-27  Christophe Rhodes  <csr21@cantab.net>

	* slime.el (slime-eval-with-transcript): Fix typo in docstring.

2014-04-27  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-init-command): Also use `slime-to-lisp-filename'
	for the port-filename.

2014-04-26  João Távora  <joaotavora@gmail.com>

	* slime.el (sldb-exit): An indirect, non-interactive exit from an
	*sldb* buffer should just kill the buffer.

2014-04-15  João Távora  <joaotavora@gmail.com>

	* slime-tests.el (compile-defun-with-reader-conditionals): Renamed
	from `compile-defun-with-reader-characters'. Break long lines.

	* .travis.yml (env): Don't overtest on Emacs 23, as per comment.
	(install): No need for trailing semicolon.

2014-04-15  Phil Hargett  <phil@haphazardhouse.net>

	* slime-tests.el (compile-defun): Test split into two parts.
	(compile-defun-with-reader-characters): Split from `compile-defun'
	as CCL does not pass this part.
	* .travis.yml (env): added targets to include CCL 1.9 for Travis
	builds

2014-04-12  João Távora  <joaotavora@gmail.com>

	Unbreak CCL and CLISP and cleanup ChangeLog.

	* metering.lisp ("SWANK-MONITOR"): Enter SWANK-MONITOR package.

2014-04-10  Phil Hargett  <phil@haphazardhouse.net>

	Using nicknames, especially short terse ones, are more likely to
	create package name conflicts with othe packages.  Since swank is
	widely used, its better to avoid using nicknames (or at least
	short ones).  All package nicknames removed.

	Further, the MONITOR package has been renamed SWANK-MONITOR for
	the same reason: without the extra qualification, the name could
	conflict with other packages.

	* contrib/swank-trace-dialog.lisp (defpackage swank-trace-dialog):
	removed :std nickname

	* metering.lisp (defpackage "MONITOR"): removed MON nickname,
	touched up references in comments

	* swank-ccl.lisp (profile, profiled-functions, unprofile)
	(unprofile-all, profile-report, profile-reset, profile-package):
	replaced use of nickname MON with new package name SWANK-MONITOR

	* swank-clisp.lisp (profile, profiled-functions, unprofile)
	(unprofile-all, profile-report, profile-reset, profile-package):
	replaced use of nickname MON with new package name SWANK-MONITOR

2014-04-10  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-trim-whitespace): Handle multiline strings.

2014-04-01  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (%%condition-message): Bind *print-readably* for good
	measure.

	* swank-sbcl.lisp (set-default-directory): Call chdir.

2014-03-29  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-describe-function): Be a little more precise and
	prompt for a symbol naming a function.

2014-03-28  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-init-command): Use `slime-to-lisp-filename'.

2014-03-27  João Távora  <joaotavora@gmail.com>

	Previous changes broke compilation for definitions in buffers that
	don't have files(like *slime-scratch*). Finding definitions in
	buffers that have a file name that doens't exist in the
	file-system was also broken.

	Also WHO-CALLS functionality for top-level forms is unreliable in
	ACL, be it for temp or other loading mechanisms. For the former,
	note *TEMP-FILE-MAP* might point to dead buffers and for the
	latter, there is not enough file info in the .fasl
	annotations. See http://franz.com/support/documentation/ \
	current/doc/cross-reference.htm#in-functions-arg-2.

	Therefore, this change also deletes the previous attempt by
	FSPEC-DEFINITION-LOCATIONS to reliably follow :TOP-LEVEL-FORM
	references..

	* swank-allegro.lisp (fspec-definition-locations): Don't attempt
	to interpret :TOP-LEVEL-FORM fspecs, since file info is always
	unreliable.

	* swank-allegro.lisp (compile-from-temp-file): Reinstate recording
	in *TEMP-FILE-MAP* for all compilations. It is still useful if we
	haven't saved the buffer or are operating from a file-less buffer,
	like *slime-scratch*

2014-03-27  João Távora  <joaotavora@gmail.com>

	* swank-allegro.lisp (write-tracking-preamble): New function,
	rewritten from previous hunk in COMPILE-FROM-TEMP-FILE for
	clarity.  Also adds PATHNAME call which broke the previous
	approach.
	(compile-from-temp-file): In Allegro 9.0, make redefinition
	warnings trigger only once now that compilation and loading from
	temp files are separate steps.

2014-03-27  Paulo Madeira  <acelent@gmail.com>

	Improve source file recording for ACL backend.

	Finding definitions compiled with SWANK:SWANK-COMPILE-STRING
	relied on a hash table mapping temporary file names to buffer
	names, which broke when the original buffer was closed. A new
	approach imitate's Franz's own ELI/LEP's and writes a preamble to
	each temp file that sets the correct values for
	EXCL::*SOURCE-PATHNAME* and *EXCL::*PARTIAL-SOURCE-FILE-P*
	pointing to the correct spot in the original file.

	For strings compiled in buffers with no file name, the previous
	temp-file-to-buffer mapping is kept.

	* swank-allegro.lisp (compile-from-temp-file): Use same technique
	as ELI to store source pathname and position when compiling from
	file buffers.  Don't store buffer mapping for file buffers.  Don't
	prevent redefinition warnings for different source pathnames.
	(buffer-or-file, find-fspec-location) Don't use buffer mapping for
	file buffers.

2014-03-27  Helmut Eller  <heller@common-lisp.net>

	Make it easier to specify regexps as test selector.

	* Makefile (check): Use ' instead of " to avoid some of the
	bizarre shell quoting rules.  Don't evaluate SELECTOR.
	(SELECTOR): Extra quoting no longer needed.
	* Makefile (test): New target.

2014-03-27  Helmut Eller  <heller@common-lisp.net>

	Fix bug in slime-complete-restore-window-configuration.

	* slime.el (slime-complete-restore-window-configuration): Don't
	use a timer.  That was only needed for XEmacs and it was
	accidentally started multiple times.

	* slime-tests.el (read-from-minibuffer): New test.

2014-03-24  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-popup-buffer-mode): A SLIME popup buffer is
	always read-only.
	(slime-recenter): New function.
	(sldb-show-frame-details, sldb-setup): Use `slime-recenter'.

2014-03-19  Paulo Madeira  <acelent@gmail.com>

	Fix Allegro CL backend problem with temporary files.

	* swank-allegro.lisp (swank-compile-string): Don't bind
	*default-pathname-defaults*.

2014-03-09  João Távora  <joaotavora@gmail.com>

	Save and restore windows that popped debugger windows.

	* slime.el (sldb-setup): Save previous window.
	(sldb-exit): Restore.

	Corrections after comments from Helmut.

	* slime.el (slime-with-popup-buffer): Restore `mode' keyword arg,
	defaults to `fundamental-mode'. Compute package and connection in
	calling buffer.
	(slime-with-popup-buffer): Bind q to `quit-window'
	(slime-popup-buffer-quit): Remove it.
	(slime-show-compilation-log, slime-edit-value-callback)
	(slime-show-apropos, slime-with-xref-buffer)
	(slime-create-macroexpansion-buffer, slime-list-threads)
	(slime-list-connections, slime-inspector-buffer): Restore mode
	arg.
	(slime-goto-note-in-compilation-log): Fix search and recenter
	(slime-edit-value-commit, slime-goto-xref, sldb-exit)
	(sldb-close-step-buffer, slime-quit-threads-buffer)
	(slime-inspector-quit): Use `quit-window'
	(slime-show-source-location): Fix it.
	(sldb-show-frame-details): Fix it (sldb-recenter-region was gone).
	(slime-list-threads): Don't `local-set-key'.
	(slime-thread-control-mode-map): Bind `q' here.
	(slime-inspector-mode): Restore docstring.

	* slime-tests.el (narrowing): Use `quit-window'.

2014-03-07  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-popup-restore-data): Delete it.
	(slime-with-popup-buffer): Remove `mode' arg. Redesign.
	(slime-make-popup-buffer,slime-init-popup-buffer)
	(slime-display-popup-buffer, slime-close-popup-window)
	(slime-save-local-variables): Remove these functions.
	(slime-popup-buffer-mode-map): Define this existing map
	separately.
	(slime-popup-buffer-mode): Don't use :keymap arg.
	(minor-mode-alist): Remove XEmacs hack
	(slime-popup-buffer-quit-function): Remove it
	(slime-popup-buffer-quit): Use `quit-window'
	(slime-show-compilation-log, slime-edit-value-callback)
	(slime-show-apropos, slime-with-xref-buffer)
	(slime-create-macroexpansion-buffer, slime-list-threads)
	(slime-list-connections, slime-inspector-buffer): Don't pass :mode
	arg to `slime-with-popup-buffer'.
	(slime-goto-note-in-compilation-log): Redesign and use `recenter'
	instead of `slime-show-buffer-position'.
	(slime-goto-next-xref): Don't use `slime-show-buffer-position'
	(sldb-setup): Use just `pop-to-buffer'
	(slime-show-buffer-position): Remove it.
	(sldb-recenter-region): Remove it.
	(slime-show-source-location): Use `select-window' and `recenter'.
	(slime-saved-window-config): Removed.
	(slime-inspector-quit): Don't use `slime-saved-window-config'
	(slime-inspector-mode): Enters `slime-popup-buffer-mode' minor
	mode.
	(slime-inspector-mode-map): Bind `q' to `slime-inspector-quit'.

2014-03-07  João Távora  <joaotavora@gmail.com>

	Removed XEmacs portability layer, fix some FIXME's, simplify
	indentation specs.

	* slime.el (require): Don't require features active by default on
	GNU emacs.
	(slime-underline-color): Removed
	(slime-error-face, slime-warning-face, slime-note-face): Don't use
	`slime-underline-color'
	(slime-map-alist): Removed it
	(slime-indulge-pretty-colors): Removed it. Font locking done all
	in one place.
	(slime-rex, slime-start, sldb-in-face): Fix indentation.
	(slime-recompute-modelines, slime-xemacs-recompute-modelines)
	(slime-run-when-idle)
	(slime-minibuffer-respecting-message)
	(slime-push-definition-stack, slime-pop-find-definition-stack)
	(slime-recompile-bytecode, slime-safe-encoding-p)
	(slime-connection-port, slime-xref-mode-map)
	(define-slime-contrib): Remove XEmacs hacks.
	(slime-define-channel-type, slime-define-channel-method)
	(when-let, slime-define-keys, with-struct)
	(slime-propertize-region, slime-with-rigid-indentation)
	(slime-with-connection-buffer, slime-def-connection-var)
	(slime-rex, slime-eval-async, slime-point-moves-p): Use`declare'
	form for indentation.
	(slime-connection): Use `slime-auto-start'.
	(slime-auto-connect): Renamed to `slime-auto-start'. Provide
	obsolete alias.
	(slime-dispatch-event): Don't use `slime-recompute-modelines'
	(slime-kill-all-buffers): Moved to contrib/slime-repl.el
	(slime-compile-file-options): Make `defcustom'
	(slime-file-name-merge-source-root)
	(slime-highlight-differences-in-dirname): Don't use
	`slime-split-string'
	(slime-complete-delay-restoration,slime-setup-command-hooks): Use
	`add-hook'
	(slime-complete-restore-window-configuration)
	(slime-xref-recompilation-cont): Add FIXME note.  note.
	(slime-xref-mode-map): Don't use interactive lambdas in keymap.
	(slime-xrefs): Rewrite to not use `slime-map-alist'
	(sldb-debugged-continuations): Simplify.

2014-03-07  João Távora  <joaotavora@gmail.com>

	* doc/slime.texi (SLIME Trace Dialog): Correct typos.

2014-03-05  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp: Cleanup whitespace.
	(set-default-directory): Call ccl:cwd which calls chdir so that
	subprocess pick it up.

2014-03-05  Helmut Eller  <heller@common-lisp.net>

	Use hashtables instead of obarrays; that's less confusing.

	* lib/hyperspec.el: (common-lisp-hyperspec--symbols): Renamed from
	common-lisp-hyperspec-symbols. It's now a hashtable.
	(common-lisp-hyperspec--insert): Renamed from intern-clhs-symbol.
	(common-lisp-hyperspec--strip-cl-package): Renamed
	from common-lisp-hyperspec-strip-cl-package.
	(common-lisp-hyperspec-read-symbol-name): New helper.  This one
	can used by SLIME.
	(common-lisp-hyperspec): Use helpers and hashtable.
	(common-lisp-hyperspec--get-one-line): Renamed from
	hyperspec--get-one-line.
	(common-lisp-hyperspec--parse-map-file): New helper.
	(common-lisp-hyperspec--reader-macros): Renamed from
	common-lisp-hyperspec-reader-macros.
	(common-lisp-hyperspec--format-characters): Renamed from
	common-lisp-hyperspec-format-characters. It's also hashtable now.
	(common-lisp-hyperspec--read-format-character): New helper.
	(common-lisp-hyperspec-format): Use it,
	(common-lisp-hyperspec--insert-format-directive): Renamed
	from intern-clhs-format-directive.
	(common-lisp-hyperspec--issuex-symbols): Renamed from
	common-lisp-hyperspec-issuex-symbols event though issue index is
	not actually used.
	(hyperspec-lookup, hyperspec-lookup-reader-macro)
	(hyperspec-lookup-format): Moved to end of file and remove
	odd-looking (eval-when (load eval) ...)
	(cl-lib): Load cl-lib from lib/ if needed.

	* slime.el (slime-hyperspec-lookup): Use
	common-lisp-hyperspec-read-symbol-name.

	* Makefile (compile): Seems prudent not to use
	batch-byte-recompile-directory as it may pollute the compile-time
	environment.
	(ELFILES): Include lib/*.el
	(slime.elc): Compile lib/hyperspec.el first.

2014-03-04  João Távora  <joaotavora@gmail.com>

	* slime.el (require): Move some libs out of `eval-when-compile'.

2014-03-03  João Távora  <joaotavora@gmail.com>

	* .travis.yml: Check slime-indentation contrib in travis. Notice
	that tests pass for now (Emacs 24.3), but at least 5 will fail on
	upcoming Emacs 24.4.

2014-03-02  João Távora  <joaotavora@gmail.com>

	Fix remaining byte-compilation warnings.

	* lib/hyperspec.el: Require `cl-lib' instead of `cl'.

	* slime-tests.el (require): Add necessary require statements to
	avoid warnings. Don't use xemacs compatibility layer.

	* slime.el (slime-require): Move up to avoid byte-compiler warning.
	(slime-setup, slime--setup-contribs): Use `slime-contribs'
	directly.
	(sldb-in-face): Renamed from `in-sldb-face'. Rename in users.

2014-03-02  Luís Oliveira  <loliveira@common-lisp.net>

	* doc/slime.texi: Use @SLIME{} throughout. Use UTF-8 coding to
	match the ChangeLog encoding via contributors.texi; requires
	texinfo >= 4.13.
	(Git Incantations): remove reference to the FAIRLY-STABLE tag
	which is hopefully replaced by release management. Tweak the link
	to CONTRIBUTING.md. Fixed the node sectioning.

	* doc/Makefile (contributors.texi): Removed ad-hoc TeX-escaping of
	non-ascii characters.

	* .gitignore: ignore the temporary output of doc/Makefile's
	publish target.

2014-03-02  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-read-interactive-args): Use
	`split-string-and-unquote' (closes #116). Spotted by Mirko
	Vukovic.

2014-03-02  Luís Oliveira  <loliveira@common-lisp.net>

	Make sure the SWANK port file is an absolute path and free of
	shell-isms like ~ that not all Lisps know how to parse. Bug
	reported by Mirko Vukovic.

	* slime.el (slime-swank-port-file): Use expand-file-name.

2014-03-02  Luís Oliveira  <loliveira@common-lisp.net>

	* doc/slime.texi: don't use $Date$.

	* doc/Makefile (publish): Also publish slime.pdf.

2014-03-02  Luís Oliveira  <loliveira@common-lisp.net>

	* doc/slime.css: make it slimier.

	* doc/Makefile (html/index.html): use slime.css.

	* NEWS: Update. (mostly by João Távora)

	* doc/slime.texi: Update versions.
	(SLIME Trace Dialog): Small tweak to section intro.

2014-03-01  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (wrap): Adapt to newer SBCL.

2014-02-28  Helmut Eller  <heller@common-lisp.net>

	* lib/cl-lib.el: Upgrade to cl-lib 0.5.

2014-02-27  João Távora  <joaotavora@gmail.com>

	* Makefile (SELECTOR): Same default, but allow regexp selectors.

2014-02-25  João Távora  <joaotavora@gmail.com>

	* README.md: Add link to manual in github pages (hosted under
	capitaomorte.github.io for now).

	* doc/Makefile (slime.html): Use --css-include=slime.css

	* doc/slime.css: New file. Simple stylesheet adapted from the one
	used by Maxima (http://maxima.sourceforge.net/).

	* doc/Makefile (install-info): only set $section when making
	"install-info".

	* doc/slime.texi (SLIME Trace Dialog): New section.

2014-02-25  Helmut Eller  <heller@common-lisp.net>

	* lib/.nosearch: New file.  (github issue#115)

2014-02-24  João Távora  <joaotavora@gmail.com>

	* slime.el: Call `slime-setup' at the end.

	* slime-autoloads.el (slime): Don't use `eval-after-load'.

	* doc/slime.texi (Installation): Make the autoload recipe the
	default recipe.
	(Basic customization): New subsection. Mention `slime-load-hook`
	and techniques for customizing keymaps.

2014-02-23  João Távora  <joaotavora@gmail.com>

	When enabling a contrib, dependencies are also enabled
	recursively. Without this, setting up or testing a contrib
	dependending on others often fails. Assumes enable functions are
	quick and idempotent.

	* slime.el (define-slime-contrib): Call enable functions for
	dependencies recursively. (slime-contrib-all-dependencies):
	Renamed from `slime-contrib-all-dependencies'

2014-02-23  Helmut Eller  <heller@common-lisp.net>

	* Makefile (slime.elc): Rebuild .elc if ChangeLog changes.

2014-02-23  Helmut Eller  <heller@common-lisp.net>

	Make safe-condition-message a bit safer.
	CCL ignores *print-cirlce* when *print-pretty* is t
	so it's easy to run into endless recursions.

	* swank.lisp (%condition-message): Renamed from
	condition-message. Trim whitespace from the result.
	(%%condition-message): New function. Use with-string-stream.
	Since the length of the string is limited we can also limit
	*print-length* without losing anything. Also handle
	SERIOUS-CONDITIONs instead of ERRORs, which would have handled
	CCL's VECTOR-SIZE-LIMITATION condition during printing.
	(safe-condition-message): Just call
	*sldb-condition-printer*. People who set that will know what
	they're doing.

	* swank-backend.lisp (print-condition): Replaces
	format-sldb-condition.  Take a stream as argument so that we can
	pass in our stream with limited output length.  No guarantee of
	course that this stream will be used in a reasonable way.
	* swank-clisp.lisp (format-sldb-condition): Deleted. Whitespace is
	now removed anyway.
	* swank-sbcl.lisp (print-condition): Use the stream argument.

	* slime-tests.el (report-condition-with-circular-list): Use
	with-standard-io-syntax to override settings from init files that
	any reasonable person would have.

2014-02-21  João Távora  <joaotavora@gmail.com>

	Closes #103: loading contribs does not require slime-tests or ERT.
	Tests are stored separately.

	* slime-tests.el (defun): Adapt to new contrib-tests location.
	(readme-recipe, traditional-recipe): Don't use ert macros in
	recipe tests, since ert might not be loaded.

	* slime.el (slime-contrib-dependencies): New function.

	* Makefile (contrib-check-% check-%): Restore the check-<contrib>
	target.
	* .travis.yml (env): Use it.

2014-02-20  Helmut Eller  <heller@common-lisp.net>

	Use *macroexpand-hook* in sbcl-world-lock test.

	This deadlocks when executed with cold dispatch caches, e.g. with:
	make SELECTOR=sbcl-world-lock-1 LISP=sbcl check

	* slime-tests.el (sbcl-world-lock): Use *macroexpand-hook*.

2014-02-19  Helmut Eller  <heller@common-lisp.net>

	The method-combination idea doesn't fly.

	Can't call generic functions from SBCL compiler because of
	deadlocks.

	* swank-backend.lisp ([method-combination] interface): Deleted.
	(definterface, defimplementation): Restore old implementation.

2014-02-19  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Break long lines.

2014-02-19  Helmut Eller  <heller@common-lisp.net>

	Don't bind byte-compile-warnings while autoloading 'bytecomp.

	* slime.el (slime--byte-compile): New function.
	(slime--compile-hotspots): Use it.

2014-02-19  Helmut Eller  <heller@common-lisp.net>

	* Makefile (check): Quote selector.

2014-02-19  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-load-hook): Run load-hook the end.

2014-02-19  Helmut Eller  <heller@common-lisp.net>

	Don't try to compile already compile functions.

	* slime.el (slime--compile-hotspots): New function.

2014-02-18  Helmut Eller  <heller@common-lisp.net>

	Use prin1-to-string instead of with-temp-buffer.

	* slime.el (slime-prin1-to-string): It's simpler and avoids some
	of the deactivate-mark issues.

2014-02-18  Helmut Eller  <heller@common-lisp.net>

	Create separate Makefile for contribs.

	* .travis.yml (env): Use contrib-% targets.
	(script): Use make variables instead of env vars.

	* Makefile (EMACS): Renamed from EMACS_BIN.
	(LISP): Renamed from LISP_BIN.
	(ELFILES, ELCFILES): New vars.
	(default, all, help, help-vars): New targets.
	(compile): Don't compile contribs.
	(check): Don't put contrib/ into load-path.
	(contrib-check-%): Renamed from check-%.
	(contrib-elpa-%): Renamed from elpa-%.
	(contrib-compile): New.

2014-02-18  Helmut Eller  <heller@common-lisp.net>

	Use a custom method-combination for definterface.

	This should give better M-. support.

	* swank-backend.lisp ([method-combinations] interface): New
	(definterface, defimplementation): Use it.
	* swank-backend.lisp: Whitespace cleanup.

2014-02-17  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (describe-definition): Describe macros.

2014-02-11  João Távora  <joaotavora@gmail.com>

	* slime-tests.el (slime-test-recipe-test-for): Simplify and make
	more powerful.
	(slime-test-recipe-check-repl): Removed it
	(readme-recipe-autoload-on-lisp-visit): Adapt to new
	`slime-test-recipe-test-for'. More readable.
	(readme-recipe, traditional-recipe): Idem.

2014-02-10  João Távora  <joaotavora@gmail.com>

	* slime.el (slime--setup-contribs): Init contribs if they've been
	required somewhere else and not inserted into
	`slime-required-modules'.

2014-02-06  João Távora  <joaotavora@gmail.com>

	* slime.el: Prefix all cl-functions with "cl-".

	* lib/cl-lib.el: Upgrade bundled version to 0.4.

	* Makefile (LOAD_PATH): Closes #101: Don't use new : (colon)
	feature of upcoming Emacs 24.4.

	* swank.asd: revert previous change by 2014-01-05 Francois-Rene
	Rideau until proper swank-loader-less ASDF support can be build
	it. It exhibits problems on ABCL and SBCL.

2014-01-24  João Távora  <joaotavora@gmail.com>

	* README.md (Emacs 23 gotchas): Remove section.

	* slime-tests.el (slime-test-ert-test-for): Use
	`define-slime-ert-test'.
	(slime-tests-auto-tags): Set ert tags automatically.
	(define-slime-ert-test): Use `slime-tests-auto-tags'.

	* Makefile ($(CONTRIBS:%=check-%) check): Speed up target, set
	SELECTOR for for these targets to '(tag contrib).

2014-01-23  João Távora  <joaotavora@gmail.com>

	* .travis.yml (env): Test the slime-repl independently from other
	contribs like slime-presentations.

	* slime.el (slime-propertize-region): Add edebug spec.

2014-01-22  João Távora  <joaotavora@gmail.com>

	* swank.lisp (inspector-nth-part): Don't break if index out of
	bounds, return second FOUNDP value instead.

2014-01-19  João Távora  <joaotavora@gmail.com>

	* .travis.yml (env): check less emacs 23 combinations. Pin tests
	to sbcl32 for now.

2014-01-13  João Távora  <joaotavora@gmail.com>

	* .travis.yml: Cleaner, more LISP combinations, but test only emacs 23 and
	emacs 24 on debian.

	* slime.el (require 'arc-mode): Replace cl-eval-when with
	eval-when-compile, broke in emacs 24.2. (Closes #17).

2014-01-12  Nathan Trapuzzano  <nbtrap@nbtrap.com>

	* .gitignore: Ignore files in top-level dist/ directory.

	* .gitattributes: Ignore certain files during git-archive.

	* .gitref: Store commit SHA-1 during git-archive.

2014-01-12  João Távora  <joaotavora@gmail.com>

	* .travis.yml (script): Make "check-fancy" to check contribs, not
	just core.

	* slime.el
	(require 'cl-lib): fallback to version bundled under lib/.
	(require 'hyperspec): look for version bundled under lib/.

	* slime-tests.el (traditional-recipe): New test, respect
	tradition.
	(require 'ert): Fallback to version bundled under lib/.
	(slime-test-recipe-connect-forms): New var refactored from
	previous tests.
	(slime-test-recipe-check-repl): New function refactored from
	previous tests.
	(readme-recipe): Refactored.

	* doc/slime.texi (Installation): Remove subsection "Emacs 23
	gotchas".
	(Loading Contribs): Clarify function name to call for attempting
	unload and give example.

	* lib/hyperspec.el: Moved from top-level dir.
	* lib/ert.el: New file.
	* lib/ert-x.el: New file.
	* lib/cllib.el: New file.

	* Makefile (ensure_ert,ensure_cl_lib): Remove targets since these
	are bundled.
	(compile): Don't download cl-lib.
	(check): Don't download ert.
	(clean): Look for .elc files everywhere.

	* .gitignore: Ignore texinfo files.

2014-01-11  João Távora  <joaotavora@gmail.com>

	* slime-autoloads.el (lisp-mode-hook): Add `slime-lisp-mode-hook'
	to it.

	* slime-tests.el (slime-test-recipe-test-for): More generic, takes
	`test-forms' and `check-fn' args. Uncomment relevant parts.
	(readme-recipe): Adapt to new `slime-test-recipe-test-for'.
	(readme-recipe-autoload-on-lisp-visit): New test.

	* doc/slime.texi (Git Incantations): Fix typo.

	* Makefile (SELECTOR, OPTIONS): Respect previous value.

2014-01-10  Nathan Trapuzzano  <nbtrap@nbtrap.com>

	* Makefile: Build distribution under top-level directory prefix,
	and give it a .tar.gz suffix.

2014-01-10  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-inspector-insert-chunk): Use
	`slime-inspector-insert-ispec-function'. Patch by Attila Lendvai.

	* slime-tests.el (slime-test-recipe-test-for): new function for
	testing setup recipes.
	(readme-recipe): New test;
	(define-slime-ert-test): New function for defining vanilla ERT
	tests.

	* slime.el: don't run `slime-load-hook'.
	(slime--setup-contribs): Hide from user. Idempotent.
	(slime-setup): Now a command.
	(slime-contribs): New variable.
	(slime-setup-contribs): Obsolete this variable to point to
	`slime-contribs'.
	(defun slime-setup-contribs): use `slime-contribs' var.

	* README.md: show travis build status for master branch only.
	(Quick setup instructions): mention `slime-autoloads' and suggest
	adding contribs to load path. Suggest `eval-after-load'.
	(Contribs): new section.
	(Emacs 23 gotchas): new section.
	(Contact): update mailing list info and link to CONTRIBUTING.md.

	* slime-autoloads.el: simplify with a `eval-after-load'.

	* slime.el: Bump version to 2.3.2

2014-01-08  João Távora  <joaotavora@gmail.com>

	* slime-tests.el (slime-test-ert-for): Use `eval-and-compile' for
	this function.

	* Makefile: New file: top level makefile, replaces mkdir.sh and
	test.sh. Some elpa targets available, still incomplete.

	* .travis.yml (script): Use "make check".

	* mkdir.sh: Removed file.

	* test.sh: Removed file.

2014-01-07  Bozhidar Batsov  <bozhidar@batsov.com>

	* CONTRIBUTING.md: Renamed from HACKING and converted to markdown.

2014-01-06  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-edit-definition): Fix bug introduced by changes
	of 2013-12-30. Closes #78.

2014-01-05  Francois-Rene Rideau  <tunes@google.com>

	* swank.asd : Drop the calling of init after loading swank.
	It was using unsupported (and to-be-removed) operation-forced interface.
	* contrib/slime-asdf.el : Tweak some docstrings.
	* contrib/swank-asdf.el : Tweak some comments and docstrings,
	remove an obsolete #+asdf2, since we don't support ASDF 1 anymore.

2014-01-05  Syohei YOSHIDA  <syohex@gmail.com>

	* slime.el : Add package headers

2013-12-31  João Távora  <joaotavora@gmail.com>

	* slime-tests.el (slime-test-buffer-name): remove it
	(slime-batch-test): no longer output to results file. Use
	`ert-run-test-batch' when in batch mode.
	* slime.el: Fix most compilation warnings. All function-calls
	calls to cl.el are now correctly prefixed with "cl-". Require
	'cl-lib.
	* test.sh: Always byte-compiles code, -L skips.it. No longer
	supports screen. No longer supports results and status files.
	(cmd): don't set `debug-on-quit'.

2013-12-30  João Távora  <joaotavora@gmail.com>

	* slime.el: move tests into slime-tests.el. Remove trailing
	whitespace. `lexical-binding' must appear on first line. Now
	attempts to work only from emacs 23 onwards. Adjust
	indentation. Remove trailing whitespace.
	(sldb-get-default-buffer): Choose default connection's sldb buffer
	if it exists.
	(slime-def-connection-var): In defsetf spec, don't evaluate
	`store' twice, since it may have side effects. This broke some
	slime-repl.el tests.
	(slime-edit-definition): No longer use `called-interactively-p'
	for known problems.
	(hyperspec): non-erroring `require' instead of `find-library'.
	(slime-next-line/not-add-newlines): Use `forward-line' instead of
	`next-line'.
        * .travis.yml (script): new file. Travis CI integration, combines
	emacs-23, emacs-snapshot and sbcl. Skip slime-fancy tests for now.
	* README: Convert to markdown. Use Travis CI badge.
	* Changelog: Use utf-8 coding.
	* test.sh (cmd): require 'slime-tests instead of 'slime. Allow
	regexp selectors. Remove trailing whitespace. Don't remove temp
	dir if tests fail. Test slime-fancy by default, -C skips it.
	* slime-tests.el: new file. Use ert.el framework.


2013-12-22  Luís Oliveira  <loliveira@common-lisp.net>

	* swank-loader.lisp: Don't load ASDF if it's too old.

2013-12-21  João Távora  <joaotavora@gmail.com>

	* slime.el (slime-inspector-operate-on-point): allow
	`slime-inspector-property-at-point' to return nil, which it does
	when non-interactive parts are "clicked" via RET.

2013-11-20  João Távora  <joaotavora@gmail.com>

	* swank-backend.lisp (wrap, unwrap, wrapped-p): new wrapping
	interface with default implementation.
	* swank-allegro.lisp (wrap,unwrap,wrapped-p): implement wrapping
	interface.
	* swank-sbcl.lisp (wrap,unwrap,wrapped-p): implement wrapping interface
	* swank.lisp (*after-toggle-trace-hook*): new exported variable,
	defaults to nil.
	* swank-loader.lisp (*contribs*): add swank-trace-dialog contrib.

2013-11-17  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (swank-compile-string): Load the fasl file even
	if there were warnings. Just like the other backends do.

2013-11-10  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-delete-package): New command.
	* swank.lisp (swank-delete-package): The corresponding Swank part.

2013-11-10  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (swank-profile-package): New wrapper for
	profile-package that does some input validation.
	* slime.el (slime-profile-package): Use it.

2013-11-01  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp (p2-definitions): Check bounds before accessing
	backend-p2-dispatch.

2013-11-01  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (swank-compile-string): Fix last commit.  Honor
	*trap-load-time-warnings* but without calling LOAD inside
	WITH-COMPILATION-UNIT.

2013-10-31  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (swank-compile-string): Don't call LOAD inside
	WITH-COMPILATION-UNIT.

2013-09-29  Helmut Eller  <heller@common-lisp.net>

	For CCL, also search definitions of p2 translators.

	* swank-ccl.lisp (p2-definitions): New.
	(find-definitions): Use it.

2013-09-29  Helmut Eller  <heller@common-lisp.net>

	* swank-clisp.lisp (*frame-prefixes*): Update some of the patterns
	for new layout.
	(is-prefix-p): Use regexp matching.
	(boring-frame-p): Also make compiled-tagbody compiled-block
	boring.
	(sldb-backtrace, %parse-stack-values): Remove code for versions
	before 2.44.

2013-09-29  Helmut Eller  <heller@common-lisp.net>

	For CCL, also search nx1-alphatizer definitions.

	* swank-ccl.lisp (alphatizer-definitions): New
	(find-definitions): Use it.

2013-06-26  Mark Evenson  <evenson@saturn>

	* swank-abcl.lisp (specializer-direct-methods): Correct symbol
	definition, allowing SLIME inspector to work again.

2013-05-26  Luís Oliveira  <loliveira@common-lisp.net>

	* slime-fancy-trace.el: New contrib.
	* slime-parse.el (slime-trace-query): moved to slime-fancy-trace.
	* slime-fancy.el: load slime-fancy-trace.

2013-05-14  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp (lispworks-severity): Fix error when using
	the :explain declaration.

2013-05-14  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp (find-top-frame): Improve backtraces from
	swank::safe-backtrace.

2013-04-23  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-draw-connection-list): Make sure not to call
	goto-char on NIL.

2013-04-02  Luís Oliveira  <loliveira@common-lisp.net>

	Hide SWANK debugger frames on Allegro also when the error is
	signalled within threads different from the SLIME REPL's.
	E.g. (mp:process-run-function nil (lambda () (error "foo"))).

	* swank-allegro.lisp (find-topframe): look deeper than 11
	frames. Still looking no deeper than 30 frames in the unlikely
	event that this function is invoked out of context with a very
	large stack.

2013-03-12  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-read-interactive-args): Use read-shell-command
	to enable completion.  Patch by Daimrod/Greg.

2013-03-08  Mark Evenson  <evenson@tethys.local>

	* swank-abcl.lisp: Allow SLIME inspector to perform class
	finalization.

2013-03-02  Stas Boukarev  <stassats@gmail.com>

	* slime-autoloads.el: Don't load autoloads when slime is already
	loaded, there's no sense in doing so.

2013-02-20  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-attempt-connection): Don't run the timer with a
	repeat argument, slime-attempt-connection will reinstantiate the
	timer if needed, otherwise it can be a possible source of race
	conditions.

2013-02-13  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (eval-in-frame): debugger:frame-var-name can
	return nil; ignore those vars.

	* slime.el (sldb-setup): Allegro somehow managed to enter sldb at
	the same level twice.  Add an assertion that checks that the
	condition is the same if sldb-level is the same as last time.

2013-02-08  Helmut Eller  <heller@common-lisp.net>

	* swank-lispworks.lisp (frame-package): Implemented.
	(function-name-package): New.

2013-02-08  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (handle-compiler-warning): Ignore "Closure
	will be stack allocated" notes.  Those are harmless and there are
	too many of them.
	(pc-source-location, ldb-code-to-src-loc): Handle case when
	excl::ldb-code-pc returns nil.

2013-02-02  Stas Boukarev  <stassats@gmail.com>

	* swank-backend.lisp (type-specifier-p): New.
	Implement it for ACL, ECL, CCL, Clisp, SBCL, LW.

2013-01-12  Stas Boukarev  <stassats@gmail.com>

	* swank-backend.lisp: Add a couple of ignore declarations.

2013-01-11  Stas Boukarev  <stassats@gmail.com>

	* swank-ecl.lisp (accept-connection): Fix a typo, line => :line.

2013-01-11  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (swank-compile-file*): Renamed from
	compile-file-with-compile-file.

2013-01-10  Helmut Eller  <heller@common-lisp.net>

	* swank-ecl.lisp (frame-var-value): Return the value without name.

2013-01-09  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (frame-locals-for-emacs): Print variable names in
	frame-package.

2013-01-09  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (frame-debug-vars): Only include :valid locals.
	(*keep-non-valid-locals*): New.
	(frame-package): New.

2013-01-07  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp (compiler-warning-short-message): Add a method
	for ccl::shadowed-typecase-clause.  Whithout that we only get
	"Nonspecific warning".
	(function-name-package): Factored out from frame-package.  Add
	case for standard-method.

2013-01-07  Helmut Eller  <heller@common-lisp.net>

	* swank-ecl.lisp (describe-symbol-for-emacs): Include bound
	symbols even those without documentation.

	* slime.el (slime-print-apropos): Do some input validation to
	detect bugs on the Lisp side.

	* swank-backend.lisp (describe-symbol-for-emacs): Allow NIL where
	:NOT-DOCUMENTED was needed.

2013-01-05  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp (frame-package): Implemented.

2013-01-05  Helmut Eller  <heller@common-lisp.net>

	* swank-loader.lisp (init): Add a :quiet argument.

2012-12-27  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (find-definitions-find-symbol-or-package): Rename
	from `find-definitions-find-symbol'. Packages are not named by
	symbols and an uninterned string can refer to a package. In case
	it finds a package, return a new uninterned symbol.

2012-12-17  Stas Boukarev  <stassats@gmail.com>

	* swank-ecl.lisp (swank-mop): MOP works well now on ECL, import
	all symbols.

	* swank.lisp (thread-for-evaluation): Use INTEGER, not FIXNUM, as
	a specializer, FIXNUM is not a standard class.

2012-12-16  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (thread-for-evaluation): Make generic. Remove keyword
	arg. Don't call find-repl-thread.

2012-12-16  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-attempt-connection): Show the attempt counter.

2012-12-03  Stas Boukarev  <stassats@gmail.com>

	* swank-backend.lisp (deinit-log-output): Move from swank-sbcl,
	use it on CCL in ccl:*save-exit-functions* as well.

	* swank-allegro.lisp (macroexpand-all): USe walk-form, not walk
	on >= 8.2.
	Patch by Utz-Uwe Haus.

2012-11-23  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-edit-definition): Don't ask the user for a name
	to search if it's missing before running slime-edit-definition-hooks
	(slime-open-inspector): pop-to-buffer before inserting anything,
	otherwise the point is not moved into the desired position.

2012-11-13  Francois-Rene Rideau  <tunes@google.com>

	* swank.lisp (*compile-file-for-emacs-hook*): A hook for
	compile-file-for-emacs, so that ASDF can hook its compilation
	functions.

2012-11-12  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (with-panic-handler): Abort the condition after
	closing the connection, otherwise it ends up in the slime debugger
	causing nested errors.

2012-11-11  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (interrupt-worker-thread): Solve *send-counter*
	binding problem.
	find-worker-thread: Merge with `thread-for-evaluation'.

2012-11-11  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] find-definition.3): Mark as expected to fail.
	([test] arglist): Adjust regexp so that CCL passes.
	(slime-execute-tests): Insert summary table at the the end.
	(slime-check): Don't change counters here, as that would count
	multiple times per test.  Instead to the counting in
	slime-execute-tests.

2012-11-11  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (ldb-code-to-src-loc): Scan backward to the
	first code point with a non-nil start-char.
	(frame-package): Also match for ((:internal foo ...)).

2012-11-08  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-timer-call): Use debug marker in
	condition-case.

2012-11-02  Helmut Eller  <heller@common-lisp.net>

	* slime.el (find-definition.3): Fix syntax.

2012-11-02  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (condition-message): New. Binds *print-cirlce.
	(safe-condition-message): Move binding of printer vars to
	condition-message.
	(*sldb-condition-printer*): Set it to #'condition-message.

2012-11-02  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (frame-source-location, ldb-code-to-src-loc):
	Use function-source-location for some cases that used to cause
	errors.
	(frame-package): New.
	(format-sldb-condition, call-with-syntax-hooks): Deleted. Did just
	the same as the default implementation.

2012-11-02  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] find-definition): Test defstruct and defvar.
	([test] find-definition.3): New.

2012-10-30  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (dd-location): Use info db as fallback.
	(struct-constructor): Return the name not the function.

2012-10-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el (report-condition-with-circular-list): New test.
	* swank.lisp (safe-condition-message): Bind *print-length* and
	truncate the string after 64KB.

2012-10-20  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-location-offset): When going to a position
	causes an error, for example, trying to move beyond the end of the
	buffer, move the point to 0 and then try to use the hints.

2012-10-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-insert-threads): Some cleanups.
	(slime-insert-table, slime-insert-table-row)
	(slime-transpose-lists) New helpers.
	(slime-threads-table-properties): Renamed from
	*slime-threads-table-properties*
	(slime-thread-index-to-id, slime-longest-lines)
	(slime-format-threads-labels, slime-insert-thread): Deleted.

2012-10-14  Helmut Eller  <heller@common-lisp.net>

	Avoid some unused variable warnings.

	* slime.el (slime-xref-group, slime-all-contribs, [selector] ??):
	Use _ as prefix or in loop-destructuring: (loop for (nil) in ...).

2012-10-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-goto-source-location-buffer-and-file): Delete
	unused function.

2012-10-14  Helmut Eller  <heller@common-lisp.net>
	Avoid flet.

	* slime.el (with-struct, slime-compute-policy)
	(slime-create-note-overlay, slime-merge-note-into-overlay)
	(slime-file-name-merge-source-root)
	(slime-highlight-differences-in-dirname)
	(slime-check-location-filename-sanity, slime-macroexpand-undo)
	(slime-read-connection)
	(slime-inspector-property-at-point): Use macrolet or a
	comibination of let and funcall as replacement for flet.

2012-10-14  Helmut Eller  <heller@common-lisp.net>
	Avoid labels.

	* hyperspec.el (hyperspec--get-one-line): New function.

2012-10-14  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (close-connection%): Let *debugger-hook* be nil
	across the entire function to that we don't call our own debugger
	if we ever get some error during CLOSE or somesuch.

2012-09-04  Stas Boukarev  <stassats@gmail.com>

	* swank-loader.lisp (lisp-version-string): Add "s" to Allegro with
	SMP support.
	Patch by Dave Cooper.

2012-08-18  Stas Boukarev  <stassats@gmail.com>

	* swank-abcl.lisp (find-definitions): Call ext:resolve before
	finding definitions, for the symbol may be not autoloaded yet.

2012-08-04  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (call-with-debugging-environment): Use
	sb-debug::resolve-stack-top-hint instead of just
	sb-debug:*stack-top-hint*, because now it can contain things other
	than just frames.
	* clean up: (signal (make-condition ...)) => (signal ...)

2012-07-13  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Don't compile functions that are now in other files.

2012-06-19  Helmut Eller  <heller@common-lisp.net>

	* swank-ecl.lisp (wait-for-input): Provide implementation
	that doesn't need serve-event.

2012-06-12  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-changelog-date): Use
	(expand-file-name "ChangeLog" slime-path) instead of
	(concat slime-path "ChangeLog"), slime-path may not have a
	trailing /.
	Reported by Paul Sexton (lp#1011935).

2012-05-25  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-oneliner): Use minibuffer width instead of the
	width of the current frame, minibuffer can be in a separate frame
	with a different width.
	Patch by Greg Pfeil (lp#1004252).

2012-05-21  Helmut Eller  <heller@common-lisp.net>

	Reduce dependecy on pre-defined faces.

	* slime.el (slime-apropos-symbol, slime-apropos-label): New faces.
	(slime-print-apropos): Use them.

	Reported by: Daimrod <daimrod@gmail.com>

2012-05-12  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (stream-force-output): Undo last few changes.

2012-05-11  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (stream-force-output): Use with-world-lock
	i.e. with-recursive-lock instead of with-mutex.
	* slime.el (sbcl-world-lock): New test.

2012-05-11  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (stream-force-output): Don't use
	with-deadline. Grab the world-lock instead.
	(condition-timed-wait): Use the :timeout argument for real.

2012-05-11  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (call-with-io-timeout): Not used. Deleted.
	* swank-sbcl.lisp (call-with-io-timeout): Deleted.

2012-05-07  Helmut Eller  <heller@common-lisp.net>

	Ignore linebreaks for the macroexpand test.
	SBCL should now also pass it.

	* slime.el (slime-test-macroexpansion=): New function.
	([test] macroexpand): Use it.

2012-05-06  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (condition-timed-wait): Undo previous change.
	The :timeout arg doesn't seem ready for production use.

2012-05-06  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (condition-timed-wait): Use the :timeout
	argument of sb-thread:condition-wait if supported.


2012-05-06  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (with-definition-source): Forgot to commit this
	one.

	* swank-allegro.lisp (string-to-utf8): Set the :null-terminate
	argument of excl:string-to-octets to nil.

2012-05-06  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (with-struct): Undo damage.
	* swank-sbcl.lisp (with-definition-source): New macro.

2012-05-06  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp, swank-rpc.lisp: iso-8859-1 is not same as
	latin-1-unix.

2012-05-06  Cyrus Harmon  <ch-slime@bobobeach.com>
	    Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-pprint-eval-region): New command. No keybinding
	though.

2012-05-04  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp: Remove the SB-C::MERGE-TAIL-CALLS proclamation.
	It does nothing, and never did, actually.

2012-05-03  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-goto-source-location): Allow for
	:buffer-and-file locations, prefer buffer if the buffer exists.

	* swank-sbcl.lisp (definition-source-for-emacs): Send
	:buffer-and-file when both are available.
	(quit-lisp): Use sb-ext:exit when it's present.

2012-05-03  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (find-definitions-find-symbol): Put back accidentally
	removed with-buffer-syntax.

2012-05-02  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (*find-definitions-right-trim*)
	(*find-definitions-left-trim*): New variables. ",:." and "#:"
	default values.
	(find-definitions-for-emacs): Trim names with using the above
	variables when a symbol is not found.

2012-05-01  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-xrefs-for-notes): Format location in a proper
	way.
	Reported by Max Mikhanosha.

2012-04-27  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (lisp-source-location): How hard can it be to
	get this right? (3-legged IF, FFS!)

2012-04-24  Douglas Crosher  <dcrosher@common-lisp.net>

	* swank-scl.lisp (create-socket): correct variable name typo.

	* swank.lisp, swank-rpc.lisp (file options): use #\; to separate the
	file options.

2012-04-23  Christophe Rhodes  <csr21@cantab.net>

	* slime.el (slime-operator-before-point-function): new variable.
	(slime-operator-before-point): use it.
	(slime-lisp-operator-before-point): default implementation for
	slime-operator-before-point-function (unchanged from before).

2012-04-20  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (stream-force-output :around): Workaroud for
	deadlocks between auto-flush-thread buffer write lock and world
	lock.
	(slime-output-stream): Dummy forward definition for the benefit of
	the defmethod.

2012-04-20  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (swank-value): New function, makes it easy to
	refer to variables in SWANK -- which doesn't exist when the
	backend is loaded.
	(lisp-source-location): One of the strings being interned was
	downcased. Fix using SWANK-VALUE.
	(make-socket-io-stream): Use SWANK-VALUE instead of INTERN &
	SYMBOL-VALUE.

2012-04-11  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] utf-8-source): Use the encoded byte sequence of
	the Unicode string.

2012-04-10  Stas Boukarev  <stassats@gmail.com>

	* slime.el (def-slime-test utf-8-source): Define only when
	(and (featurep 'emacs) (>= emacs-major-version 23)).

2012-04-10  Stas Boukarev  <stassats@gmail.com>

	* slime.el (def-slime-test utf-8-source): Another try at fixing
	utf8 literals in code.

2012-04-09  Stas Boukarev  <stassats@gmail.com>

	* slime.el (def-slime-test utf-8-source): Remove literal Unicode
	characters in the form of \xFFFF, it causes problems for some
	people.

2012-04-07  Helmut Eller  <heller@common-lisp.net>

	Fix long lines.

	* swank.lisp:
	* slime.el:
	* ChangeLog:
	* swank-cmucl.lisp:
	* swank-lispworks.lisp:
	* contrib/ChangeLog
	* hyperspec.el
	* metering.lisp
	* swank-abcl.lisp
	* swank-allegro.lisp
	* swank-backend.lisp
	* swank-clisp.lisp
	* swank-corman.lisp
	* swank-ecl.lisp
	* swank-sbcl.lisp
	* swank-scl.lisp
	* swank-source-path-parser.lisp
	* xref.lisp

2012-04-06  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (interrupt-worker-thread): Interrupt the REPL thread if
	there are no threads found. Send Emacs an error message if no
	threads are found at all.

2012-03-30  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (lisp-source-location): When processing a
	STEP-FORM-CONDITION, don't show the initial form from expansion of
	STEP. (Currently SBCL doesn't give the form at all, but when it
	does seeing it is distinctly useless.)

2012-03-26  Helmut Eller  <heller@common-lisp.net>

	* slime.el (utf-8-source): XEmacs has no set-buffer-multibyte.
	(slime-create-test-results-buffer): Set file-coding-system.

	* swank-lispworks.lisp (swank-compile-string): Don't include the
	source-string in the dspec::*location*.  As LW has the habbit to
	print the entire *location* on redefinition the source-string
	would causes troubles for the test case.

	* swank-sbcl.lisp (swank-compile-string): Use utf8.

	* swank-cmucl.lisp (swank-compile-file): Use external-format arg.

	* swank-ccl.lisp (swank-compile-string, compile-temp-file): Use
	utf8.

	* slime.el (utf-8-source): New test case.

2012-03-14  Paulo Madeira  <acelent@gmail.com>

	Use Unix-EOL convention even on Windows.

	* swank-allegro.lisp (string-to-utf8, utf8-to-string): Use
	excl:crlf-base-ef.
	* swank-lispworks.lisp (string-to-utf8,  utf8-to-string): Use
	'(:utf-8 :eol-style :lf)

2012-03-06  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp: If 'xref is not provided warn about it but
	continue.

2012-03-06  Helmut Eller  <heller@common-lisp.net>

	Fix SBCL backend for Windows.

	* swank-sbcl.lisp (fd-stream-input-buffer-empty-p): Restore it.

2012-03-06  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (swank-require): Ensure that provide as called.

2012-02-12  Stas Boukarev  <stassats@gmail.com>

	* swank-ecl.lisp (accept-connection): Use the proper element-type
	for the stream.

2012-02-12  Stas Boukarev  <stassats@gmail.com>

	* swank-clisp.lisp (c-error): The number of parameters to
	sys::c-warn was changed, accommodate both versions.

2012-02-07  Martin Simmons <martin@lispworks.com>

	* swank-lispworks.lisp (dspec-file-position): Fall back to regexp
	search if dspec-stream-position gets an error.

2012-01-06  Helmut Eller  <heller@common-lisp.net>

	Add a "sentinel thread" to protect access to global lists.

	* swank.lisp (start-sentinel, sentinel, send-to-sentinel)
	(sentinel-serve, sentinel-stop-server, sentinel-maybe-exit): New.
	(make-connection, close-connection, setup-server, stop-server):
	Use the sentinel.
	(close-connection%): Factored out.
	* swank-backend.lisp (register-thread, find-registered): New.
	* swank-allegro.lisp: Implement it.
	* swank-ccl.lisp:
	* swank-lispworks.lisp:
	* swank-sbcl.lisp:

2012-01-02  Stas Boukarev  <stassats@gmail.com>

	* swank-loader.lisp (lisp-version-string): Append -no-threads to
	SBCL without threads.

2011-12-24  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-init-command): Don't call
	`slime-to-lisp-filename', the lisp is not yet connected and if
	there's another connection it will use the wrong translation.

2011-12-24  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (throw-to-toplevel): If *sldb-quit-restart* is not
	found, try to invoke the last restart, which usually is a
	top-level abort restart. This is useful when the debugger is
	invoked from a non-slime thread.

2011-12-23  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-cycle-connections): Add
	`slime-cycle-connections-hook', to be used by slime-repl.

2011-12-21  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (input-ready-p): Don't use
	sb-impl::fd-stream-fd-type if it's not present.

2011-12-12  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-compile-region): Run slime-flash-region
	directly, not from `slime-before-compile-functions', which is run
	also for C-c C-k.

2011-12-10  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (auto-flush-loop): Don't use call-with-io-timeout.
	Removing it had no effect on the number of failed tests.  If you
	want it back, first create a test case to demonstrate the problem.
	* swank-backend.lisp: Mention that locks should only be used in
	swank-gray.lisp.

2011-12-10  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp: Move io-redirection to contrib/swank-repl.lisp.

2011-12-10  Helmut Eller  <heller@common-lisp.net>

	Make *active-threads* a slot of the connection struct.

	* swank.lisp (*active-threads*): Deleted
	([struct] multithreaded-connection): New slot active-threads.
	(find-worker-thread, interrupt-worker-thread)
	(thread-for-evaluation): Update accordingly.
	(add-active-thread, remove-active-thread): New helpers.

2011-12-10  Helmut Eller  <heller@common-lisp.net>

	* swank-loader.lisp (delete-stale-contrib-fasl-files): New.
	(compile-contribs): Use it.

2011-12-09  Helmut Eller  <heller@common-lisp.net>

	Create an extra thread for the indentation cache.

	* swank.lisp (indentation-cache-loop): New.
	([struct] multithreaded-connection): New slot
	indentation-cache-thread.
	(control-thread, cleanup-connection-threads): Create/kill it.
	(send-to-indentation-cache): New function.
	(update-indentation-information, sync-indentation-to-emacs): Use
	it.
	(perform-indentation-update, update-indentation/delta-for-emacs):
	Add package as argument; that used to be *buffer-package.  Can
	again be simpler as the indentation-cache-thread doesn't share the
	cache with others.
	(handle-indentation-cache-request, symbol-packages): New helpers.

2011-12-07  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*slime-interrupts-enabled*): Describe the idea
	behind the interrupt handling code a bit.

2011-12-07  Helmut Eller  <heller@common-lisp.net>

	Make *event-queue* and *events-enqueued* slots of the connection
	struct.

	* swank.lisp (*event-queue*, *events-enqueued*): Deleted
	([struct] singlethreaded-connection): New slots event-queue and
	events-enqueued.
	(poll-for-event, send-event, wait-for-event/event-loop): Update
	accordingly.

2011-12-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([xemacs]): Use (find-coding-system 'utf-8-unix)
	instead of checking the XEmacs version to decide when 'un-define
	is required.

2011-12-07  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (send-to-emacs): Add a without-slime-interrupts to
	protect send/receive from arbitrary interrupts.

2011-12-07  Helmut Eller  <heller@common-lisp.net>

	Move flow control from dispatch-event to send-to-emacs.

	* swank.lisp (*send-counter*): New thread local variable.
	(with-connection): Bind it.
	(send-to-emacs): Call maybe-slow-down.
	(maybe-slow-down, ping-pong): Go through dispatch-event instead of
	writing to the socket directly.
	(dispatch-event): Re-add thread arg to :ping/:emacs-pong.
	Also add a :test-delay event.
	(perform-indentation-update): Use with-connection to bind
	*emacs-connection* and *send-counter*.
	(background-message): Remove reference to connection.slowdown.
	(flow-control-test): New support code for testing flow-control.
	([defstruct] connection): Delete send-counter and slowdown slots.

	* slime.el (slime-dispatch-event): Re-add thread arg to
	:ping/:emacs-pong and :test-delay event.
	([test] flow-control): New test.

2011-12-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-update-system-indentation): Moved to
	contrib/slime-indentation.el.

2011-12-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-batch-test): Forgot to rename slime-run-one-test
	to slime-run-test here.
	(slime-net-connect): Remove coding-system argument.
	(slime-xref-insert-recompilation-flags): Use insert-char instead
	of (dotimes (i ..) (insert " " ..)) to avoid the compiler warning.
	([test] break, slime-forward-sexp): Use _i in dotimes.

2011-12-07  Stas Boukarev  <stassats@gmail.com>

	* doc/.cvsignore: Add html.tgz

2011-12-07  Didier Verna  <didier@xemacs.org>

	* doc/.cvsignore: Add more files generated by Texinfo (.kys, .fns
	and .vrs).

2011-12-05  Didier Verna  <didier@xemacs.org>

	* slime.el ([xemacs]): Don't require 'un-define in XEmacs 21.5 and
	later. Mule-UCS is not needed anymore because of internal Unicode
	support (and conflicts with it).

2011-12-06  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-compile-region): Check connection before running
	hooks, invoking slime-flash-region doesn't make much sense when
	there's no connection.

2011-12-05  Helmut Eller  <heller@common-lisp.net>

	Move flow control into dispatch-event.

	* swank.lisp (maybe-slow-down, ping-pong): New functions.
	(dispatch-event): Use it. Also require connection argument.
	Update callers accordingly.
	([defstruct] connection): New slots: send-counter and slowdown.
	* slime.el (slime-dispatch-event): Drop thread from
	:ping/:emacs-ping messages.

	Use subclasses of connection.  Wasn't neccessary for flow control
	but seems like a good idea for the future.

	* swank.lisp (multithreaded-connection)
	(singlethreaded-connection): New
	(make-connection): Create multi/single threaded variant depending
	on style argument.
	([defstruct] serve-requests, cleanup): Delete slots.  Dispatch on
	connection type instead.
	(stop-serving-requests): New.
	(close-connection): Use it.  Can't use
	*use-dedicated-output-stream* here.

	* swank.lisp (background-message): Do nothing if
	connection.slowdown is set.

2011-12-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] arglist): swank::create-server now has an
	optional argument.  Use swank::compute-backtrace instead.

2011-12-05  Stas Boukarev  <stassats@gmail.com>

	* start-swank.lisp: Remove :coding-system argument.

2011-12-04  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (interrupt-worker-thread): Don't use find-repl-thread
	as fallback.

2011-12-04  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp: Minor cleanups.
	* swank-rpc.lisp:

2011-12-04  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (create-repl): Moved to contrib/swank-repl.lisp.
	(*use-dedicated-output-stream*, *dedicated-output-stream-port*
	(*dedicated-output-stream-buffering*, open-streams)
	(make-output-function, send-user-output)
	(make-output-function-for-target, make-output-stream-for-target)
	(open-dedicated-output-stream, find-repl-thread)
	(spawn-repl-thread, repl-loop, initialize-streams-for-connection)
	(read-user-input-from-emacs,  *listener-eval-function*)
	(listener-eval, *send-repl-results-function*, repl-eval)
	(clear-repl-variables, track-package, send-repl-results-to-emacs)
	(redirect-trace-output);
	* swank-loader.lisp (*contribs*): Add swank-repl.

2011-12-04  Helmut Eller  <heller@common-lisp.net>

	* swank-loader.lisp (*contribs*): Add swank-mrepl.

2011-12-04  Helmut Eller  <heller@common-lisp.net>

	* swank-rpc.lisp (read-chunk): Signal end-of-file we had no input.

2011-12-03  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (wait-for-input): Another go at this. Rip out POLL,
	build on top of just INPUT-READY-P.
	(input-ready-p): Outside Windows, use SYSREAD-MAY-BLOCK-P to check.

2011-12-03  Gábor Melis  <mega@retes.hu>

	* swank-allegro.lisp (set-default-initial-binding): In 9.0 alpha,
	*CL-DEFAULT-SPECIAL-BINDINGS* is [soon to be] deprecated.  It's
	otherwise the same EXCL:*REQUIRED-TOP-LEVEL-BINDINGS* (i.e. no
	change in behavior).

2011-12-03  Helmut Eller  <heller@common-lisp.net>

	* swank-clisp.lisp (wait-for-input): Add a version for windows.

2011-12-02  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (wait-for-input): Define only if
	#+os-provides-poll or #+win32.

2011-12-02  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (listener-channel): Moved to contrib/swank-mrepl.lisp
	(create-listener, initial-listener-bindings, spawn-listener-thread).

2011-12-01  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (wait-for-input): Call poll(2).
	* swank-backend.lisp (wait-for-streams, wait-for-one-stream):
	Deleted. Wouldn't work on binary streams.

2011-12-01  Helmut Eller  <heller@common-lisp.net>

	* swank-loader.lisp (*contribs*): Add swank-util.

2011-12-01  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (method-location): Special case accessors.

2011-11-29  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (do-symbols*, classify-symbol)
	(symbol-classification-string): Moved to contrib/swank-util.lisp.

2011-11-29  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (to-line): Increase default limit to 512.
	(frame-locals-for-emacs): Let *print-right-margin* override
	default line width.

2011-11-27  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (create-server): Add a :backlog argument.
	(setup-server): Pass it along.

	* swank-backend.lisp (create-socket): Backlog argument.
	* swank-abcl.lisp: Implement it.
	* swank-allegro.lisp:
	* swank-ccl.lisp:
	* swank-clisp.lisp:
	* swank-cmucl.lisp:
	* swank-corman.lisp:
	* swank-ecl.lisp:
	* swank-lispworks.lisp:
	* swank-sbcl.lisp:
	* swank-scl.lisp:

2011-11-27  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (make-socket-io-stream): Create character
	stream if external-format is non-nil.

2011-11-27  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (create-server): Remove coding-system argument.
	([defstruct] connection): Remove coding-system slot.
	(connection.external-format, *coding-system*): Deleted.
	(make-connection, start-server, create-server, setup-server)
	(accept-connections): Drop coding-system arg.

	(connection-info): Return supported coding systems.
	(create-repl, open-dedicated-output-stream)
	(open-streams, initialize-streams-for-connection): Add
	coding-system arg.

	* slime.el (slime-init-command): Ignore the coding-system arg.
	(slime-connection-coding-systems): New connection variable.
	(slime-set-connection-info): Set it.

2011-11-27  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (eval-in-frame-aux): Don't bind *package* during
	eval.

2011-11-21  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp: Trigger compilation of utf8 stuff before first
	real use.

2011-11-21  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*sldb-printer-bindings*): Removed.  Rather useless
	since the change from 2009-02-26.  It could at best have some
	influence on the way conditions are printed.  *sldb-string-length*
	and *sldb-bitvector-length* where both nil so
	*sldb-pprint-dispatch-table* was also not used by default.  In
	summary, spending 3 pages for something that's not used by default
	was pretty silly.  One variable less where we can get the defaults
	wrong.

2011-11-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-eval-in-frame): Try to figure the package out.
	Ask Lisp if the function for frame was defined in a particular
	package and use it to read the form.
	(sldb-read-form-for-frame): New helper.

	* swank-backend (frame-package): New.
	* swank-cmucl (frame-package): Implement it.

	* swank.lisp (frame-package-name, eval-in-frame-aux): New.
	(eval-string-in-frame, pprint-eval-string-in-frame): Use package
	argument.

2011-11-19  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (restart-frame): Make it possible to restart
	frames of anonymous functions -- at least some of the time.

2011-11-16  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (open-dedicated-output-stream): Open a stream with
	the right coding system.
	Change (:open-dedicated-output-stream port) message to
	(:open-dedicated-output-stream port coding-system), because Emacs
	can no longer determine the coding system based on the main
	network streams since they are binary now.

2011-11-11  Anton Kovalenko  <anton@sw4me.com>

	* slime.el (slime-ed): add bytep argument to destructure-case.
	When it's true, position is interpreted as byte offset.

2011-11-08  Helmut Eller  <heller@common-lisp.net>

	Restore old header format.

	* swank-rpc.lisp (parse-header, write-header)
	* slime.el (slime-net-decode-length, slime-net-encode-length)

2011-11-06  Helmut Eller  <heller@common-lisp.net>

	* swank-ecl.lisp (accept-connection): Fix buffering arg.
	* swank-cmucl.lisp (accept-connection): Fix buffering arg.

2011-11-06  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-run-test): Renamed from slime-run-one-test.
	(slime-toggle-test-debug-on-error): New.
	([test] break): Longer timeouts.

2011-11-06  Helmut Eller  <heller@common-lisp.net>

	Add portable versions for string-to-utf8 and utf8-to-string.

	* swank-backend.lisp (default-string-to-utf8)
	(default-utf8-to-string): New.
	(string-to-utf8, utf8-to-string): Use default implementations.

	* swank-lispworks.lisp (make-flexi-stream): Restored.
	(utf8-stream): Deleted.  The utf8 stuff is now used for the
	default implementation of utf8-to-string and would cause name
	clashes.

2011-11-06  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (swank-compile-string): For reader errors
	return nil not (values nil nil t).

2011-11-06  Helmut Eller  <heller@common-lisp.net>

	New wire format.

	Switch from character streams to binary streams.  Counting
	characters was error prone because some Lisps use utf-16
	internally and so READ-SEQUENCE can't be used easily.

	The new format looks so:

	  | byte0 | 3 bytes length |
	  |    ... payload ...     |

	The playload is an s-exp encoded as UTF-8 string.  byte0 is
	currently always 0; other values are reserved for future use.

	* swank-rpc.lisp (write-message): Use new format.
	(write-header, parse-header, asciify, encoding-error): New.

	* swank.lisp (accept-connections): Create a binary stream.
	(input-available-p): Can't read-char-no-hang on binary streams.

	* slime.el (slime-net-connect): Use binary as coding system.
	(slime-net-send, slime-net-read, slime-net-decode-length)
	(slime-net-encode-length, slime-net-have-input-p): Use new format.
	(slime-unibyte-string, slime-handle-net-read-error): New.
	(featurep): Require 'un-define for XEmacs.

	* swank-sbcl.lisp (input-ready-p): Use sb-sys:wait-until-fd-usable.

2011-11-06  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (close-connection): Fix thinko.

2011-11-06  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (accept-connection): Improve docstring.  In
	particular say that we want a binary stream if the EXTERNAL-FORMAT
	argument is nil.

	* swank-abcl.lisp (accept-connection): Make it so.
	* swank-clisp.lisp (accept-connection): Make it so.
	* swank-cmucl.lisp (accept-connection): Make it so.
	* swank-lispworks.lisp (accept-connection): Make it so.
	* swank-sbcl.lisp (accept-connection): Make it so.
	* swank-scl.lisp (accept-connection): Make it so.

2011-11-06  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (utf8-to-string, string-to-utf8): New.

	* swank-sbcl.lisp (string-to-utf8, string-to-utf8): Implemented.
	* swank-lispworks.lisp (string-to-utf8, string-to-utf8): Implemented.
	* swank-cmucl.lisp (string-to-utf8, string-to-utf8): Implemented.
	* swank-clisp.lisp (string-to-utf8, string-to-utf8): Implemented.
	* swank-ccl.lisp (string-to-utf8, string-to-utf8): Implemented.
	* swank-allegro.lisp (string-to-utf8, string-to-utf8): Implemented.
	* swank-abcl.lisp (string-to-utf8, string-to-utf8): Implemented.
	(octets-to-jbytes, jbytes-to-octets): New helpers.

2011-11-03  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (close-connection): Be more careful with non-ascii.

2011-11-03  Helmut Eller  <heller@common-lisp.net>

	Remove dependecy on FLEXI-STREAMS for Lispworks.

	* swank-lispworks.lisp (make-flexi-stream): Deleted.
	(utf8-stream): New class to do the transcoding.
	(accept-connection): Use it.

2011-10-19  Andrew Myers  <asm198@gmail.com>

	* swank-allegro.lisp (frob-allegro-field-def): Add missing type to
	ecase for inspector.

2011-10-13  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (all-completions): Remove mixed case syms e.g |Foo|.
	"fo" is not a prefix of "|Foo|" and it would be problematic later.

2011-10-05  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (clear-repl-variables): New functions, clears *, /,
	and + variables.

2011-09-28  Stas Boukarev  <stassats@gmail.com>

	* slime.el: Remove (require 'hideshow), it's not used anymore.
	Spotted by Leo Liu.

2011-09-27  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (describe-symbol-for-emacs): Differentiate
	between function, generic function, special forms, and macros by
	copying SBCL implementation.

2011-09-13  Christophe Rhodes  <csr21@cantab.net>

	* slime.el (slime-simple-complete-symbol): only display "Complete
	but not unique" message if the partial completion figures in the
	completion list.

2011-08-31  Anton Kovalenko  <anton@sw4me.com>

	* swank-sbcl.lisp (preferred-communication-style): check for
	:sb-thread before :win32, so :spawn is preferred for threaded
	Windows builds.

2011-08-31  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (make-socket-io-stream): Backwards compatibility with
	SBCL < 1.0.42.43 -- and bugfix.

2011-08-26  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (class-slots): Use exported symbol allowing
	classes with non-standard metaobjects to be inspected.

2011-08-18  Helmut Eller  <heller@common-lisp.net>

	Fix line numbers for compiler notes if is narrowing was in effect.

	* slime.el (slime-canonicalized-location): Widen before calling
	line-number-at-pos.

2011-08-17  Stas Boukarev  <stassats@gmail.com>

	* swank-allegro.lisp (with-redirected-y-or-n-p): Fix modern-mode
	issues.
	Patch by Andrew Myers.

2011-08-09  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (make-socket-io-stream): Use :SERVE-EVENTS T when
	using :FD-HANDLER as the communication style. SBCL will soon stop
	serving events by default on socket streams.

2011-08-08  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-unintern-symbol): New command.
	* swank.lisp (unintern-symbol): Lisp-side implementation.

2011-07-03  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (debug-var-info): New function: calls
	SB-DI::DEBUG-VAR-INFO when available.
	(frame-locals, frame-var-value): Treat more-context and more-count
	vars specially.

2011-06-21  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (*indentation-cache-lock*): Deleted.
	(perform-indentation-update): Spawn a new thread to handle the
	indentation update when using threads. Move cache-clearing to
	UPDATE-INDENTATION/DELTA-FOR-EMACS. Replace the old cache by
	the one returned from U-I/D-F-E.
	(update-indentation/delta-for-emacs): When clearing the cache,
	allocate a new table. When threads are being used, copy the
	cache before mutation, to ensure that caches possibly seen by other
	threads are write-only by then.

2011-06-18  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (*indentation-cache-lock*): New variable:
	hash-table updates aren't necessarily thread-safe.
	(perform-indentation-update, update-indentation/delta-for-emacs):
	Grab the lock when necessary -- in delta-for-emacs we hold on to
	it a bit longer than necessary, but the code is easier to read
	this way.

2011-06-16  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (macro-indentation): Restore the old simple version.

	* swank-sbcl.lisp (compiling-from-buffer-p): PROBE-FILE to
	handle cases there the tmp-directory is a symlink.
	(compiling-from-file-p): Ditto.

2011-06-14  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-backend.lisp (call-with-io-timeout): New DEFINTERFACE.
	* swank-sbcl.lisp (call-with-io-timeout): DEFIMPLEMENTATION for it.
	* swank.lisp (auto-flush-loop): Call FINISH-OUTPUT using
	CALL-WITH-IO-TIMEOUT to prevent deadlocks.

	* swank.lisp (macro-indentation): Fix handling of lambda-list
	keywords other than &rest and &body.

	* slime.el (slime-update-system-indentation): Remove stale specs
	from common-lisp-system-indentation when new one arrives.

2011-06-10  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (macro-indentation): Walk the lambda-list
	to construct a better indentation spec instead of just
	looking for &BODY.

2011-06-09  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (execv): Stupid SBCL hackers breaking backwards
	compatibility again: SB-POSIX:SYSCALL-ERROR has a required
	argument in 1.0.49, but accepts no arguments in older ones. Use
	plain ERROR instead.

	Support for per-package derived indentation, when
	slime-indentation is used.

	* swank.lisp (update-indentation/delta-for-emacs): Tell Emacs
	which packages the symbol is available in. Unless
	slime-indentation is used, this information is just dropped on the
	floor.

	* slime.el (slime-update-system-indentation): New function. Use
	this to inform indentation about derived specs when
	`common-lisp-system-indentation' is bound.
	(slime-handle-indentation-update): Adjust to support per-package
	derived indentation specs when slime-indentation is available.

2011-05-27  Helmut Eller  <heller@common-lisp.net>

	Fix "wrong number of args" problem with slime-inspector-quit.
	Reported by Anton Kovalenko.

	* slime.el (slime-popup-buffer-quit-function)
	(slime-quit-threads-buffer): Drop the kill-buffer-p argument.

2011-05-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (destructure-case): Fix "`_' not left unused" warnings.
	Insert an (ignore) form for empty bodies; this inhibts the
	compiler transformation that leads to the spurios warning.  This
	has no runtime cost in compiled code, since the compiler
	recognizes (ignore) and emits no code for it.
	(slime-flatten-tree): Deleted. No longer used.

2011-05-23  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (sdlb-print-condition): New (or old new)
	function. It was bound by P in sldb-mode, but for some reason it
	was lost.

2011-05-23  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-apropos-label-properties): Deleted.  Just
	auto-load apropos-mode.
	(slime-print-apropos): Use the variable apropos-label-face
	which seems to exist in all relevant Emacsen.

2011-05-22  Helmut Eller  <heller@common-lisp.net>

	Turn on lexical-binding for slime.el.
	This mostly involves prefixing unused variables
	with underscores to shut up the compiler, but
	also some less harmless changes.

	* slime.el (slime-dispatching-connection, slime-current-thread):
	Add defvars.
	(slime-connect): called-interactively-p wants 1 arg in Emacs 24
	but none in Emacs 22.  So we can't use it; instead add an extra
	optional arg and set that to non-nil in the interactive spec.
	(slime-read-from-minibuffer): Actually use the history arg.
	(slime-inspector-quit): Drop the unused kill-buffer arg from the
	lambda-list.
	(slime-run-tests): Can't specbind slime-repl-history-file without
	variable declation.  I don't want to declare it here so I just
	eliminated it and let somebody else fix slime-repl.el.

2011-05-21  Helmut Eller  <heller@common-lisp.net>

	Minor tweaks to avoid some compiler warnings.

	* slime.el (slime-modeline-string, slime-buffer-connection):
	Declare variables.
	(slime-flatten-tree): Helper function.
	(destructure-case): Use it, and make '_ ignorable if
	it occurs in some pattern.
	(slime-connect): Avoid obsolete functions:
	string-to-int -> string-to-number
	interactive-p -> called-interactively-p
	(slime-complete-maybe-restore-window-configuration)
	last-command-char -> last-command-event
	completion-base-size ->  completion-base-position
	(slime-xref-mode-map): Use call-interactively
	when calling the remapped next-line/previous-line commands.

2011-05-09  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (swank-compile-string): Use :SOURCE-NAMESTRING
	to provide the name of the actual source file, and
	:ALLOW-OTHER-KEYS for compatibility with pre-1.0.48.1 versions.
	This allows SBCL to get uninteresting redefinition muffling right.
	(*trap-load-time-warnings*): Default to T to make the redefinition
	notes more visible, especially now that redefinition muffling hides
	the boring ones.

2011-05-08  Nikodemus Siivola  <nikodemus@random-state.net>

	* slime.el (slime-intern-indentation-spec): New function. Converts
	strings in an indentation spec to symbols.
	(slime-handle-indentation-update): Intern the indentation spec
	using slime-intern-indentation-spec, so that lisp side can pass
	complex indentation specs.
	* contrib/swank-indentation.lisp (application-indentation-hint):
	Downcase symbol names -- any symbol in an indentation spec is
	pretty much guaranteed to have a lowecase name on the Emacs side.

2011-04-16  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-load-failed-fasl): New variable. Accepts `ask',
	`always', and `never' symbols. Loads or not loads fasls produced by
	compile-file which returned non-nil failure-p.

2011-04-14  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (list-threads): Call `use-threads-p' only when
	*emacs-connection* is non-nil. `use-threads-p' wouldn't work in
	this case, and there is no need to remove a worker thread from the
	list if it's not connected.
	This fixes an issue with calling swank:stop-server when slime
	isn't connected.

2011-03-13  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (format-restarts-for-emacs): Add
	without-printing-errors around restart printing.

2011-03-09  Helmut Eller  <heller@common-lisp.net>

	Remove slime-sexp-at-point-for-macroexpansion.

	* slime.el (slime-sexp-at-point-for-macroexpansion): Deleted.
	(slime-eval-macroexpand): Use slime-sexp-at-point instead.
	(slime-eval-macroexpand-inplace): Use
	slime-bounds-of-sexp-at-point directly.

2011-03-09  Helmut Eller  <heller@common-lisp.net>

	Move some of the logic from slime-sexp-at-point-for-macroexpansion
	into slime-sexp-at-point.

	* slime.el (slime-bounds-of-sexp-at-point): New.  Special case if
	we are at '( as slime-sexp-at-point-for-macroexpansion does.
	(slime-bounds-of-symbol-at-point): New.
	(slime-symbol-at-point, slime-sexp-at-point): Use the above.

2011-02-24  Stas Boukarev  <stassats@gmail.com>

	* swank-allegro.lisp (find-topframe): Fix excl::int-newest-frame
	invocation for the latest alpha version of Allegro.
	Patch by Gábor Melis.

2011-02-18  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-init-popup-buffer): Don't use
	multiple-value-setq on a list, XEmacs doesn't like it.

2011-02-18  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-insert-threads): Make sure newlines have the
	same thread-id property as the rest of the line. This fixes
	confusion when point is at the end of a line.

2011-02-13  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-inspector-operate-on-point): Don't save the
	point when inspecting a different object.
	(slime-inspector-operate-on-point): If there is no action property
	directly at the point, try looking at (1- (point)), many
	inspectable objects are presented the end of the line, so it's
	easier to navigate to them by C-e and still being able to activate
	it.

2011-02-08  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-choose-overlay-region): Don't use `list' instead
	of `values', GNU Emacs fakes multiple values with lists, but
	XEmacs uses real multiple values.
	Reported by Raymond Toy.

2011-02-04  Helmut Eller  <heller@common-lisp.net>

	Be careful with interning.

	* swank.lisp (find-definitions-for-emacs): Use parse-symbol.

2011-02-04  Helmut Eller  <heller@common-lisp.net>

	Don't double encode results for eval-in-emacs.

	* slime.el (slime-check-eval-in-emacs-result): New.
	(slime-eval-for-lisp): Use it.
	* swank.lisp (unreadable-object): Removed.

2011-02-02  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (eval-in-emacs): Return unreadable results from Emacs
	as an unreadable-object, not as a string.

2011-02-02  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-eval-for-lisp): Return value as a string,
	because it can be unreadable, e.g. #<buffer foo>
	* swank.lisp (eval-in-emacs): Prevent reader errors.

2011-02-02  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (eval-in-emacs): Export it.

2011-01-28  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-check-location-filename-sanity): Guard
	against target-filename being NIL.

2011-01-26  Helmut Eller  <heller@common-lisp.net>

	Allow tail-merging in call-with-bindings.

	* swank.lisp (call-with-bindings): Don't use progv if alist is
	empty alist is empty.

2011-01-20  Stas Boukarev  <stassats@gmail.com>

	* swank-ecl.lisp (+TAGS+): change
	(translate-logical-pathname #P"SYS:TAGS") to
	(merge-pathnames "TAGS" (translate-logical-pathname "SYS:"))
	because of case conversion the former results in a pathname with a
	name "tags", which doesn't exist.

2010-12-10  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-with-popup-buffer): Correct the docstring.

2010-12-09  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-toggle-break-on-signals): New command.
	* swank.lisp (toggle-break-on-signals): The corresponding Lisp code.

2010-12-02  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp (frame-actual-args): Reimplement to include
	only the values like on other platforms and deal with, optional
	key and rest args.
	(print-frame): Format the frame as a call like in other backends.

2010-11-13  Helmut Eller  <heller@common-lisp.net>

	Improve source locations for compiler messages in Lispworks.

	* swank-lispworks.lisp (map-error-database)
	(signal-error-data-base, make-dspec-progenitor-location): Pass the
	edit-path along.
	(signal-undefined-functions): No edit-path available so just use
	nil.

2010-11-12  Helmut Eller  <heller@common-lisp.net>

	Improve frame-source-location for Lispworks.

	* swank-lispworks.lisp (frame-source-location): Exctract the
	edit-path from the frame and pass it to Emacs.
	(edit-path-to-cmucl-source-path): New function.
	(frame-location): Use it.

	* slime.el (slime-location-offset): Add a :edit-path property.
	(slime-search-edit-path): New function.
	(slime-search-call-site): Fix regexp to match
	zero arg functions.

2010-11-07  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (label-value-line): Remove display-nil-value.
	And the other stuff too.
	(label-value-line*): Idem.

2010-11-07  Helmut Eller  <heller@common-lisp.net>

	* swank-loader.lisp: ASDF free again.  And proud of it!
	(default-fasl-dir, load-swank): Remove asdf stuff.

2010-11-03  Stas Boukarev  <stassats@gmail.com>

	* swank-loader.lisp (*architecture-features*): Add :arm for CCL
	ARM port.

2010-11-02  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp (list-callers-internal): Revert to previous
	low level implementation, fixed for LW6.
	(list-callees-internal): Reimplement using low level instead of
	the compiler's xref.

2010-10-23  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-goto-location-position): In case of
	(:function-name name) go to (point-min) before searching for
	function. Remove redundant regexp and regexp-quote function name
	before inserting it into a regexp.

2010-10-21  Helmut Eller  <heller@common-lisp.net>

	In ABCL, try harder to find the source of stack frames.

	* swank-abcl.lisp (source-location): Now a GF.
	(source-location [java-stack-frame]): New.
	(source-location [lisp-stack-frame]): New.
	(source-location [function]): New.
	(frame-source-location, find-definitions): Use them.
	(*source-path*, find-definitions): New.
	(system-property, pathname-parent, pathname-absolute-p)
	(split-string, path-separator, search-path-property)
	(jdk-source-path, class-path, zipfile-contains-p)
	(find-file-in-path): Noise for filename frobbing.

2010-10-21  Helmut Eller  <heller@common-lisp.net>

	Require ABCL 0.22 and remove obsolete conditionalisation.

	* swank-abcl.lisp (call-with-debugger-hook)
	(install-debugger-globally)
	(call-with-debugging-environment, backtrace, print-frame, spawn):
	Remove #+/#- stuff.
	(preferred-communication-style): Return :spawn unconditionally.
	(sys::break): Removed.

2010-10-20  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-connect): Convert the port number read from
	minibuffer to an integer, passing it as a string to
	`make-network-process' isn't portable.
	Patch by Marko Kocic.

2010-10-19  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (invoke-nth-restart): Make sure there is such restart
	before invoking it.

2010-10-19  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (deinit-log-output): Use the right symbol for
	*LOG-OUTPUT*, swank package isn't available at the time
	swank-backend is compiled.

2010-10-16  Stas Boukarev  <stassats@gmail.com>

	* swank-loader.lisp (default-fasl-dir): Guard against using :asdf
	package if it doesn't exist.
	Patch by Anton Vodonosov.

2010-10-16  Attila Lendvai  <attila.lendvai@gmail.com>

	* swank-fuzzy.lisp: speed up by 2-4 times (on sbcl).

	* fuzzy.el: Clean up fuzzy completion's keymap code, drop
	mimic-key-bindings.

	* slime.el: Added separate host and port history for
	slime-connect.
	(slime-lookup-lisp-implementation): better error reporting and
	allow using a functionp to generate the arguments.

	* swank.lisp: Smarten up the label-value-line macros:
	  - support a :label emacs font property
	  - added key args: padding-length, display-nil-value,
	    hide-when-nil, splice-as-ispec, value-text
	  - label-value-line* will evaluate and splice the result
	    of the form after a @ character

	* swank-loader.lisp: Optional integration with ASDF. When ASDF is
	available, store slime fasl's where ASDF would store them. Also
	make sure swank.asd is visible to ASDF.

2010-10-09  Raymond Toy  <toy.raymond@gmail.com>

	* swank-cmucl.lisp (codepoint-length): Implement codepoint-length
	to return the number of codepoints in cmucl's utf-16 strings.

	* swank-backend.lisp (:swank-backend): Export codepoint-length.
	(codepoint-length): definterface codepoint-length.  Default is to
	use LENGTH.

	* swank-rpc.lisp (write-message): Call
	swank-backend:codepoint-length to get the correct length for
	emacs.

2010-10-08  Christophe Rhodes  <csr21@cantab.net>

	Pass more detailed source location information to
	swank:compile-string-for-emacs.  Motivated by R's source location
	needs (where srcrefs are line/column based).

	* slime.el (slime-compile-string): Generate :line location format
	from start-offset, passing it through to
	swank:compile-file-for-emacs.
	(find-definition.2): Use new-style position.

	* swank.lisp (compile-string-for-emacs): Use only the offset from
	the position argument.

	* swank-backend.lisp (swank-compile-string): Fix docstring typo.

2010-10-07  Nikodemus Siivola  <nikodemus@random-state.net>

	Hanging on to a *log-output* from a previous image is bad on SBCL
	at least: it is initialized to an FD-STREAM, which cannot be
	reused from one image to another.

	Deal with this by using sb-ext:*save-hooks* to clear the stream.

	* swank-sbcl.lisp (deinit-log-output): New function.

2010-10-02  Helmut Eller  <heller@common-lisp.net>

	Rename slime-macro/compiler-macro-expand-1 => slime-expand-1

	* slime.el (slime-expand-1): Renamed from
	slime-macro/compiler-macro-expand-1.
	(slime-expand-1-inplace): Renamed from
	slime-macro/compiler-macro-expand-1-inplace.

	* swank.lisp (swank-expand-1): Renamed from
	swank-macro/compiler-macro-expand-1.
	(swank-expand): Renamed from swank-macro/compiler-macro-expand.
	(expand-1): Renamed from macro/compiler-macro-expand-1.
	(expand): Renamed from macro/compiler-macro-expand.

2010-10-01  Helmut Eller  <heller@common-lisp.net>

	Don't use indent-sexp for macroexpanded code.
	indent-sexp is potentially slow and usually redundant.

	* slime.el (slime-initialize-macroexpansion-buffer): Don't use
	indent-sexp.
	(slime-eval-macroexpand-inplace): Avoid indent-sexp but
	use slime-insert-indented.

2010-10-01  Helmut Eller  <heller@common-lisp.net>

	Save result in kill ring for M-- C-x C-e.
	For C-u C-x C-e set mark before inserting.

	* slime.el (slime-eval-save): New function.
	(slime-eval-print): Set mark before inserting.
	(slime-interactive-eval): Use it.

2010-09-22  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (eval-for-emacs): Send (:abort condition) where
	condition is a condition which was aborted instead of just (:abort).
	* slime.el: Handle the above change.

2010-09-22  Stas Boukarev  <stassats@gmail.com>

	* swank-clisp.lisp (*external-format-to-coding-system*): Remove
	stray :latin-1 argument for ext:make-encoding.
	Reported by Mirko Vukovic.

2010-09-20  Stas Boukarev  <stassats@gmail.com>

	* swank-cmucl.lisp (character-completion-set): Implement. Requires
	recent versions of CMUCL.
	Patch by Raymond Toy.

2010-09-18  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (valid-function-name-p): New interface.
	(compiler-macroexpand-1): Use it to guard against type errors
	from COMPILER-MACRO-FUNCTION.

2010-09-18  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (before-init): push :SWANK to *FEATURES*. (lp#627313)

2010-09-18  Tobias C. Rittweiler  <tcr@freebits.de>

	Make C-c C-m also expand compiler macros. (lp#638720)

	* slime.el (slime-macro/compiler-macro-expand-1): New.
	(slime-macro/compiler-macro-expand-1-inplace): New.
	(slime-editing-keys): Map `C-c C-m' to first above.
	(slime-compiler-macroexpand-1): Take prefix-arg like others.
	(slime-compiler-macroexpand-1-inplace): Ditto.
	(slime-compiler-macroexpand): Thus deleted.
	(slime-compiler-macroexpand-inplace): Ditto.

	* swank.lisp (swank-macro/compiler-macro-expand-1): New defslimefun.
	(swank-macro/compiler-macro-expand): New defslimefun.
	(macro/compiler-macro-expand-1): New.
	(macro/compiler-macro-expand): New.
	(expand-repeatedly): New helper.

2010-09-03  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-forward-cruft): Use " \t\n" to match whitespaces
	instead of [:space:], XEmacs compatibility.

2010-09-03  Helmut Eller  <heller@common-lisp.net>

	For C-c C-k, ask before loading possibly broken fasl files.

	* slime.el (slime-compilation-result): Add 2 slots: loadp and
	faslfile.
	(slime-compilation-finished): Use them to load the faslfile.
	* swank.lisp (:compilation-result): Add 2 slots. Use keyword
	constructor.
	(compile-file-for-emacs): Return loadp and faslfile to Emacs.
	(collect-notes): Pass loadp and falsfile along.

2010-09-02  Stas Boukarev  <stassats@gmail.com>

	* swank-cmucl.lisp: #-cmu19 -> #+cmu18, cmu18 is allegedly the
	oldest supported CMUCL.

2010-09-01  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (background-save-image): add #-win32, because it
	uses symbols not present on win32.
	Reported by Holly Styles.

2010-08-31  Stas Boukarev  <stassats@gmail.com>

	* swank-cmucl.lisp (foreign-frame-p, gdb-exec, frame-ip): Sparc
	support.
	Patch by Raymond Toy.

2010-08-31  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (make-dspec): Elide the function name when
	generating a VOP description, since the VOP name is more useful
	and is the first part of the source-description list.

2010-08-28  Stas Boukarev  <stassats@gmail.com>

	* swank-cmucl.lisp (*gdb-program-name*): Determine gdb location
	from PATH.
	(gdb-exec): Use *gdb-program-name* instead of "gdb".
	(gdb-command): Mac OS X compatibility.
	Patch by Raymond Toy.

2010-08-25  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (exec-image): Use (car sb-ext:*posix-argv*) if
	SBCL doesn't have sb-ext:*runtime-pathname*.
	Reported by Vinay.

2010-08-22  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-xemacs-recompute-modelines): Add
	`slime-xemacs-recompute-modelines' to `pre-idle-hook', this solves
	the problem of synchronization of modelines.
	Thanks to Aidan Kehoe.

2010-08-21  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-recompute-modelines): Recompute modelines only
	for visible buffers. Kludge: modeline can be out of sync if the buffer
	becomes visible and no slime/lisp interaction took place yet.
	Patch by Raymond Toy.
	(slime-search-buffer-package): Revert, with the above
	change caching shouldn't be necessary.

2010-08-21  Helmut Eller  <heller@common-lisp.net>

	Add commands to enable/disable contribs.

	* slime.el (slime-enable-contrib, slime-disable-contrib): New.
	(slime-contrib): New struct to collect meta-data about contribs.
	(define-slime-contrib): Store meta-data in 'slime-contribs plist.
	(slime-all-contribs, slime-find-contrib, slime-read-contrib-name):
	New helpers.

2010-08-21  Anton Kovalenko  <anton@sw4me.com>

	Snapshot restore support for SBCL.

	* swank-backend.lisp (background-save-image): New.
	* swank-sbcl.lisp (command-line-args, dup, sys-execv, exec-image)
	(make-fd-stream, background-save-image): New.

2010-08-20  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-maybe-complete-as-filename): Limit backward
	search for #\", it slows down on large buffers.
	Reported by Raymond Toy.
	(slime-search-buffer-package): Cache the package, searching every time
	on large buffers may be slow.

2010-08-15  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (setup-server): Check the coding system before doing
	anything, otherwise it may be eaten by ignore-errors later.

2010-08-13  Helmut Eller  <heller@common-lisp.net>

	Find definition for (def-vm-support-routine NAME ...)

	* swank-cmucl.lisp (vm-support-routine-definitions): New.
	(find-definitions): Use it.

2010-08-12  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (save-image): Fix save-lisp-and-die invocation.
	Based on a patch by Anton Kovalenko.

2010-08-11  Helmut Eller  <heller@common-lisp.net>

	Bind *print-readably* to nil when printing the title.

	* swank.lisp (prepare-title): Factored out into new function.
	(*inspector-printer-bindings*)
	(*inspector-verbose-printer-bindings*): New.
	(with-string-stream): New.
	(emacs-inspect/istate): Renamed from emacs-inspect/printer-bindings.

2010-08-06  Stas Boukarev  <stassats@gmail.com>

	* swank-ccl.lisp (spawn): Revert the previous change, using
	:use-standard-initial-bindings nil might be not thread-safe.

2010-08-05  Stas Boukarev  <stassats@gmail.com>

	* swank-ccl.lisp (spawn): Specify
	:use-standard-initial-bindings nil, so that *readtable*
	etc. modifications persist.

2010-08-04  Stas Boukarev  <stassats@gmail.com>

	* swank-allegro.lisp (fspec-definition-locations): Default
	&optional position to 0, otherwise it may cause errors later.
	Reported by: Paulo Madeira.

2010-08-04  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-dispatch-event): :eval-no-wait, lisp sends a
	form in a string, not a function name and arguments. Add
	slime-check-eval-in-emacs-enabled.
	* swank.lisp (defpackage): export eval-for-emacs.

2010-07-30  Helmut Eller  <heller@common-lisp.net>

	Don't get confused by END-OF-FILE on unrelated streams.
	Fixes bug "slime connection broken on trivial condition..."
	Reported by Pascal J. Bourguignon.

	* swank.lisp (end-of-repl-input): New condition.
	(simple-repl, read-non-blocking): Use it.
	* slime.el ([test] end-of-file): Test it.

2010-07-30  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (print-part-to-string): Bind *print-readably* to nil.
	Useful when debugging broken printer methods.

2010-07-22  Vitaly Mayatskikh  <v.mayatskih@gmail.com>

	* swank-lispworks.lisp (list-callers-internal): Fix for LW6.
	(list-callees-internal): New function, use it.

2010-07-21  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (quit-lisp): Use sb-thread:terminate-thread
	instead of sb-ext:quit :recklessly-p t. This way
	sb-ext:*exit-hooks* will be run.
	Reported by Lorenz Mösenlechner.

2010-07-06  Helmut Eller  <heller@common-lisp.net>

	Find definition for (%primitive NAME ...)

	* swank-cmucl.lisp (template-definitions, primitive-definitions):
	New functions.
	(find-definitions): Use them.

2010-06-22  Helmut Eller  <heller@common-lisp.net>

	* swank-loader.lisp (*architecture-features*): ECL uses :x86_64.

2010-06-18  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-current-tlf-number,slime-current-form-path):
	Moved to contrib/slime-parse.el.

2010-06-18  Helmut Eller  <heller@common-lisp.net>

	Don't use goto-line.

	* slime.el (slime-goto-line): New function as replacement without
	goto-line's cruft that we don't want.

2010-06-04  Helmut Eller  <heller@common-lisp.net>

	* slime.el, swank.lisp: #'(lambda -> (lambda

2010-06-04 Stelian Ionescu <sionescu@cddr.org>

	* swank.lisp: Move definition of LCONS before first use.

2010-06-04  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (socket-fd): Add support for allegro.

2010-06-04  Helmut Eller  <heller@common-lisp.net>

	Some *sldb-quit-restart* related fixes.

	* swank.lisp (*sldb-quit-restart*): Set to nil by default.
	(throw-to-toplevel, debug-in-emacs): Get rid of boundp tests.
	(format-restarts-for-emacs): Add a mark for *sldb-quit-restart*.
	(handle-requests): Always bind *emacs-connection*.
	(with-connection): Get rid of call-with-connection so that
	compilers can remove the call frame more easily.
	(repl-input-stream-read): Factored out from
	make-repl-input-stream.  Bind a *sldb-quit-restart* here too; no
	need to restart the repl and a extra prompt for errors in Emacs
	requests.

2010-05-28  Helmut Eller  <heller@common-lisp.net>

	Fix last change.

	* slime.el (define-slime-contrib): Fix names.
	Remove provide; makes no sense to call provide before file is
	completely loaded.

2010-05-28  Helmut Eller  <heller@common-lisp.net>

	* slime.el (define-slime-contrib): Use destructuring-bind.

2010-05-28  Helmut Eller  <heller@common-lisp.net>

	Move some var-defs before first use.

	* slime.el (slime-show-xref-buffer, slime-read-connection)
	(slime-thread-index-to-id):

2010-05-28  Helmut Eller  <heller@common-lisp.net>

	Move wacky parsing code to contrib.

	* slime.el (slime-extract-context, slime-parse-context)
	(slime-in-expression-p, slime-pattern-path)
	(slime-beginning-of-list, slime-end-of-list)
	(slime-parse-toplevel-form, slime-arglist-specializers)
	(slime-definition-at-point, slime-current-parser-state): Moved to
	contrib/slime-parse.el
	(slime-inspect-definition, slime-disassemble-definition): Moved to
	contrib/slime-fancy-inspector.el

2010-05-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] interactive-eval): Fix test.

2010-05-27  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp (socket-fd): Implement backend function.

2010-05-27  Helmut Eller  <heller@common-lisp.net>

	Clean up some of the confusion regarding *sldb-quit-restart*.

	* swank.lisp (top-level-restart-p, *toplevel-restart-available*)
	(coerce-restart): Deleted.
	(with-top-level-restart, simple-repl): Simplify.

2010-05-26  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (swank-error): Unrename from swank-protocol-error.

2010-05-26  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (parse-gdb-line-info): Try working dir first.

2010-05-26  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-defun-if-undefined): Renamed from
	slime-DEFUN-if-undefined. No need to yell.

2010-05-26  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-compile-file): Only send non-nil keyword args.
	(slime-hack-quotes): New function.

2010-05-18  Stas Boukarev  <stassats@gmail.com>

	* slime.el (sldb-insert-condition): Don't create a mouse tooltip
	for long error message, tooltip shows the same text and doesn't
	add any value.
	(slime-definition-at-point): factor out of `slime-inspect-definition'.
	(slime-disassemble-definition): New, similar to
	`slime-inspect-definition'.

	* swank.lisp (disassemble-form): rename from disassemble-symbol,
	do the same as before but evaluate the argument.


2010-05-16  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-close-popup-window): Don't kill
	slime-popup-restore-data local variable in another buffer.

2010-05-13  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (define-slime-contrib): New macro.

2010-05-13  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (*after-init-hook*, simple-break)
	(coerce-to-condition, use-threads-p, current-thread-id): Moved
	around in swank.lisp.
	(with-temp-package): Deleted; not used anywhere.
	(ensure-list): Use in SWANK-REQUIRE.

2010-05-11  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-inspect-definition): New function,
	inspects definition at point.
	(slime-parse-context): Add :defstruct and :defpackage.

2010-05-10  Mark Evenson  <evenson@panix.com>

	* swank-loader.lisp (*architecture-features*): Add Java platforms
	as features for ABCL.

2010-05-06  Helmut Eller  <heller@common-lisp.net>

	Remove some non-standard file variables.

	* swank-cmucl.lisp, swank-scl.lisp: Remove pbook vars.
	* swank-clisp.lisp: Remove indentation settings. Slime does it
	automatically.

2010-05-05  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-dispatch-event): Fix typo in the previous commit.

2010-05-05  Stas Boukarev  <stassats@gmail.com>

	* Make buffer names more consistent.
	Patch by Leo Liu.

2010-05-05  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (gdb-command): Use gdb's MI.

2010-05-05  Mark Evenson  <evenson@panix.com>

	Fix for Cygwin Emacs filename problem.

	* slime.el (slime-init-command): Use slime-to-lisp-filename.

2010-05-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-exit): When stepping, close buffer after a delay.
	(sldb-close-step-buffer): New function.

2010-05-01  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-restart-sentinel): Don't pop to the inferior
	buffer, since this command is usually run either from
	*inferior-lisp* buffer or from REPL, it makes sense to reuse
	current window instead of messing up window configuration.
	(slime-move-point): New function, moves point in a buffer and
	its window.

2010-04-29  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-compile-file): Run check-parens after checking
	that the buffer is associated with a file.

2010-04-27  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-info): New function, opens the manual.

2010-04-24  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (format-values-for-echo-area): Also print the length of an
	integer in bits.

2010-04-23  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-update-threads-buffer): Use slime-eval-async.

2010-04-23  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-inspector-buffer): Use slime-with-popup-buffer,
	that solves the problem with keybindings shadowed by slime-mode.
	Reported by Nathan Bird.

	* README: Better wording.

2010-04-22  Stas Boukarev  <stassats@gmail.com>

	* swank-backend.lisp (with-symbol): Test for package before doing
	find-symbol.
	* swank-sbcl.lisp(Multiprocessing): use with-symbol.
	(emacs-inspect t): Remove newlines from text returned by
	sb-impl::inspected-parts, otherwise there will be ".." inserted by
	the printer due to (*print-lines* 1).

2010-04-21  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-open-inspector): Use forward-line instead of
	goto-line, since it doesn't result in  "Mark set" message.
	(slime-inspector-buffer): Enable slime-mode after enabling
	slime-inspector-mode, otherwise the former will be disabled by the
	latter.

2010-04-20  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (condition-timed-wait): New helper. Use
	WITH-DEADLINE rather than WITH-TIMEOUT because the latter conses a
	new timer, and this function is called _a lot_.
	(receive-if): Use it.

2010-04-20  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-update-threads-buffer): Save point position
	on updates.

2010-04-20  Stas Boukarev  <stassats@gmail.com>

	* README: advertise additional contribs, especially slime-fancy.

2010-04-19  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (symbol-classification-string): New function to
	replace (symbol-classification->string (classify-symbol
	symbol)). It's faster and conses much less, while it is called
	many times by fuzzy completion and fancy inspector.
	(symbol-classification->string): Removed.
	(list-threads): Exclude the current thread only if its name is
	"worker".

2010-04-18  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-threads-update-interval): Add :group and :type
	parameters to this customization.
	Thanks to Mark Harig.

2010-04-17  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-threads-update-interval): New customization
	variable, if set to a number the threads buffer will
	updated with this interval.
	(slime-with-popup-buffer): Rename modes option to mode,
	for a major mode. Enabling minor modes from within the body
	doesn't cause troubles. End that way it is compatible with XEmacs
	since it doesn't need to use minor-mode-list to distinguish
	between minor and major modes.

	* swank.lisp (list-threads): Delete the current thread from the
	listing.

2010-04-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (sldb-mode): Include some more commands in its help.
	(sldb-goto-last-frame): Do not center to the middle but to the
	bottom of the window.

2010-04-14  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (compile-file-for-emacs): Actually commit the change
	described in 2010-04-12.

2010-04-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] interrupt-encode-message): New test.

2010-04-14  Helmut Eller  <heller@common-lisp.net>

	Handle errors during interrupt processing with SLDB.
	Bugfix for http://article.gmane.org/gmane.lisp.slime.devel/9641

	* swank.lisp (invoke-or-queue-interrupt): When the queue is full,
	process the interrupt immediately and also handle
	SERIOUS-CONDITIONs during interrupt processing in SLDB.  SLDB
	should work more likely than the interrupted code is expected to
	handle the condition.
	(with-interrupts-enabled%): Don't check for interrupts when
	toggling interrupts off.
	(wait-for-event): Add docstring.

2010-04-14  Helmut Eller  <heller@common-lisp.net>

	Move error handling and logging from swank-rpc.lisp to swank.lisp

	* swank.lisp (log-event, destructure-case, decode-message)
	(encode-message, decode-message, swank-protocol-error): Moved back
	to swank.lisp from swank-rpc.lisp.  It never belonged there
	anyway.

	* swank-rpc.lisp (read-message, write-message): New functions.
	(swank-reader-error): New condition.

2010-04-12  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-doc-bindings): Restore key for slime-apropos.

2010-04-12  Helmut Eller  <heller@common-lisp.net>

	Fix compile-file for various backends.

	* slime.el (slime-compile-file): Only pass non-nil keyword args to
	Lisp.
	(slime-simplify-plist): New helper.
	(slime-compile-and-load-file): Pass policy parameter directly
	without using global variables.

	* swank.lisp (compile-file-for-emacs): Change singature sightly.

2010-04-06  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-create-compilation-log): Enable
	compilation-mode, which was enabled previously by
	slime-insert-compilation-log.

2010-04-05  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-doc-bindings): Move slime-apropos to C-c C-d A,
	C-c C-d a will be bound to slime-autodoc-manually.

	* doc/slime.texi: Document the above change.

2010-04-05  Stas Boukarev  <stassats@gmail.com>

	* slime.el: Some further adaptations to the new
	slime-with-popup-buffer.

2010-04-04  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-insert-threads): Use header-line-format only when
	it's present (XEmacs doesn't support it).

2010-04-04  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-with-popup-buffer): Make &optional parameters
	&key parameters, add modes parameter.
	slime-with-popup-buffer sets up some buffer local variables,
	but enabling major modes kills all buffer locals, so modes should
	be enabled before setting them.
	Adopt changes to slime-with-popup-buffer where needed.
	This fixes several bugs with popup buffers on non-default connections.

2010-04-03  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-update-threads-buffer): New formatting, with labels
	and additional information provided by the backend.
	* swank-allegro.lisp (thread-attributes): Move process-priority from
	thread-status.

2010-03-29  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Add gud as compile-time dependency.

2010-03-29  Helmut Eller  <heller@common-lisp.net>

	Compile swank-sbcl-exts only for SBCL.

	* swank-loader.lisp (*contribs*): Add #+sbcl.

2010-03-29  Helmut Eller  <heller@common-lisp.net>

	Minor cleanups

	* swank.lisp (connection): Make socket-io read-only again.
	(*connections*): Move declaration before first use.
	(finish-connection-setup): Merged into make-connection.
	(accept-connections): Renamed from serve-connection and
	reorganized so that the socket-io slot can be read-only.
	(accept-authenticated-connection): Renamed to authenticate-client.
	Update callers accordingly.

2010-03-29  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (connection-info): Use princ-to-string rather than
	prin1-to-string as the latter may barf if *print-readably* is nil.

2010-03-27  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-check-location-buffer-name-sanity): Less duplication,
	reuse slime-check-location-filename-sanity.
	(slime-check-location-filename-sanity): Do any work only when
	slime-warn-when-possibly-tricked-by-M-. is non-nil.

2010-03-21  Stas Boukarev  <stassats@gmail.com>

	* start-swank.lisp: Document options to swank-loader:init.

	* doc/slime.texi (Miscellaneous): mention
	`sldb-break-with-system-debugger'.

2010-03-21  Stas Boukarev  <stassats@gmail.com>

	* start-swank.lisp: New file for starting swank by simply loading
	sbcl --load start-swank.lisp

2010-03-19  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-lisp-implementation-program): New connection
	variable.
	(slime-set-connection-info): Adapted to set it.
	(slime-attach-gdb): Use it to invoke gdb so gdb is able to find
	debugging symbols on non-Linux platforms.

	* swank.lisp (connection-info): Include lisp-implementation-program.

	* swank-backend.lisp (lisp-implementation-program): New interface.
	Default implementation based on command-line-args.

	* swank-ecl.lisp (command-line-args): Implement.

2010-03-18  Tobias C. Rittweiler  <tcr@freebits.de>

	Remove attach-gdb restart. Instead add SLDB shortcut `A'.

	* slime.el (slime-dispatch-event): Remove :gdb-attach.
	(slime-attach-gdb): Changed API. Takes connection not pid now and
	lightweight &optional arg. If not lightweight, get the default gdb
	config from the inferior Lisp.
	(sldb-break-with-system-debugger): New command, bound to `A' in
	sldb. Called this way to mimick
	`sldb-break-with-default-debugger', and because it may make sense
	to go beyond gdb in future, e.g. to invoke the Java Debugger for
	ABCL.

	* swank.lisp (call-with-gdb-restart, with-gdb-restart): Removed.
	(with-top-level-restart): Remove use of with-gdb-restart.
	(make-connection, start-server, create-server, setup-server):
	Remove inferior-lisp flag again. Not needed anymore.

2010-03-18  Tobias C. Rittweiler  <tcr@freebits.de>

	Add M-x slime-attach-gdb as an interactive function.

	The ATTACH-GDB restart is nice because it's convenient and the
	backends can specify customized gdb configuration.

	Sometimes, if the Lisp is too screwed up, going over a restart
	involving the SWANK middle layer may not be possible. For that, a
	manual M-x slime-attach-gdb may come in handy.

	* slime.el (slime-read-connection): New helper.
	(slime-attach-gdb): Use it. Make it an interactive function.

2010-03-18  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (call-with-gdb-restart): Forgot to remove trailing T.

2010-03-18  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (open-dedicated-output-stream): Forgot to rename
	accept-authenticated-connection to accept-authenticated-client
	here.

2010-03-18  Tobias C. Rittweiler  <tcr@freebits.de>

	Add an ATTACH-GDB restart to SLDB.

	* swank.lisp (call-with-gdb-restart): New. Sends the new
	:gdb-attach event to Emacs.
	(with-gdb-restart): Sugar.
	(with-top-level-restart): Also expand to with-gdb-restart.
	(dispatch-event): Add :gdb-attach event.

	* swank-backend.lisp (gdb-initial-commands): New interface
	function so backends can customize how gdb needs to be configured
	for their implementation.

	* swank-ecl.lisp (gdb-initial-commands): Implement.

	* slime.el (slime-dispatch-event): Add clause for :gdb-attach.
	(slime-attach-gdb): New.

2010-03-18  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (connection): Add socket slot, make socket-io slot
	not be required to be filled in during object creation. Add
	inferior-lisp slot so we can know whether a connection belongs to
	a superior Emacs process. Need for that will come in following
	commit.
	(make-connection): Our constructor.
	(create-connection): Removed; not needed anymore.
	(finish-connection-setup): Function to fill socket-io slot.
	(start-server): Results in inferior-lisp slot being T.
	(create-server): Results in inferior-lisp slot being NIL.
	(setup-server): Adapted accordingly. Construct connection early so
	we do not have to pass down all the meta information explicitly.
	(serve-connection): Adapted accordingly.
	(accept-authenticated-client): Renamed from
	accept-authenticated-connection.
	(dispatch-event): Get rid of unused :%apply and :end-of-stream
	events.

2010-03-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ecl.lisp (source-location): Also return EXT::FOO as
	candidate to search through the TAGS file because SI and EXT both
	name the same package, and in ECL's code base, sometimes the
	former, sometimes the latter is used.

2010-03-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (signal-interrupt): Removed.
	(interrupt-worker-thread): Slurp in definition of
	signal-interrupt. No need for invoke-or-queue-interrupt twice in
	case we do not use threads. Thus micro-prettification of
	backtraces.

2010-03-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ecl.lisp (source-location): Move call to
	TRANSLATE-LOGICAL-PATHNAME from here into MAKE-FILE-LOCATION
	because locations-via-annotations may now also involve logical
	pathnames.

2010-03-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ecl.lisp (*original-sigint-handler*)
	(install-sigint-handler): Deleted; we directly implement
	call-with-user-break-handler instead.
	(call-with-user-break-handler): New. Correctly interrupt main
	thread instead of newly spawned handle-signal thread on SIGINT.
	(make-interrupt-handler): New helper.

2010-03-09  Stas Boukarev  <stassats@gmail.com>

	* swank-ccl.lisp (emacs-inspect function): Print closed over variables
	in case of closure.

2010-03-09  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-parse-context): Add defclass.

2010-03-09  Helmut Eller  <heller@common-lisp.net>

	Some more fixes for Allegro

	* swank-allegro.lisp (function-source-location): Use
	xref::object-to-function-name which seems to work better for some
	cases.
	(fspec-definition-locations): For :top-level-forms return a list
	of ((fspec loc)) not just (fspec loc).  Also deal with the file
	vs. buffer issue.
	(ldb-code-to-src-loc): Don't use *temp-file-map* before it is
	declared.
	(pc-source-location): Be a bit more fuzzy when searching the
	code-location for a pc.

2010-03-08  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-extract-context): Add defvar and defparameter.

2010-03-08  Helmut Eller  <heller@common-lisp.net>

	Fix some of the brokeness in the last change.

	* swank-allegro.lisp (frame-source-location): Deal with frames for
	undefined functions better.
	(ldb-code-to-src-loc): Handle temp-files properly.

2010-03-08  Helmut Eller  <heller@common-lisp.net>

	Try to use source-level debugging features in Allegro 8.2

	* swank-allegro.lisp (disassemble-frame): Use undocumented
	debugger::dyn-fd-analyze to figure out the PC and display it.
	(pc-source-location, ldb-code-to-src-loc, longest-common-prefix)
	(source-paths-of): New functions.
	(frame-source-location): Use pc-source-location.  Still far from
	optimal since Allegro rarely records source regions and anonymous
	functions don't seem to carry source level debug-info at all.
	(*temp-file-map*, buffer-or-file-location, find-fspec-location):
	Use a table to map temp-file names back to Emacs buffers instead
	of putting an eval-when-compile form in the source.  The
	eval-when-compile form messed up source positions.
	(*temp-file-header-end-position*, find-definition-in-buffer):
	Deleted.
	(compile-from-temp-file): Bind excl:*load-source-debug-info* and
	compiler:save-source-level-debug-info-switch so that Allegro
	doesn't try to load debug-info from deleted files.  Also put
	the filename in *temp-file-map*.

2010-03-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (dispatch-interrupt-event): Take a connection because
	it boils down to SIGNAL-INTERRUPT which uses USE-THREADS-P which
	needs a connection.
	(install-fd-handler): Adapted accordingly.
	(simple-serve-requests): Adapted accordingly. Additionally, remove
	superfluous WITH-SWANK-PROTOCOL-HANDLER as that's established by
	WITH-CONNECTION already.
	(simple-repl): Show "abort inferior lisp" restart only if not a
	more appropriate "abort some REX" restart is available. Also make
	sure to return in case of END-OF-FILE, otherwise there's an
	infinite loop where we end up in the debugger again and again
	until the user eventually selects close-connection restart himself.
	(make-repl-input-stream): Use WITH-TOP-LEVEL-RESTART so
	`sldb-quit' can be used in SLDB.

2010-03-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (close-connection): Include initially passed
	coding-system in debugging output.

2010-03-08  Tobias C. Rittweiler  <tcr@freebits.de>

	Make swank:connection-info include information about initially
	passed coding-system, and the resulting external-format of the
	socket. Debugging aid.

	* swank.lisp (connection.external-format): New function.
	(start-server, create-server): Pass down coding-system, not
	external-format.
	(setup-server): Pass down both, coding-system and external-format.
	(serve-connection): Ditto.
	(create-connection): Set coding-system slot of CONNECTION.
	(connection-info): Include coding-system and external-format.

2010-03-07  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (count-cr): Deleted.  No longer used.

2010-03-07  Helmut Eller  <heller@common-lisp.net>

	Handle src-locs of compiler warnings in Allegro 8.2.
	Didn't somebody already fix that?

	* swank-allegro.lisp (location-for-warning)
	(handle-undefined-functions-warning): In 8.2 src-locs include not
	only start but also and end positions.

2010-03-07  Stas Boukarev  <stassats@gmail.com>

	* swank-ecl.lisp (source-location): Don't do
	(setq file (tmpfile-to-buffer file)) in a COND condition,
	otherwise next cond clause will get null file.
	Apply translate-logical-pathname to pathnames.

2010-03-05  Helmut Eller  <heller@common-lisp.net>

	Remove some unused stuff.

	* swank-ccl.lisp (openmcl-set-debug-switches)
	(*interesting-internal-frames*)
	(interesting-frame-p): Unused. Deleted.

2010-03-05  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp: Indentation fixes.

2010-03-05  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ecl.lisp: Make backend depend on ECL version 10.3.1 which
	just got released. We do not support older versions. Previous
	version pretty much didn't work in combination with Slime anyway.

2010-03-05  Tobias C. Rittweiler  <tcr@freebits.de>

	Ecl: Make M-. work on function interactively compiled via C-c C-c.

	* swank-ecl.lisp (*tmpfile-map*, note-buffer-tmpfile)
	(tmpfile-to-buffer): New helpers.
	(swank-compile-string): Use them. Also use new COMPILE-FILE
	keywords :SOURCE-TRUENAME and :SOURCE-OFFSET available in ECL
	HEAD.
	(find-definitions): Slurp in definition of
	FIND-DEFINITIONS-BY-NAME.
	(find-definitions-by-name): Hence not needed anymore.
	(source-location): Use TMPFILE-TO-BUFFER to get buffer source
	location of interactively compiled functions.

2010-03-04  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (emacs-inspect): Define default method to use
	the result of SYS:INSPECTED-PARTS if non-nil.

2010-03-03  Stas Boukarev  <stassats@gmail.com>

	* doc/slime.texi (Inspector): document slime-inspector-eval.
	Patch by Mark Harig.

2010-03-03  Helmut Eller  <heller@common-lisp.net>

	Don't special case special operators with M-. for CMUCL.

	* swank-cmucl.lisp (function-definitions): Special operators will
	have IR1-translators anyway, so no need to mark them "special".
	(gf-definitions): Renamed from generic-function-definitions.

2010-03-03  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-inspector-history): New command.

2010-03-03  Helmut Eller  <heller@common-lisp.net>

	Don't try to bind keywords in inspector-eval.

	* swank.lisp (inspector-eval): For now, don't bind symbols which
	are constantp.  Maybe something better can be found later.

2010-03-03  Helmut Eller  <heller@common-lisp.net>

	Use @ instead of # to mark object in the inspect history.

	* swank.lisp (print-part-to-string): Use @.

2010-03-03  Helmut Eller  <heller@common-lisp.net>

	Make eval-in-frame display multiple values; not only the first.

	* swank.lisp (values-to-string): New macro.
	(eval-string-in-frame): Use it.

2010-03-02  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (definition-source-for-emacs): Don't error when
	source location doesn't contain form position, point emacs to the
	beginning of a source file and if it's a function provide a
	snippet "(defun <name> ".

2010-03-02  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-compile-and-load-file): Accept C-u arguments for
	compilation policy the same way as slime-compile-defun.

	* swank.lisp (compile-file-for-emacs): Take an additional policy
	argument.
	* swank-backend.lisp (swank-compile-file): Ditto.

	* swank-sbcl.lisp (compiler-policy, (setf compiler-policy)):
	rename from get/set-compiler-policy.
	(with-compiler-policy): New macro.
	(swank-compile-file): Use with-compiler-policy.
	(swank-compile-string): Ditto.

	* doc/slime.texi (Compilation): Update.

2010-03-01  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (documentation-symbol): Show arglists for functions too.

2010-03-01  Tobias C. Rittweiler  <tcr@freebits.de>

	Fix that annoying bug that caused being constantly asked to switch
	connection in case one had multiple connections running and quit
	from one.

	* slime.el (slime-modeline-string): Bail out early because
	`slime-current-package' involves `slime-connection' in case the
	slime-repl contrib is used, and querying the user in a
	periodically called function is rather annoying..

2010-02-26  Stas Boukarev  <stassats@gmail.com>

	* swank-loader.lisp (ecl-version-string): Check length of
	the result of ext:lisp-implementation-vcs-id before doing subseq.
	On CVS it returns "unknown".

2010-02-25  Stas Boukarev  <stassats@gmail.com>

	* swank-loader.lisp (ecl-version-string): In
	#+(or) (progn #+#.(cl:print cl:nil) 1) PRINT does run on SBCL, which
	breaks #+#.(cl:if (cl:find-symbol "SYMBOL" :ext) ...) here,
	guard it with
	(find-package :ext) until further investigations.

2010-02-25  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-loader.lisp (lisp-version-string): Add git-commit ids for
	ECL because individual commits do not guarantee fasl
	compatibility.

2010-02-23  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (when-let): New macro. For backends and
	swank.lisp.

	* swank-ecl.lisp: Use it. Also use new location support of ECL git
	HEAD.

2010-02-23  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-postprocess-xref): Show a TAGS entry's hints as
	part of an Xref's dspec for the case of multiple matches.

2010-02-23  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ecl.lisp (preferred-communication-style): Go back to
	NIL. Some parts (like the compiler and CLOS) of ECL do not seem to
	be thread-safe yet. Also get rid of non-working implementation of
	:FD-HANDLER.
	(poll-streams, wait-for-input): Implement on top of select() for
	communication-style=NIL.
	(*descriptor-handlers*, add-fd-handler, remove-fd-handlers): Get
	rid of.
	(grovel-docstring-for-arglist): Get rid of it, too.
	(arglist): ECL now provides an extra accessor to a function's
	arglist. Use that instead.
	(emacs-inspect): Get rid of the default method. Don't see its
	point.

2010-02-22  Tobias C. Rittweiler  <tcr@freebits.de>

	Make swank-ecl.lisp work with latest ECL Git HEAD.

	* swank-ecl.lisp (assert-TAGS-file): Simplified.
	(assert-source-directory): New helper.
	(c-function-p): New helper.
	(c-function): Type based on above.
	(source-location): Move bits from FIND-DEFINITIONS-FOR-TYPE to
	this function. Use CONVERTING-ERRORS-TO-ERROR-LOCATION.
	(find-definitions-for-type): Simplified by using it.

2010-02-22  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (converting-errors-to-error-location): Moved
	here from swank-sbcl.lisp so other backends can make use of it, too.

	* swank-sbcl.lisp: The above macro was called slightly
	differently, so update uses accordingly.

2010-02-22  Tobias C. Rittweiler  <tcr@freebits.de>

	Make M-. be able to jump right into the C source for ECL.

	Because it's based on TAGS files, M-. and M-* will DTRT once in a
	.c file.

	* swank-ecl.lisp (assert-TAGS-file): New helper.
	(classify-definition-name): Ditto.
	(find-definitions-for-type): Ditto. Understands Lisp and C
	functions.
	(find-definitions): Use them.
	(source-location): New helper. Extracted from FIND-SOURCE-LOCATION.
	(find-source-location): Use it.
	(swank-compile-string): Only try to delete temporary files if they
	exist.

2010-02-22  Tobias C. Rittweiler  <tcr@freebits.de>

	Make it possible for SWANK backends to specify locations based on
	a TAGS file.

	* slime.el (slime-postprocess-xref, slime-postprocess-xrefs): New
	functions. They convert TAGS based locations from SWANK into
	file+position based locations because the rest of Slime expects
	and works with those.
	(slime-find-definitions): Call slime-postprocess-xrefs.
	(slime-xref): Ditto.
	(slime-etags-to-locations): The function which does the actual
	conversion. Extracted from `slime-etags-definitions'.
	(slime-etags-definitions): Use it.

	* swank-backend (defimplementation): Add implicit BLOCK.
	(:etags-file, :tag): Mentioned for possible values in :LOCATION.

2010-02-20  Tobias C. Rittweiler  <tcr@freebits.de>

	More work on ECL's swank-backend.

	* swank-ecl.lisp (accept-connection): Handle :buffering, and
	:external-format.
	(external-format): New helper.
	(find-external-format): Make sure to only return :default in case
	ECL was built with --disable-unicode; it'll barf on anything else.
	(socket-fd): Add two-way-stream case due to recent changes in ECL.
	(make-file-location, make-buffer-location): New helpers.
	(condition-location): Use them.
	(swank-compile-file): Handle :external-format.
	(compile-from-stream): Deleted. Slurped into swank-compile-string.
	(swank-compile-string): Call SI:MKSTEMP correctly. Make sure to
	also remove fasl file, not just source file.
	(grovel-docstring-for-arglist): Do not look at "Syntax:" entry in
	docstring because that was a kludge. Upstream ECL should be
	modified instead.
	(in-swank-package-p, is-swank-source-p, is-ignorable-fun-p):
	Commented out. They make debugging ECL's swank-backend harder.

2010-02-20  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-loader.lisp (*architecture-features*): Add :PENTIUM3 and
	:PENTIUM4; they're used by ECL.
	(handle-swank-load-error): Renamed from HANDLE-LOADTIME-ERROR. Use
	*FASL-DIRECTORY* rather than (DEFAULT-FASL-DIR). Parametrize
	context to differentiate b/w compilation/loading.
	(compile-files): Adapted accordingly. Also make sure that an error
	is signaled in case COMPILE-FILE returns NIL as primary result.

2010-02-20  Stas Boukarev  <stassats@gmail.com>

	* swank-ccl.lisp: Remove outdated comment at the beginning
	since it may be misleading.

	* slime.el: In minor-mode-alist for slime-popup-buffer-mode,
	run slime-modeline-string only if slime-mode isn't active, because
	slime-mode runs slime-modeline-string from minor-mode-alist too
	resulting in duplicate modeline strings.
	Reported by Leo Liu.

2010-02-18  Mark Harig  <idirectscm@aim.com>

	The compiler warns about various stuff. Fix some of it.

	* slime.el (slime-add-local-hook): Remove support for Emacs 20.
	(sldb-recenter-region): Use forward-line; not next-line.

2010-02-17  Helmut Eller  <heller@common-lisp.net>

	Add a command to eval stuff in the inspector.

	* slime.el (slime-inspector-eval): New command.
	(slime-inspector-mode-map): Bind it to 'e'.
	* swank.lisp (inspector-eval): New function.
	* swank-backend.lisp (eval-context): New function.
	* swank-cmucl.lisp (eval-context): Implement it.

2010-02-17  Helmut Eller  <heller@common-lisp.net>

	Point-entered hooks in the xref buffer don't work so well.
	Use forward/backward commands instead.

	* slime.el (slime-xref-next-line, slime-xref-prev-line): New
	commands.
	(slime-xref-show-location): New aux function.
	(slime-xref-mode-map): Remap up/down to next/prev location
	commands.  Make SPC and RET do the same.

2010-02-17  Helmut Eller  <heller@common-lisp.net>

	Select the xref buffer.
	I never could get used to the next/prev cycling.

	* slime.el (slime-with-xref-buffer): Select the buffer.
	(slime-insert-xrefs): Add point-entered hook to automatically
	display the current location.
	(slime-xref-entered): New function.
	(slime-show-buffer-position): Don't use reposition-window which
	seems very slow and doesn't even do a particularly good job.  The
	new heuristic is much cruder but faster.
	(slime-xref-mode-map): Remove apparently redundant bindings for
	RET.

2010-02-17  Helmut Eller  <heller@common-lisp.net>

	Get rid or snapshots.

	* slime.el (slime-narrowing-configuration, slime-emacs-snapshot)
	(slime-current-narrowing-configuration)
	(slime-set-narrowing-configuration, slime-current-emacs-snapshot)
	(slime-set-emacs-snapshot)
	(slime-current-emacs-snapshot-fingerprint, slime-frame-windows):
	Deleted.  Update call-sites accordingly.

2010-02-17  Helmut Eller  <heller@common-lisp.net>

	Test suite hangs for CCL and CMUCL.

	* slime.el ([test] compile-defun): Remove those compile-time read
	errors for which some implementations invoke the debugger.
	(sexp-at-point.1): Remove failing tests

2010-02-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-loader.lisp: Compile files on ECL, too.

2010-02-16  Tobias C. Rittweiler  <tcr@freebits.de>

	Pimp my swank.

	* swank-ecl.lisp: We depend on ECL 10.2.1 which is not released
	yet -- you need git/cvs HEAD. Added :spawn, and :fd-handler as
	communication-style (Thanks to Ram Krishnan), improve compilation
	hooks so highligting of warnings works, + various cleanup.

2010-02-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-load-contribs): Do not call SWANK-REQUIRE
	asynchronously, if host Lisp uses :SPAWN that may result in the
	attempt to load in code concurrently -- the host Lisp may not
	support that.

2010-02-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-attempt-connection): Fix typo. Thanks to Mark
	Harig for spotting it.

2010-02-13  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-attempt-connection): Do not keep on trying to
	connect if inferior process died.

2010-02-07  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ecl.lisp: Update threading code. ECL doesn't still work
	with :spawn, though. Work in progress.

2010-02-07  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (xref-doit): Declare eql-specializing parameter
	ignorable, as some implementations complain about them not being
	used.

2010-02-01  Mark Harig  <idirectscm@aim.com>

	* slime.el: Added missing pieces to make `slime-cycle-connections'
	available from keystrokes.
	(slime-prefix-bindings): Added "\C-xn" entry.
	(slime-cycle-connections): Corrected grammar in doc string.
	(def-slime-selector-method): Added menu item `n' to SLIME selector
	menu.

	* doc/slime.texi: Added a description for the new key sequence for
	`slime-cycle-connections' and for the new menu item in the SLIME
	selector menu.
	Node slime-selector: Added menu item `n' and cross-references to
	"Multiple Connections" node.
	Node Multiple connections: Added C-c C-x n description.  Added
	cross-references to `slime-selector' node.

2010-01-31  Tobias C. Rittweiler  <tcr@freebits.de>

	* hyperspec.el: When using C-c C-d ~ TAB, previously there were
	entries for "C" and "C: Character", which unpleasingly crowded the
	completion buffer, so I made it show one entry ("C - Character")
	only. RIP, erik.

2010-01-30  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-cycle-connections): Change docstring, it
	doesn't make connection buffer-local.
	* doc/slime.texi (Multiple connections): document
	slime-cycle-connections.

	* swank.lisp (pathname-as-directory): Treat "/foo/bar" and "/foo/bar/"
	the same.
	(compile-file-output): Use the above function.

2010-01-28  Mark Evenson  <evenson@dada.local>

	* swank-abcl.lisp (emacs-inspect): Make inspection of Java objects
	toString() results dependent on explicit user request to avoid
	potentially computationally expensive operations.

2010-01-27  Stas Boukarev  <stassats@gmail.com>

	* swank-rpc.lisp: NIL -> nil (for unusual readtable settings).
	Spotted by Harald Hanche-Olsen.

2010-01-26  Mark Evenson  <evenson@dada.local>

	* swank-abcl.lisp: Import
	MOP::COMPUTE-APPLICABLE-METHODS-USING-CLASSES if it exists in the
	ABCL implementation.

2010-01-25  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-allegro.lisp (redefinition-p, redefinition): New.
	(handle-compiler-warning): Add :severity for redefinitions,
	style-warnings, errors.

2010-01-21  Stas Boukarev  <stassats@gmail.com>

	* swank-ccl.lisp (with-frame): Put this macro before it's used.

2010-01-20  Terje Norderhaug  <terje@in-progress.com>

	* swank.lisp (with-swank-protocol-error-handler): Refactor using
	safe-backtrace.
	* swank-rpc.lisp (make-swank-protocol-error): Delete call to
	swank:safe-backtrace to eliminate dependency on swank.lisp module.
	* swank-rpc.lisp (swank-protocol-error): Remove
	swank-protocol-error.backtrace as the capture of a safe-backtrace
	is covered by with-swank-protocol-error-handler.

2010-01-20  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-thread-kill): If the region is active, then
	kill all threads in the region.

2010-01-19  Stas Boukarev  <stassats@gmail.com>

	* swank-rpc.lisp (:swank-rpc): (:use :cl), SBCL
	doesn't use it by default.

2010-01-19  Terje Norderhaug  <terje@in-progress.com>

	* Refactorized parts of swank.lisp into a new swank-rpc module.

2010-01-14  Stas Boukarev  <stassats@gmail.com>

	* doc/slime.texi (Setting up the lisp image):
	(swank-loader:init) is also needed for loading swank.
	Reported by Evgeny Bahvalov.

2010-01-13  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (*swank-state-stack*): Delete. Not needed anymore.
	(defslimefun state-stack): Delete.
	(decode-message): Adapted.
	(debug-in-emacs): Adapted.

2010-01-11  Mark Evenson  <evenson@dada.local>

	* swank-abcl.lisp (emacs-inspect): Implementation for Java
	objects.

	Fix compiler warning about *ABCL-SIGNALED-CONDITIONS*.

2010-01-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend (declaration-arglist): Normalize declaration
	specifiers to contain `variables' rather than `vars'.

2010-01-05  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (compiler-note-location): Add missing return-from.

2010-01-05  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (compile-defun [test]): Add two cases.

2010-01-05  Cecil Westerhof  <Cecil@decebal.nl>

	* slime.texi (inferior-slime-mode): Fix thinko.

2010-01-05  Terje Norderhaug  <terje@in-progress.com>

	Provide default implementation for all-threads.

	* swank-backend.lisp (all-threads): Just return ().

2010-01-05  Helmut Eller  <heller@common-lisp.net>

	Fix M-. bug related to CMUCL's multi-file compilation units.

	* swank-cmucl.lisp (code-location-stream-position): Require the
	"root-number" as argument and subtract it from the TLF number.
	(location-in-file): Pass the root number along.
	(code-location-string-offset): Use 0 as root number.

2010-01-05  Helmut Eller  <heller@common-lisp.net>

	Slightly better error message when CMUCL fails to find defstructs.

	* swank-cmucl.lisp (struct-constructor, setf-definitions): Don't
	use COERCE which gives confusing error message.

2010-01-05  Helmut Eller  <heller@common-lisp.net>

	Add "quit" and "other window prefix" buffer selectors.

	* slime.el (slime-selector-other-window): New variable.
	(slime-selector): Bind it as need.
	(def-slime-selector-method): Use the other window if so indicated.
	([selector] 4): New key binding.
	([selector] q): New key binding. just abort.

2010-01-05  Helmut Eller  <heller@common-lisp.net>

	Stop the beeping on restart.

	* slime.el (slime-quit-lisp-internal): Don't kill already dead
	processes.

2010-01-03  Stas Boukarev  <stassats@gmail.com>

	* swank-backend.lisp (frame-call): New function.
	Returns a string representing a call to the entry point of a frame.
	* swank-ccl.lisp (frame-call): Implementation of the above.
	* swank-sbcl.lisp (frame-call): Ditto.

2010-01-03  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (with-swank-protocol-error-handler): Remove debugging
	bits.

2010-01-03  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-next-read-or-lose): Call `debug' with the error
	condition, so we can see what actually caused the losage.

2010-01-03  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (compile-defun [test]): Also test proper notification
	after reader-error. Additionally: bind font-lock-verbose to nil to
	prevent annoying font-lock messages during the test.

	* swank-sbcl.lisp (signal-compiler-condition): Make sure
	READER-ERROR comes before ERROR in typecase.
	(swank-compile-file): Remove handling FATAL-COMPILER-HANDLER
	because a) this handling prevents sbcl from printing the
	diagnostics to the repl, and b) sbcl itself should handle this and
	translate it into proper return value for compile-file.

2009-12-23  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (complete-symbol [test]): Fix test case.

2009-12-22  Helmut Eller  <heller@common-lisp.net>

	Some new backend functions used for loading image files.

	* swank-backend.lisp (socket-fd, make-fd-stream, dup, exec-image)
	(command-line-args): New functions.
	* swank-cmucl.lisp: Impemented.
	* swank-cmucl.lisp (reset-sigio-handlers): New function.
	(save-image): Fix quoting bug.

	* swank.lisp (clear-event-history): New functoin.
	(interactive-eval, eval-region): Don't use FRESH-LINE.

2009-12-21  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-at-list-p): Deleted.
	(slime-at-expression-p): Moved to slime-package-fu.
	(slime-forward-blanks): Deleted. Use `(skip-chars-forward
	"[:space:]")' instead.
	(slime-forward-any-comment): Deleted.
	(slime-reader-conditionals-regexp): Make a constant so it's
	inlined.
	(slime-unknown-feature-expression): Make it an error.

2009-12-19  Stas Boukarev  <stassats@gmail.com>

	* swank-backend.lisp (defpackage): export with-symbol and
	replace its fully qualified usage everywhere.

2009-12-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-edit-uses-xrefs): New variable. For contribs to
	extend.
	(slime-edit-uses): Use it.

	* swank.lisp (xref-doit): Now a generic functions. For contribs to
	extend.

2009-12-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (with-top-level-restart): Bind local special.
	(top-level-restart-p): Check for it; this tells us if we're in
	the dynamic extent of with-top-level-restart.
	(handle-requests): Use it.

2009-12-17  Stas Boukarev  <stassats@gmail.com>

	* swank-match.lisp: Fix formatting and style warnings.

2009-12-17  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (handle-requests): Comment out
	(assert (boundp '*sldb-quit-restart*)) because it's not bound
	on NIL communication style. It's not a real fix, but at least it
	lets null communication-style work.

2009-12-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (categorize-definition-source): New.
	(definition-source-for-emacs): Use it. Slightly
	refactored. Renamed from `make-definition-source-location'.
	(find-definitions, find-source-location)
	(source-location-for-xref-data, function-dspec): Updated
	accordingly.
	(source-file-position): Scratch last argument, not needed anymore.

2009-12-16  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (compile-file-output): Use
	(make-pathname :directory dir :defaults (compile-file-pathname file))
	instead of (compile-file-pathname file :output-file dir),
	because the latter works differently on different implementations.
	(fasl-pathname): Use the above function.

2009-12-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (*sldb-quit-restart*): Export. For users to customize
	what `q' does in SLDB.
	(handle-requests): Test differently for recursive invocations
	as *sldb-quit-restart* may now be globally bound due to user
	customization.
	(coerce-restart): Coerces a restart-designator to a restart.
	(throw-to-toplevel): Use it.

	* slime.texi (swank:*sldb-quit-restart*): Document it.

2009-12-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (collect-notes): Establish new abort restart ("Abort
	Compilation"); if an error is signaled in EVAL-WHEN, or during
	macroexpansion -- assuming the backend DTRT --, invoking this
	restart will result in the normal compilation failure behaviour,
	including correct reporting of the offending toplevel form.

	* swank-sbcl.lisp (handle-notification-condition): Use
	`real-condition' here.
	(handle-file-compiler-termination): As a result, not needed anymore.
	(call-with-compilation-hooks): Also signal information about
	normal errors.

2009-12-14  Stas Boukarev  <stassats@gmail.com>

	* doc/slime.texi (ASDF): Document new commands.

2009-12-12  Matthias Koeppe  <mkoeppe@math.ucdavis.edu>

	* doc/slime.texi (Presentations): Add an example that illustrates
	quoting necessary with presentations that are lists.

2009-12-11  Stas Boukarev  <stassats@gmail.com>

	* swank-allegro.lisp: Use new function `make-error-location'.
	(find-fspec-location): Handle errors.
	Patch by Tobias C. Rittweiler.

2009-12-11  Tobias C. Rittweiler  <tcr@freebits.de>

	Add `M-x slime-toggle-debug-on-swank-error'.

	In "Debug on SWANK error" mode, errors which are normally caught
	to not annoy the user, will now drop into the debugger.

	Additionally, the backend won't do any backtrace magic so you'll
	see the full backtrace with all its glory details. (SBCL only so
	far.)

	* slime.el (slime-toggle-debug-on-swank-error): New.

	* swank.lisp (toggle-debug-on-swank-error): New slimefun.
	(debug-on-swank-error): New function. SETFable.
	(invoke-default-debugger): Use CALL-WITH-DEBUGGER-HOOK so we're
	trapped into the native debugger on SBCL (previously we weren't
	due to SB-EXT:*INVOKE-DEBUGGER-HOOK*.)

	* swank.lisp: Rename SWANK-ERROR to SWANK-PROTOCOL-ERROR.

2009-12-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (call-with-debugger-hook): Oops, removed the
	binding for *DEBUGGER-HOOK*. Fix that.
	(make-invoke-debugger-hook): Do nothing if hook is NIL.

2009-12-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (*debug-swank-backend*): New variable. If
	true, backends should not catch internal errors (e.g. during
	definition finding), and should not perform backtrace magic.
	(make-error-location): New helper.
	(find-definitions [interface]): Default to error location.

	* swank-sbcl.lisp (converting-errors-to-location): New helper
	macro. Regards new *DEBUG-SWANK-BACKEND*.
	(find-definitions [implementation]): Use it.
	(find-source-location [implementation]): Ditto.
	(functiond-spec): Ditto.
	(frame-source-location [implementation]): Ditto.
	(*debug-definition-finding*): Removed.
	(make-source-location-specification): Removed.
	(safe-function-source-location): Removed.
	(safe-source-location-for-emacs): Removed. Not needed anymore.

	(call-with-debugging-environment): Do not perform stack hinting
	depending on *DEBUG-SWANK-BACKEND*.

2009-12-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (set-break-hook): New.
	(call-with-break-hook): New, too. Both extracted from elsewhere.
	(install-debugger-globally, call-with-debugger-hook): Use them.
	(make-invoke-debugger-hook): Adapted not to call *debugger-hook*
	on its own; it should rather decline because *debugger-hook* is
	tried after *invoke-debugger-hook* anyway. Previously, a
	custom *debugger-hook* (which declines itself) would have been
	executed twice.

2009-12-07  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-parse-toplevel-form): Use
	`slime-region-for-defun-at-point' instead of `beginning-of-defun'.

2009-12-03  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-documentation-lookup-function): New hook,
	defaults to `slime-hyperspec-lookup'.
	(slime-documentation-lookup): Invoke hook.
	(slime-prefix-bindings): Bind `C-c C-d h' to it.

2009-12-02  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (frame-locals): `frame-debug-vars' can return NIL,
	so check before using it as a vector.
	Patch by Nathan Bird.

2009-11-30  Helmut Eller  <heller@common-lisp.net>

	Add a slime-editing-map as suggested by Attila Lendvai.  The main
	purpose is to create a keymap that's shared by the REPL and other
	modes so that adding custom bindings gets a bit easier.

	* slime.el (slime-editing-map, slime-mode-indirect-map): New variables.
	(slime-init-keymaps): Clear out any existing bindings before
	building the new keymaps.
	(slime-init-keymap): New helper.
	(slime-bind-keys): Renamed&extended from
	slime-define-both-key-bindings.

	* slime.el (slime-editing-mode): New minor mode for use
	in the REPL.

2009-11-26  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (arglist):  Fixes for functions with non-nil
	arglist and for generic functions with empty argument lists.

	Diagnosed and cured by Matthias Hölzl.

2009-11-23  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-set-connection-info): Set slime-current-thread to t
	before doing anything. Solves a bug reported by Slawek Zak.

2009-11-21  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (who-specializes): Implement.
	Requires SBCL 1.0.32.

2009-11-19  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-minibuffer-map): Nee `slime-read-expression-map'
	(slime-minibuffer-history): Nee `slime-read-expression-history'
	(slime-minibuffer-setup-hook): Extracted.
	(slime-read-from-minibuffer): Adapted accordingly.

2009-11-13  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (classify-symbol): Check fbound before calling
	fdefinition, ECL doesn't like (fdefinition nil).

	* swank-ecl.lisp
	(swank-mop:compute-applicable-methods-using-classes): Add a dummy
	function. ECL doesn't have it, but some contribs are using it.
	Patch by Andy Hefner.

2009-11-13  Stas Boukarev  <stassats@gmail.com>

	* swank-ecl.lisp (function-name): Use clos:generic-function-name
	for generic functions.
	(arglist): Check fro symbol before calling special-operator-p and
	macro-function.
	Patch by Andy Hefner.

2009-11-06  Stas Boukarev  <stassats@gmail.com>

	* swank-ecl.lisp (grovel-docstring-for-arglist): ECL's arglists
	for macros include macro name at the first place, unlike arglists
	for functions. cdr arglists only for macros and special operators.
	Reported by Andy Hefner.
	(find-source-location): Missing comma before error message formatting.
	Patch by Andy Hefner.

2009-11-05  Tobias C. Rittweiler  <tcr@freebits.de>

	Make C-c C-c operate on region if mark is active (and Transient
	Mark mode is enabled.)

	* slime.el (slime-compile-defun): Operate on region if
	transient-mark-mode is active.

2009-11-03  Helmut Eller  <heller@common-lisp.net>

	Ask gdb for source lines of foreign functions.

	* swank-cmucl.lisp (frame-source-location): Handle foreign
	frames with gdb.
	(frame-ip): Handle bogus frames (on x86)
	(disassemble-frame): Use gdb for foreign frames.
	(foreign-frame-p, foreign-frame-source-location): New functions.
	(gdb-command, gdb-exec, parse-gdb-line-info, read-word)
	(whitespacep, with-temporary-file, call/temporary-file): New
	helpers.

2009-11-03  Stas Boukarev  <stassats@gmail.com>

	* slime.el (sldb-setup): Do (set-syntax-table lisp-mode-syntax-table)
	otherwise functions used by autodoc do not work properly.

2009-11-03  Stas Boukarev  <stassats@gmail.com>

	* slime.el (sldb-backward-frame): If the point is at the end of
	the buffer, there is no property, handle this case.

	* swank.lisp (collect-notes): LOAD returns generalized boolean,
	not just boolean, but make-compilation-result accepts only booleans
	for its second argument.

	Both bugs reported by Derrell Piper.

2009-11-02  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-end-of-symbol): Make sure not to move on #'foo.
	([test] sexp-at-point.1): New test case.

2009-11-02  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (without-interrupts): Removed. No longer used.
	* swank-backend.lisp (call-without-interrupts): Removed.
	Update backends accoringly.

2009-11-02  Helmut Eller  <heller@common-lisp.net>

	CCL's lap-functions don't have source-notes but the name often
	has.  E.g. ccl::%fixnum-truncate.  Use names as last resort.

	* swank-ccl.lisp (function-name-source-note): New function.
	(pc-source-location): Use it.

2009-11-02  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (tokenize-symbol-thoroughly): Return NIL
	instead of throwing an error.
	(parse-symbol): Handle null result of tokenize-symbol-thoroughly.

	This fixes a bug reported by Derrell Piper.

2009-10-31  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-bug): Deleted.

2009-10-31  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-inside-string-p, slime-inside-comment-p)
	(slime-inside-string-or-comment-p): New.

	* swank-match.lisp: New file. Contains very simple pattern matcher
	from the CMU AI archive.

	* swank-loader.lisp: Compile swank-match.lisp.

	* swank.lisp: Make SWANK package use new SWANK-MATCH package.

2009-10-31  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (find-symbol-with-status): New.
	(parse-symbol): Use it to correctly parse symbols where only one
	colon is given. Consequences: Autodoc won't display an arglist on
	`(foo:bar |' if BAR is not exported from FOO.

2009-10-31  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (list-threads): Remove thread-description.  Wasn't
	used anymore.
	* swank-backend.lisp (thread-description, set-thread-description):
	Deleted.
	* swank-abcl.lisp: Update accordingly.
	* slime.el (slime-update-threads-buffer, slime-thread-insert):
	Update accordingly.

2009-10-31  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp (kill-thread): Don't signal conditions.
	* swank-backend.lisp (kill-thread): Update docstring.

2009-10-30  Stas Boukarev  <stassats@gmail.com>

	* swank-loader.lisp (setup): Use EXT:PROBE-DIRECTORY on Clisp,
	because PROBE-FILE doesn't want to work on directories.
	Patch by Dirk Sondermann.

2009-10-30  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp: Removed. 1.4 is out so no longer needed.
	* swank-ccl.lisp: Update accordingly.

	* test-all.sh: Removed. Not used in ages.

2009-10-28  Helmut Eller  <heller@common-lisp.net>

	Simpler modeline code.

	* slime.el (slime-modeline-string): Renamed from
	slime-compute-modeline-string.
	(slime-modeline-state-string): Renamed from
	slime-compute-connection-state
	(slime-modeline-package, slime-modeline-connection-name)
	(slime-modeline-connection-state)
	(slime-extended-modeline,slime-compute-modeline-package)
	(slime-update-modeline-string, slime-shall-we-update-modeline-p)
	(slime-update-all-modelines, slime-modeline-update-timer)
	(slime-restart-or-init-modeline-update-timer)
	(slime-connection-state-as-string): Deleted
	(slime-stale-connection-p): Deleted.

2009-10-28  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-disconnect): Don't reference connection.  Left
	over from last change.
	([test] arglist): Update expected results for slightly changed
	printer settings.
	([test] indentation): Install common-lisp-indent-function.
	([undefun] display-warning): Fix it.

	* test.sh: Don't copy contribs. Slime should work without them.
	* swank-loader.lisp (setup): Compile contribs only if directory
	exists.

2009-10-28  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-format-display-message, slime-display-message)
	(slime-create-message-window): Deleted.  The trick with the
	pre-command-hook doesn't work in XEmacs 21.5.  So use the standard
	message function.  One day XEmacs will learn how to resize the
	minibuffer, but until then we have to live with one-line messages.

2009-10-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Fix some docstrings and comments.

2009-10-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* test.sh: Shebang on bash, not just on sh.

2009-10-25  Tobias C. Rittweiler  <tcr@freebits.de>

	Revert the reversed numbering of restarts in sldb.

	New command `sldb-cycle' ([tab]) in sldb will cycle between
	restart list and backtrace.

	Make sldb-invoke-restart-by-name case-insensitive.

	* slime.el (sldb-mode-map): Bind Tab to `sldb-cycle'.
	(sldb-restart-list-start-marker): New variable.
	(sldb-setup): Store marker in it.
	(sldb-cycle): New command to cycle between restart list and
	backtrace.
	(sldb-invoke-restart-by-name): Make completion case-insensitive.
	(sldb-insert-restarts): Revert to old behaviour.

2009-10-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ccl.lisp (who-specializes): Do not signal an error if
	argument does not name a class.

2009-10-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (xref): Deal with non-yet-interned names gracefully.

2009-10-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-search-property): Add parameter to get value at
	point propery changed.
	(slime-find-next-note): Use it.
	(slime-find-previous-note): Ditto.

2009-10-24  Tobias C. Rittweiler  <tcr@freebits.de>

	New command C-M-, to go to previous xref location.

	[Old command C-M-. to go to next xref location.]

	Xref buffers are not automatically selected anymore; it's more
	ergonomic to cycle through them via C-M-. and C-M-, from
	within the source buffer.

	* slime.el (slime-search-property): Simplify slightly.
	(slime-find-next-note): Use it.
	(slime-find-previous-note): Use it, too.
	(slime-find-note): Deleted.
	(slime-editing-keys): Add C-M-,.
	(slime-previous-location-function): New variable.
	(slime-previous-location): New command.
	(slime-with-xref-buffer): Do not select Xref buffer.
	(slime-show-xref-buffer): Adapted accordingly.
	(slime-goto-next-xref): Highlight current item on C-M-. and C-M-,.
	(slime-goto-previous-xref): New.
	(slime-highlight-sexp): Renamed from `sldb-highlight-sexp'.
	(slime-highlight-line): New.

2009-10-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-insert-restarts): Insert the proper numbers for
	the --more-- button.
	(sldb-restart-number-at-point): Rename back to
	sldb-restart-at-point.  Don't use
	confisingly-verbose-names-for-no-good-reason.
	(sldb-restart-number-for-swank): Deleted.

2009-10-23  Tobias C. Rittweiler <tcr@freebits.de>

	Restarts in SLDB are now numbered reversely. The rationale is that
	always-existing restarts are likely to be associated with the same
	number now.

	* slime.el (sldb-insert-restarts): Number restart reversely.
	(sldb-restart-number-for-swank): New; recompute the unreversed
	number for the swank side.
	(sldb-restart-number-at-point): Previously `sldb-restart-at-point'.
	(sldb-invoke-restart): Adapted accordingly.

2009-10-23  Tobias C. Rittweiler  <tcr@freebits.de>

	When ever Slime seems to get stuck (e.g. after some character
	encoding confusion), `M-x slime-reset' should hopefully bring it
	into a functional state again.

	* slime.el (slime-reset): Erase connection buffer.

2009-10-21  Tobias C. Rittweiler  <tcr@freebits.de>

	Make M-x slime-changelog-date work.

	* slime.el (slime-changelog-date): Make the function be callable
	interactively.

2009-10-21  Stas Boukarev  <stassats@gmail.com>

	* doc/slime.texi (ASDF): Document new commands.

2009-10-20  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp (call-without-interrupts): Discourage use.
	(interesting-frame-p): Never show open frame bogons.

2009-10-19  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (thread-description): Remove it and supporting code,
	because it didn't really work.

	* swank.lisp (with-thread-description): Remove unused macro.

	* slime.el (slime-list-threads): Update information before
	setting the mode, otherwise it messes up current connection.

	* doc/slime.texi: fix typo.

2009-10-19  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (without-printing-errors): New macro.
	(to-string): Use it.
	(to-line): Use it, too. This fixes printing error occuring during
	inspecting to prevent the inspector from displaying something
	useful.

	Reported by xristos@suspicious.org.

2009-10-15  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-current-package): Move REPL stuff to contrib.

2009-10-15  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-current-package): Return REPL's package,
	if other are unavailable and if slime-repl is loaded.

2009-10-12  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Update copyright.

2009-10-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-length=): Fix (slime-length= '() 0).
	(slime-eval-feature-expression): Fix. Couldn't handle (NOT)
	and (NOT FOO BAR).

2009-10-09  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (stop-server): (list-threads) returns threads offset by 1,
	don't kill the wrong thread.

2009-10-06  Stas Boukarev  <stassats@gmail.com>

	* swank-ccl.lisp (map-backtrace): Handle null end-frame-number
	argument.

2009-09-28  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (set-package): Provide a more meaningful error
	message when package doesn't exist.

	* swank-lispworks.lisp (replace-strings-with-symbols): Didn't work on
	non-proper lists. Reported by Madhu.

2009-09-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (call-with-debugger-hook): Correctly deal with
	case of HOOK being NIL.
	(make-definition-source-location): Somewhat simplified.
	(string-path-snippet): Removed, not needed anymore.

2009-09-24  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (swank-compile-string): Ignore unused variable
	warningsp.

2009-09-23  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (receive-if): Bind *break-on-signals* to
	nil before using with-timeout.

2009-09-22  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp (find-definitions): For fbound symbols also
	consider source-notes in the function object.  Useful if
	the function slot was set with (setf (symbol-function ..))
	and not by defun.

2009-09-21  Stas Boukarev  <stassats@gmail.com>

	* doc/slime.texi (slime-sprof): document slime-sprof contrib.

2009-09-20  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-abcl.lisp (thread-description): Fix typo.
	(set-thread-description): Ditto.

2009-09-20  Tobias C. Rittweiler  <tcr@freebits.de>

	Generalize M-? (or M-_ respectively.)

	It will now list:

	  - call sites for functions,

	  - macroexpand sites for macros,

	  - binding, setting, referencing sites for variables,

	  - specializing methods for classes.

	* slime.el (slime-xref): Deal with :not-implemented.
	(slime-xrefs): New. Makes RPC request to XREFS.
	(slime-edit-callers): Renamed to `slime-edit-uses'.
	(slime-edit-uses): Use slime-xrefs.

	* swank-backend.lisp (who-*): Add default implementation which
	returns :not-implemented.

	* swank.lisp (xref-doit): Extracted from XREF.
	(xref): Pass over :not-implemented to Emacs side.
	(xrefs): New slime fun. To return results of multiple XREF
	requests at once.

2009-09-20  Mark Evenson  <evenson@panix.com>

	Use *INVOKE-DEBUGGER-HOOK* introduced in ABCL by analogy to SBCL
	 (Tobias Rittweiler).

	* swank-abcl.lisp (sys::break): Conditionally redefine SYS::BREAK
	only if SYS::INVOKE-DEUBBGER-HOOK is not present.

2009-09-18  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-parent-bindings): Define M-? as
	`slime-edit-callers', too. My previous choice of M-_ was warped
	due to my German layout.

2009-09-18  Tobias C. Rittweiler  <tcr@freebits.de>

	New binding: M-_ (`slime-edit-callers').

	Similiar to `slime-who-calls' but only creates an Xref buffer if
	needed for disambiguation, and also pushes to the definition
	stack.

	Spiritually like M-. but works "in the other direction".

	* slime.el (sllime-edit-callers): New function. Cross between
	`slime-who-calls' and `slime-edit-definition'.
	(slime-parent-bindings): Define M-_ as `slime-edit-callers'.
	(slime-pop-xref-buffer): New helper. Extracted from
	`slime-show-xrefs'.
	(slime-show-xrefs): Use it.
	(slime-xref): Let callers specify a continuation.

2009-09-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-abcl.lisp (sys::break): Fix typo.
	(slot-definition-documentation, slot-definition-type)
	(class-prototype, generic-function-declarations)
	(specializers-direct-methods, slot-boundp-using-class)
	(slot-value-using-class): Add IGNORE declarations. Compiling
	swank-abcl.lisp is now free of warnings.
	(swank-compile-file): Load the compiled file even though warnings
	were signalled during compilation.

2009-09-17  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (source-location): Emacs buffers start at 1,
	whereas CL files start at 0 (Tobias Rittweiler).

2009-09-16  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (documentation-symbol): Return more readable information.

2009-09-14  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (source-location): Fix typo.

2009-09-12  Mark Evenson  <evenson@panix.com>

	Provided by Alan Ruttenberg.

	* swank-abcl.lisp (source-location): Make edit definition work.

	* swank-abcl.lisp (arglist): Now works with generic functions.


2009-09-08  Helmut Eller  <heller@common-lisp.net>

	* swank-loader.lisp (lisp-version-string): Include "-ics" for
	version with extended charsets.  Suggested by Scott L. Burson.

2009-09-03  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-net-close): set-process-query-on-exit-flag
	doesn't exist in XEmacs.
	(slime-make-net-buffer): For now, disable querying here.
	Could also close the socket before killing the buffer.
	(slime-buffer-processes): Deleted.

2009-09-02  Stas Boukarev  <stassats@gmail.com>

	* swank-lispworks.lisp (replace-strings-with-symbols): New function for
	recursively interning and replacing strings in a list.
	(arglist): Replace all strings in arglists with symbols.

	* slime.el (slime-net-close): Do not query for process killing
	confirmation before killing a connection buffer.
	(slime-buffer-processes): New function for listing processes
	associated with a buffer.

2009-08-31  Helmut Eller  <heller@common-lisp.net>

	Don't advice ccl::break-loop.
	Should not be necessary as we can now use ccl:*break-hook*.

	* swank-ccl.lisp ([advice] ccl::break-loop): Deleted.

2009-08-31  Helmut Eller  <heller@common-lisp.net>

	Keep note overlays in a global variable.
	That's simpler and cheaper than scanning all buffers.

	* slime.el (slime-note-overlays): New variable.
	(slime-make-note-overlay, slime-remove-old-overlays): Use it.

2009-08-27  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-remove-old-overlays): delete notes at the very
	beginning of the buffer too. Thanks to Nick Levine.

2009-08-22  Helmut Eller  <heller@common-lisp.net>

	Speed up symbol completion.

	* swank.lisp (all-completions): Don't call unparse-symbol
	while matching.  That gets very slow in CCL's CCL package.
	Just use symbol-name and compare with char-equal.
	(prefix-match-p): Use char-equal.

2009-08-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-transcript-start-hook)
	(slime-transcript-stop-hook): New hooks.
	(slime-eval-with-transcript): Use them.
	(slime-eval-with-transcript-cont): Deleted.

2009-08-19  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp: Accommodate the new Java/Lisp stack frame
	abstraction in the upcoming abcl-0.16. (based on code from Tobias
	Rittweiler).

2009-08-18  Mark Evenson  <evenson@panix.com>

	Add multithreading code for abcl-0.16. (Tobias Rittweiler)

	* swank-abcl.lisp: A multithread implementation taking advantage
	of the new synchronization primitives in abcl-0.16.

	Restore working with abcl-0.15.

	* swank-abcl.lisp: Remove the warm initialization code for
	SWANK:COMPILER-CONDITION, as it is no longer needed for the
	current release of ABCL.

2009-08-16  StanisBaw Halik  <sthalik@test123.ltd.pl>

	* swank.lisp (init-global-stream-redirection): Continue even if
	streams are already redirected.  Useful for restarting Swank with
	M-x slime when a REPL is already present.  Will most likeley
	mess up the input stream in multi threaded setups, tho.

2009-08-15  Helmut Eller  <heller@common-lisp.net>

	XEmacs fixes.

	* slime.el (slime-editing-keys): Use (kbd "C-M-.") because XEmacs
	translates [?\C-\M-.] to C-M-n.
	(next-single-char-property-change)
	(previous-single-char-property-change): Use
	next-single-property-change because next-char-property-change gets
	embarrisingly slow in XEmacs in font-locked buffers.
	It never felt that slow in Emacs 20 though.

2009-08-15  Helmut Eller  <heller@common-lisp.net>

	* swank-ccl.lisp (definition-name): Special case methods.

	* slime.el (slime-choose-overlay-region): Don't return zero length
	regions for :eof.
	(slime-show-buffer-position): The second argument to
	display-buffer means something completely different in
	XEmacs. Don't use it.
	(slime-severity-face): Handle :redefinition.
	(slime-temporarily-highlight-note): Use a timer instead of the
	post-command-hook.

2009-08-13  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-auto-select-connection, slime-auto-connect):
	Turn them into customizable variables.

2009-08-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (swank-compile-string): Make sure that it
	returns NIL on compilation failure.

2009-08-10  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-insert-note-group): Factored out from
	slime-insert-compilation-log.
	(slime-goto-location-position): Can't use goto-line.

2009-08-10  Helmut Eller  <heller@common-lisp.net>
	Separate context info from compiler message text.

	* swank-backend.lisp (compiler-condition): Add a new slot
	:source-context.  Remove :short-message.
	* swank-cmucl.lisp, swank-sbcl.lisp, swank-scl.lisp,
	swank-openmcl.lisp, swank-ccl.lisp: Update callers.
	* swank.lisp (make-compiler-note): Use source-context slot.
	* slime.el (slime-note.source-context): New.
	(slime-insert-compilation-log): Use it.
	(slime-note.short-message): Deleted.

2009-08-10  Helmut Eller  <heller@common-lisp.net>

	Don't add linebreaks for one-line messages.

	(slime-insert-block): New function.
	(slime-insert-compilation-log): Use it.
	(slime-indent-rigidly): Use insert-before-markers, otherwise point
	ends up at before a bunch of inserted spaces.

2009-08-10  Helmut Eller  <heller@common-lisp.net>

	Various compilation related changes.

	* slime.el (slime-show-note-counts): Don't show 0 values.
	(slime-severity<): New function.
	(slime-maybe-show-compilation-log): Always create the log buffer
	but display it only if the compilation failed.
	(slime-insert-compilation-log): Disable the stupidly inefficient
	font-lock-after-change-function.
	(slime-canonicalized-location-to-string): Use relative filenames.
	(slime-goto-location-buffer): Disable warnings about symlinks.

2009-08-09  Tobias C. Rittweiler  <tcr@freebits.de>

	Make C-x ` work again.

	M-n and C-x ` are now very similiar; but the former operates
	relative to point in the source buffer, while the latter works
	relative to the compilation log.

	* slime.el (slime-insert-compilation-log): No do set
	`compilation-skip-to-next-location'.

2009-08-09  Tobias C. Rittweiler  <tcr@freebits.de>

	M-n/M-p in .lisp buffers do not show the note in the minibuffer
	anymore if a compilation log is displayed to the user.

	In the compilation log, sort and group the notes by line/column
	number.

	* slime.el (slime-insert-compilation-log): Sort the notes by their
	line/column numbers; group notes of same location and display them
	as one entry.
	(slime-compilation-loc): Removed.
	(slime-canonicalized-location),
	(slime-canonicalized-location-to-string): Extracted from
	`slime-compilation-loc'.
	(slime-group-and-sort-notes): Does the sorting/grouping.
	(slime-show-note): Do not show note in minibuffer if compilation
	log is displayed to the user.

2009-08-09  Stas Boukarev  <stassats@gmail.com>

	* swank.asd (asdf:perform): don't call `swank-loader:init' with
	:setup nil, because it doesn't get contribs compiled, and some other
	configuration steps are omitted.

	* slime.el (slime-profile-by-substring): new function for profiling
	functions by matching a substring.

	* swank.lisp (profile-by-substring): ditto.

2009-08-08  Tobias C. Rittweiler  <tcr@freebits.de>

	M-n / M-p in a .lisp buffer now also jump to the respective note
	in the compilation-log buffer if one is currently displayed to the
	user.

	* slime.el (slime-remove-old-overlays): Simplified.
	(slime-insert-compilation-log): Add a note-overlay for each note
	so we can find the right one when user uses M-n/M-p in .lisp
	buffer.
	(slime-goto-note-in-compilation-log): New.
	(slime-make-note-overlay): Extracted from
	`slime-create-note-overlay'.
	(slime-next-note, slime-previous-note): Simplified.
	(slime-show-note): Goto note in compilation-log if available.
	(slime-note-overlay-p): Call overlay property `slime-note', not
	just `slime'.
	(slime-find-note): Likewise; also returns the overlay if found.
	(slime-show-buffer-position): Optionally recenter position to the
	top of the window.

2009-08-04  Stas Boukarev  <stassats@gmail.com>

	* swank-sbcl.lisp (signal-compiler-condition): read
	sb-kernel:redefinition-warning only if it exists.
	Some older SBCLs don't have it (particularly included in the
	stable Debian).

2009-08-02  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (severity [type]): Allow :redefinition.

	* swank-sbcl.lisp (signal-compiler-condition): Tag redefinitions.

	* slime.el (slime-maybe-show-compilation-log): Do not show
	compilation log if each note describes just a redefinition.
	(slime-insert-compilation-log): Insert notes indented by 2
	spaces. Insert some more newlines so the buffer appears more
	structured.
	(slime-show-note-counts): Add :redefinition to ecase.
	(slime-redefinition-note-p): New.
	(slime-severity-label): Was unused. Adapted to be usable.

2009-07-30  Stas Boukarev  <stassats@gmail.com>

	* doc/slime.texi (Setting up pathname translations): add that it is
	in the `slime-tramp' contrib.

2009-07-30  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-clisp.lisp: Clisp 2.48 experimentally supports threads. So
	add infrastructure to use threads in Clisp's swank backend. We do
	not make it the default, because it's not prime time yet. There
	are still problems with GC, weak-pointers, and thread objects.

2009-07-28  Stas Boukarev  <stassats@gmail.com>

	* doc/slime.texi (slime-selector): mention t and c keys.

2009-07-27  Stas Boukarev  <stassats@gmail.com>

	* swank-ccl.lisp (source-note-to-source-location): keys of
	*temp-file-map* are pathnames, not namestrings; convert
	namestrings to pathnames before looking up.

2009-07-27  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp: Support for older ECL installs
	from patch by Mark Evenson

2009-07-26  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-maybe-show-compilation-log): New function.
	(slime-compilation-finished-hook): Use it.  Now that the
	compilation buffer gets not selected it's more acceptable to
	display it more often.
	(slime-insert-compilation-log): Set compilation-skip-threshold to
	0 and compilation-skip-to-next-location to nil.  Seems to work
	better for us.
	(slime-with-popup-buffer): Synch window-point, otherwise it be at
	the end of the buffer for reused buffers.
	(slime-display-popup-buffer): Return the window.

2009-07-26  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (tempnam): Muffle efficiency notes.

2009-07-26  Gail Zacharias  <gz@clozure.com>

	* swank-ccl.lisp: New file.  An updated version of
	swank-openmcl.lisp in preparation for a slew of changes to CCL and
	to honor the new name.

	* swank-loader.lisp (*sysdep-files*): Use it.

2009-07-21  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-sexp-at-point-for-macroexpansion): use markers
	for bounds, because in some situations text layout could be modified
	before bounds would be used, for example, using keyboard macros.

2009-07-15  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-inspector-fetch-all): new command, bound to >
	in the inspector buffer.

	* doc/slime.texi (Frame Navigation): add description
	of `sldb-end-of-backtrace' and `sldb-beginning-of-backtrace'.
	(Inspector): add `slime-inspector-fetch-all'.


2009-07-12  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-editing-keys): Don't override M-*. The default
	binding should do what Matthias wants.

2009-07-11  Matthias Koeppe  <mkoeppe@math.ucdavis.edu>

	* swank-backend.lisp (definterface): Fix typo in error message.

2009-07-11  Stas Boukarev  <stassats@gmail.com>

	* doc/Makefile (clean): Remove bash extensions. Patch by
	Teemu Likonen.

2009-07-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ecl.lisp (find-external-format): Copied from
	swank-sbcl.lisp. A lot of backends seem to share the same
	implementation, perhaps some refactoring is needed.

2009-07-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (make-repl-input-stream): Make sure to redirect
	output from slime requests to the REPL buffer for
	communication-style=NIL.

2009-07-02  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-beginning-of-symbol): Limit searching to 2000
	characters.

2009-07-02  Terje Norderhaug  <terje@in-progress.com>

	* swank-lispworks.lisp (thread-attributes): Implemented.

2009-07-02  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (ed-in-emacs): Handle symbols/function-names better.
	* slime.el (slime-ed): Updated accordingly.

2009-07-02  Terje Norderhaug  <terje@in-progress.com>

	* swank.lisp (operator-arglist): Don't use pprint-fill
	for people with wide screens.

2009-07-02  Stas Boukarev  <stassats@gmail.com>

	* slime.el (slime-net-coding-system): make it customizable.
	(slime-inspector-operate-on-click): Make --more-- button in
	the inspector clickable.

2009-06-30  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp: Package profiling support

2009-06-30  Stas Boukarev  <stassats@gmail.com>

	* swank-openmcl.lisp (arglist): Return :not-available if the arglist
	cannot be obtained. Patch by Terje Norderhaug.

2009-06-29  Stas Boukarev  <stassats@gmail.com>

	* swank.lisp (open-streams): do not create unnecessary output stream
	when using dedicated output stream. Thanks to Terje Norderhaug.

2009-06-28  Terje Norderhaug  <terje@in-progress.com>

	Generalize list-threads for implementation-dependent attributes.

	* swank-backend.lisp (thread-attributes): New function.
	* swank-openmcl (thread-attributes): Implement it.
	* swank.lisp (list-threads): Return a table with the attribute
	names as the first row and the new attributes in the last columns.
	* slime.el (slime-update-threads-buffer): For now, ignore the
	extra attributes.

2009-06-28  Stelian Ionescu  <stelian.ionescu-zeus@poste.it>

	* slime.el (slime-compiler-macroexpand-inplace)
	(slime-compiler-macroexpand-1-inplace): New commands.
	(slime-macroexpansion-minor-mode-map): Bind them.

2009-06-28  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (add-fd-handler): Avoid recursive invocation
	of the handler, e.g. when read-sequence blocks.

2009-06-28  Stas Boukarev  <stassats@gmail.com>

	* swank-openmcl.lisp (compiler-warning-short-message): In new
	versions of CCL `compiler-warning-nrefs' slot
	of the `compiler-warning' class is now a list, not an integer.

2009-06-25  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp: Profiling support by Marko Koci?

2009-06-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-beginning-of-symbol): Skip over #., #-, and #+.
	([test] symbol-at-point.15 .. 17): Test it.

2009-06-24  Nikodemus Siivola  <nikodemus@random-state.net>

	Add :WAIT keyword argument to support blocking in
	SWANK:INSPECT-IN-EMACS.

	* swank.lisp (inspect-in-emacs): added keyword argument :wait.

	* slime.el (slime-dispatch-event): if swank requests response to
	:inspect, add a hook to the inspector to signal swank once done.
	(slime-open-inspector): add optional hook argument to be added as
	local kill-buffer-hook.

2009-06-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-initialize-lisp-buffer-for-test-suite): Moved to
	contrib/slime-fontifying-fu.el

2009-06-21  Helmut Eller  <heller@common-lisp.net>

	Don't try so hard to get symbol-at-point right.
	The old implementation was complicated and didn't even pass it's
	own test suite.  The new version is less ambitious but simpler.

	* slime.el (slime-symbol-at-point, slime-beginning-of-symbol)
	(slime-end-of-symbol): Simplify.
	(slime-exit-vertical-bars, slime-symbol-constituent-at): Deleted.
	([test] symbol-at-point.1 .. symbol-at-point.14): Renamed form
	fancy-symbol-names and split up into smaller peices.
	(slime-test-symbols): New.
	(slime-check-symbol-at-point): Renamed from
	slime-check-fancy-symbol-name.

2009-06-21  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (frame-source-location): Renamed from
	frame-source-location-for-emacs.

2009-06-20  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-check-fancy-symbol-name): Don't update the loop
	index inside the loop body.

2009-06-20  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (emacs-connected): Deleted. Setting
	ccl::*interactive-abort-process* doesn't seem right.

2009-06-15  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp: Explicitly require CCL version 1.3.

2009-06-15  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (emacs-inspect [t]): Honor the type returned
	by inspector::line-n.
	(emacs-inspect [compiled-lexical-closure]): Deleted. Let CCL's
	inpector handle this case. Which does it better and it's less work
	for us.

2009-06-14  Helmut Eller  <heller@common-lisp.net>

	Some workarounds for SBCL on Windows.

	* swank-sbcl.lisp (input-available-p): New function.
	(wait-for-input): Use it.
	([win32] handle-listen, has-buffered-input-p): New.
	(temp-file-name, tempnam): Plain tmpnam(3) is next to useless on
	Windows use tempnam(3) instead.

2009-06-12  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp: Support new environment changes in recent ECL/CVS
	patch largely from ECL maintainer.

2009-06-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el ([test] font-lock-magic): Moved to fontifying-fu contrib.

2009-06-05  Helmut Eller  <heller@common-lisp.net>

	Don't clutter compiler messages with source positions.  Especially
	stuff like "In an anonymous lambda form inside an anonymous lambda
	form inside an anonymous lambda form inside FOO: Undeclared free
	variable X" is not helpful.

	* swank-openmcl.lisp (compiler-warning-short-message): New GF.
	(handle-compiler-warning): Use it.

	(disassemble-frame): Print current PC.

2009-06-04  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-dispatch-event [:emacs-rex]): Don't clutter
	the main code-path with confusing error handling.

2009-06-04  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (*known-processes*, mailbox): Use a weak
	hashtable to plug the memory leak.

2009-05-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (def-slime-test): Forgot to remove debugging code.

2009-05-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-dispatch-event :emacs-rex): Make sure that we
	pop the continuation on erroneous send.

	Patch by Mark Cox <markcox80@gmail.com>.

2009-05-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (tokenize-symbol-thoroughly): Make it work correctly
	on escaped symbols.

2009-05-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-disconnect): Now only disconnects one
	connection, current one by default, or given by argument.
	(slime-disconnect-all): New. What `slime-disconnect' was before.
	(def-slime-test): Changed: expected failures are now given
	by (:fails-for ...) clauses. Extended: new clause (:style ...) to
	have a test run only on a certain communication style. Updated
	existing test cases accordingly.
	([struct] slime-test): New slot `skipped'.
	(slime-skipped-tests): New var.
	(slime-execute-tests): Adapted accordingly.
	([test] disconnect): Renamed to `disconnect-and-reconnect'
	([test] disconnect-one-connection): New.

	Adapted from patch by Stas Boukarev.

2009-05-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el ([test] fancy-symbol-names): Add cases involving #|
	... |# style comments. Currently failing.

	Reported by Madhu.

2009-05-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-goto-location-position): Only go to
	match-beginning if search succeeded.

	Patch by Madhu.

2009-05-23  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (break-in-sldb): Honor *break-on-signals*.
	That means that we can't use SIGNAL here and we have to invoke
	SLDB directly.
	(condition-for-break): New helper.
	Reported by Bill St. Clair.

2009-05-19  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-symbol-at-point): Sometimes we can be too good,
	e.g. in "|# (defun foo () (getf" the above would return nil
	because the vertical bar is not terminated. The user probably
	wants "getf" nontheless.

	Reported by Madhu.

2009-05-19  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (sldb-restartable-frame-line-face): Set a default value.
	(sldb-frame-restartable-p): New.
	(sldb-compute-frame-face): Use it.
	(sldb-show-frame-details): Use it, too.

2009-05-19  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-source-path-parser.lisp (read-and-record-source-map):
	ignore errors during the call to READ, so that we don't the
	current version of the form we are looking at contains eg.
	uninternable symbols.

2009-05-19  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (source-note-to-source-location): Always
	test *temp-file-map* first, because the temp-file might actually
	exist during compilation but no longer when Emacs tries to open
	it.
	(slime-goto-location-buffer): Don't create buffers for
	non-existent files.

2009-05-18  Nikodemus Siivola  <nikodemus@random-state.net>

	* slime.el (slime-description-autofocus): New variable.
	(slime-show-description): Use it to decide if description
	buffers should receive focus automatically.
	* doc/slime.texi: Document it.

2009-05-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-dispatch-event): New event
	`:read-from-minibuffer'.
	(slime-read-from-minibuffer-for-swank): New.

	* swank.lisp (dispatch-event): Pass through :read-from-minibuffer
	event.
	(read-from-minibuffer-in-emacs): Now uses new event rather than
	eval-in-emacs.

2009-05-17  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (compile-temp-file): Remove backward
	compatibility code.
	(eval-in-frame, frame-source-location-for-emacs)
	(return-from-frame, restart-frame)
	(disassemble-frame, xref-locations): Simplify.
	(list-callers): Use ccl::caller-functions which gives us more precise
	src-locs than ccl::callers.
	(canonicalize-location, remove-filename-quoting)
	(maybe-method-location): Deleted.  No longer used.
	(who-specializes): Simplify.

2009-05-17  Helmut Eller  <heller@common-lisp.net>

	More precise compiler-message location.

	* swank-openmcl.lisp (handle-compiler-warning): Use the
	source-note slot of the condition as source location, which is
	more precise than the stream-position slot.
	(compiler-warning-severity): New function. The distinction between
	warning and style-warning is rather arbitrary but let's try it.
	(swank-compile-file): Pass the external-format arg down to
	compile file.
	(*buffer-name*, *buffer-offset*, condition-source-position):
	Deleted. No longer used.

2009-05-16  Helmut Eller  <heller@common-lisp.net>

	Minor refactoring.

	* swank-openmcl.lisp (call/frame, with-frame): New macro.
	(frame-visible-variables): New helper.
	(frame-var-value, frame-locals, disassemble-frame): Use it.
	(frame-catch-tags): Removed.  Way to much code for such a rarely
	used function.

2009-05-16  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (swank-compile-string): Store the source
	code, by setting CCL:*SAVE-SOURCE-LOCATIONS* to T, for better
	disassembler output.
	(function-source-location): Remove the old pre-1.3 version.

	* swank.lisp (sldb-bitvector-pprint): Oops, all bits are true.

2009-05-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-current-parser-state): Do not save
	match-data. This function is called so often that it makes a
	difference.

2009-05-16  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*sldb-pprint-dispatch-table*): Be careful when
	calling WRITE recursively: set :circle to nil which avoids
	interference with cycle-detection.
	(escape-string): New helper function.
	(*backtrace-pprint-dispatch-table*): Use it.

2009-05-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-allegro.lisp (swank-compile-string): Forgot to remove old
	definition in changeset 2009-05-12.

	Patch by Stelian Ionescu.

2009-05-15  Tobias C. Rittweiler  <tcr@freebits.de>

	Move font-lock-magic into contrib/slime-fontifying-fu.el.

	* slime.el (slime-highlight-suppressed-forms),
	(slime-reader-conditional-face),
	(slime-search-suppressed-forms-internal),
	(slime-search-suppressed-forms),
	(slime-search-directly-preceding-reader-conditional),
	(slime-extend-region-for-font-lock),
	(slime-compute-region-for-font-lock),
	(slime-activate-font-lock-magic): Moved.

2009-05-15  Tobias C. Rittweiler  <tcr@freebits.de>

	Rewrote some parts of the font-lock-magic in face of its fragility
	over the last days. Hopefully it'll be better now.

	* slime.el (slime-region-for-tlf-at-point): Removed. Not needed
	anymore.
	(slime-region-for-extended-tlf-at-point): Removed.
	(slime-search-backward-reader-conditional): Removed.
	(slime-search-directly-preceding-reader-conditional):
	New. Similiar to the above.
	(slime-extend-region-for-font-lock): Display bug message when
	error is caught.
	(slime-compute-region-for-font-lock): Rewritten.
	([test] font-lock-magic): Another test case.

2009-05-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-region-for-tlf-at-point): Use
	`(end-of-defun) (backward-sexp)' rather than
	`(end-of-defun) (beginning-of-defun' to go to the start of the
	current defun. The latter would fail on "() (a\nb\nc)".

2009-05-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-compute-region-for-font-lock): Fix typo.

2009-05-13  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-search-suppressed-forms): On errors, we have to
	continue the search, otherwise there's a chance that we miss
	reader conditionals in the current font-lock region.
	(slime-search-backward-reader-conditional): New. Extracted from
	`slime-region-for-extended-tlf-at-point'.
	(slime-region-for-extended-tlf-at-point): Use it.
	(slime-font-lock-region): Removed.
	(slime-font-lock-region-changed-p): Removed.
	(slime-extend-region-for-font-lock): Simplified.
	(slime-compute-region-for-font-lock): Make sure that we never
	return a flag indicating change when there was in fact no
	change. This should make the explicit guard against infinite loop
	superfluous.
	(slime-extend-region-warn-infinite-loop): Removed.
	([test] font-lock-magic): More cases.

2009-05-12  Tobias C. Rittweiler  <tcr@freebits.de>

	Make font-lock-magic test case pass.

	* slime.el (slime-bug): New function.
	(slime-search-suppressed-forms): Use it.
	(slime-extend-region-warn-infinite-loop): Ditto.
	(slime-search-suppressed-forms-internal): Check whether we're
	inside a comment, or a string.
	([test] font-lock-magic): Add another case.

2009-05-12  Tobias C. Rittweiler  <tcr@freebits.de>

	Highlight reader-errors in the source buffers on Allegro.

	* swank-allegro.lisp (*temp-file-header-end-position*): New
	variable.
	(call-with-compilation-hooks): Handle reader errors.
	(handle-compiler-warning): Adapt it accordingly.
	(location-for-reader-error): New.
	(compile-from-temp-file): Now takes a header argument explicitly
	so we can hold of the actual offset of the string we want to
	compile. This is needed to translate back file-positions reported
	in reader-errors.
	(swank-compile-string, swank-compile-file): Adapted accordingly.

2009-05-12  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-allegro.lisp (find-topframe): Hide SWANK related cruft
	from showing up in backtraces in SLDB.

2009-05-12  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-display-warning): Add `warning' as warning type.
	(slime-show-note-counts): If compilation failed, fontify the
	message in red to be more visibly apparant.

2009-05-11  Tobias C. Rittweiler  <tcr@freebits.de>

	(slime-eval-feature-expression): Guard for more erroneous
	input (due to refontification while user's typing.)

2009-05-10  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] font-lock-magic): Add some hard cases.

2009-05-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-compute-region-for-font-lock): Fix typo.

2009-05-10  Tobias C. Rittweiler  <tcr@freebits.de>

	Font-lock magic barfed on #+(test).

	* slime.el (slime-eval-feature-conditional): Renamed to
	`slime-eval-feature-expression'.
	(slime-unknown-feature-expression): New error symbol.
	(slime-eval-feature-expression): Signal it.
	(slime-search-suppressed-forms): Catch it.
	(slime-compute-region-for-font-lock): Guard against unbalanced
	parentheses.
	(slime-initialize-lisp-buffer-for-test-suite): New helper.
	([test] font-lock-magic): New test case.

	Reported by Kalyanov Dmitry.

2009-05-09  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-source-file-cache.lisp (read-snippet-from-string): New.

	* swank-sbcl.lisp (source-hint-snippet): Use it.
	(emacs-buffer-source-location): Use it, too.
	(string-path-snippet): Ditto. Additionally: Make sure the returned
	string is truncated by *SOURCE-SNIPPET-SIZE*.

2009-05-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-search-suppressed-forms-internal): Not properly
	factored out by earlier changeset.

2009-05-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (read-from-minibuffer-in-emacs): New.
	([struct] istate): Add METADATA-PLIST slot.
	(ensure-istate-metadata): New. To attach arbitrary metadata to an
	inspector page.
	(inspect-object): Adapted so methods on EMACS-INSPECT can look at
	*ISTATE*.

2009-05-08  Tobias C. Rittweiler  <tcr@freebits.de>

	#+#.foo confused the recent fontification changes. Fix that.

	* slime.el (slime-search-suppressed-forms-internal): New. Split
	from `slime-search-suppressed-forms'.
	(slime-search-suppressed-forms): Catch `invalid-read-syntax'
	errors.

2009-05-01  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-line-number-at-pos): Replaced with
	`line-number-at-pos', and add that to the portability layer.
	(display-warning): Add to the portability layer.
	(slime-display-warning): New.

	* slime.el: Implement a guard against infinite loops during
	fontification. We detect and prevent those. If we detect one, we
	emit a big warning to the user.

	(slime-font-lock-region): New variable.
	(slime-font-lock-region-changed-p): New helper.
	(slime-extend-region-warn-infinite-loop): New helper.
	(slime-compute-region-for-font-lock): Extracted from
	`slime-extend-region-for-font-lock'.
	(slime-extend-region-for-font-lock): Use it; add the guard.

2009-04-30  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-abcl.lisp: Really commit Vodonosov's patch from
	2009-03-09.

2009-04-30  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp ([default] declaration-arglist): Add
	arglist of DECLARATION declaration.

	* swank-openmcl.lisp ([eql 'optimize] declaration-arglist):
	Implement it for CCL.
	(describe-symbol-for-emacs): Add :TYPE.
	(describe-definition): Add :TYPE.

	Adapted from patch by Stas Boukarev.

2009-04-29  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-extend-region-for-font-lock): (nth 0
	<parser-state>) may return negative numbers.

2009-04-29  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Fix infinite loop during fontification introduced
	by yesterday's changeset.

	(slime-region-for-tlf-at-point): New. Like
	`slime-region-for-defun-at-point' but tries harder to get the
	toplevel form right.
	(slime-region-for-extended-tlf-at-point): Previously
	`slime-region-for-extended-defun-at-point'.
	(slime-extend-region-for-font-lock): Use it.
	(slime-mark-defun-for-font-lock): Ditto.

2009-04-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Fix fontification of suppressed (by reader
	conditionals) forms. That is make it reliably and totally work.

	(slime-region-for-extended-defun-at-point): New. Like
	`slime-region-for-defun-at-point' but takes preceding reader
	conditionals into account.
	(slime-extend-region-for-font-lock): New. Make sure that
	fontification operates on regions spanning a whole toplevel form
	only. So we never operate within the context of a reader
	conditional and we never miss any of those.
	(slime-search-suppressed-forms): Remove ignore-errors; not needed
	anymore now as we extend the region for fontification.
	(slime-mark-defun-for-font-lock): New.
	(slime-activate-font-lock-magic): Push
	`slime-extend-region-for-font-lock' onto
	`font-lock-extend-region-functions'.

2009-04-25  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-show-description): Put the connection name into
	the buffer name for description buffers. So we can have multiple
	description buffers open, one per connection.

	Useful for comparing the output of DISASSEMBLE across
	implementations.

2009-04-21  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-handle-indentation-update): Revert change from
	2009-03-09; that was a thinko.
	([test] indentation): Some basic test case for correct indentation.

2009-04-03  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (swank-compile-file): Return T for the FAILURE-P
	return value in case of a FATAL-COMPILER-ERROR.

	Reported by Philipp M. Schäfer

2009-04-03  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-inspector-mode-map): Remove binding for
	M-RET. (It'll be added by the slime-repl contrib.)
	(slime-inspector-copy-down): Removed.

2009-03-27  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (encode-message): Handle errors during write, e.g.
	closed sockets.

2009-03-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-setup-contribs): Moved over from
	slime-autoloads.el

2009-03-27  Helmut Eller  <heller@common-lisp.net>
	* swank-openmcl.lisp (toggle-trace): Replace ccl::%trace with
	ccl:trace-function.
	(kill-thread): Use an implementation that doesn't raise a
	serious-conditions.

2009-03-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] macroexpand): Fix more case issues.

2009-03-25  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] macroexpand): Ignore case.

2009-03-09  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-define-channel-type): Indulge in pretty colors.
	(slime-define-channel-method): You, too!

	(slime-handle-indentation-update): Always put an indentation
	update on 'slime-indent; for slime-indentation-fu.

2009-03-09  Anton Vodonosov  <avodonosov@yandex.ru>

	Use correct encoding and eol conventions for socket streams.

	* swank-abcl.lisp (accept-connection): Honor external-format
	argument.
	(*external-format-to-coding-system*, find-external-format): New.

2009-03-09  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-with-xref-buffer): Use buffer-names like
	"*slime xref...*" so that slime-kill-all-buffers can pick
	it up easily.

2009-03-09  Helmut Eller  <heller@common-lisp.net>

	* hyperspec.el (common-lisp-hyperspec-lookup-reader-macro): Use
	case-insensitive completion.
	(hyperspec-lookup-reader-macro): New alias.
	Suggested by Stas Boukarev.

2009-03-09  Helmut Eller  <heller@common-lisp.net>

	Make fasl-pathname fully customizable not only the direcrory part.

	* swank.lisp (*fasl-pathname-function*): New variable.
	(*fasl-directory*): Deleted.

2009-03-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-choose-overlay-for-read-error): Extracted and
	extended from `slime-choose-overlay-region'. Differentiate between
	symbol-related reader-errors (package not found &c) and
	character-related reader-errors.
	(slime-choose-overlay-region): Use it.

2009-03-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (make-slime-buffer-location, make-slime-file-location):
	Do not default to (:hints), but to nil, as expected in the
	slime-side source-location machinery.

2009-03-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-choose-overlay-region): Special case :read-error
	notes regardless of position kind.

	* swank-sbcl.lisp (signal-compiler-condition): Return :READ-ERROR
	as severity for reader-errors.
	(compiler-note-location): Fix off-by-one when compiling from
	buffer.

2009-03-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (compiling-from-buffer-p),
	(compiling-from-file-p)
	(compiling-from-generated-code-p): New helpers; extracted from
	LOCATE-COMPILER-NOTE.
	(locate-compiler-note): Use them.
	(compiler-note-location): Use them, too, to handle reader-errors
	when compiling from file. This completes 2009-02-27.

	Reported by Christian Lynbech.

2009-03-07  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el ([portability] getf): Redefine `getf' on Emacs21 to
	work on malformed plists like it does on later Emacsen. This made
	the `find-local-definitions' test case fail on Emacs21.

2009-03-04  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-check-fancy-symbol-name): Use
	`slime-test-expect' instead of `slime-check'.
	([test] fancy-symbol-names): Extend test case; check for
	"Foo" in #<Foo| {...}>.
	(slime-symbol-constituent-at-pos): Check for #<.

2009-03-04  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-wait-condition): Remove `save-excursion'; it
	made the `repl-test' test case fail because this test tries to set
	point to the new prompt in vain.

2009-03-03  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-pretty-package-name): Simplify.

2009-03-03  Helmut Eller  <heller@common-lisp.net>

	Use a separate key, C-c C-d #, to lookup reader-macros.

	* hyperspec.el (common-lisp-hyperspec-lookup-reader-macro): New
	command.
	(common-lisp-hyperspec-reader-macros): New variable.
	(common-lisp-hyperspec-reader-macro-at-point): Moved over from
	slime.el
	* slime.el (slime-doc-bindings): Bind C-c C-d #.
	(slime-hyperspec-lookup): Don't consider reader-macros.

2009-03-02  Tobias C. Rittweiler  <tcr@freebits.de>

	* hyperspec.el (common-lisp-hyperspec-symbols): Add entries for
	reader macros even when `common-lisp-hyperspec-symbol-table' is
	bound to some value.

2009-02-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el ([test] macroexpand): New test case.
	(slime-buffer-visible-p): New helper.
	(slime-execute-as-command): New helper.

2009-02-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* hyperspec.el (common-lisp-hyperspec-symbols): Add links to
	reader macros.

	* slime.el (slime-reader-macro-at-point): New function.
	(slime-hyperspec-lookup): Call it.

	Adapted from Stas Boukarev.

2009-02-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Rename `slime-symbol-name-at-point' to
	`slime-symbol-at-point'.

2009-02-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el ([portability] lisp-mode-syntax-table): On Emacs21,
	make @ a prefix character like it's from Emacs22
	onward. `slime-symbol-name-at-point' was written with that
	assumption.

2009-02-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-current-parser-state): Wrap `syntax-ppss' in a
	`save-match-data'. This issue has been reported to the Emacs
	maintainers.

2009-02-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-defun-if-undefined),
	(slime-defmacro-if-undefined): Renamed to
	`slime-DEFUN-if-undefined' and `slime-DEFMACRO-if-undefined' to
	better differentiate between the two.

	(slime-indulge-pretty-colors): New function. You can now put a
	symbol on the plist of `slime-indulge-pretty-colors' to make the
	symbol be fontified like `defun'. This is done for
	`slime-def-connection-var', and the two symbols above.

2009-02-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-defmacro-if-undefined): New. Analogous to
	`slime-defun-if-undefined'.
	([portablity]] with-selected-window) Use it.
	([portability] with-temo-buffer): Likewise.

	Patch by Theam Yong Chew.

2009-02-27  Tobias C. Rittweiler  <tcr@freebits.de>

	C-c C-c on (defun foo () ,bar) did not result in a compiler note
	overlay on SBCL.

	* swank-sbcl.lisp (compiler-note-location): Make it take a
	condition; if the condition is a READER-ERROR, the passed
	compiler-error-context is very likely NIL---we have not proceeded
	beyond reading, so we aren't within the compiler yet. In that
	case, we use the stream position of the stream behind the
	READER-ERROR instead.

2009-02-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* doc/slime.texi: Fix typos, and add keybindings not listed there.

	Patch by Stas Boukarev.

2009-02-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (sldb-backward-frame): Only move backward when we're
	below the backtrace marker.

2009-02-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (debug-in-emacs): Moved (WITH-BINDINGS
	*SLDB-PRINTER-BINDINGS* ...), from here...
	(sldb-loop): ... to here. Otherwise results from a user doing an
	eval-in-frame were truncated.

	Reported by Jeff Workman.

2009-02-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (hash-table-to-alist): New function.
	([method] emacs-inspect (hash-table)): Sort keys if they're all
	numbers, symbols, or strings.

	Adapted from Willem Broekema.

2009-02-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (warn-unimplemented-interfaces):
	Bind *PRINT-PRETTY* to T. Otherwise no sugar formatting on CCL.

2009-02-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-pretty-package-name): Signalled an error on
	simple symbols; fix that!

	Reported by Geoff Wozniak.

2009-02-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-current-form-path): Use
	`slime-current-parser-state'.

2009-02-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el ([test] fancy-symbol-names): New, hopefully
	comprehensive, test for funky symbol names.
	(slime-check-fancy-symbol-name): Helper.
	(slime-exit-vertical-bars): New function to move out from |foo|.
	(slime-symbol-constituent-at): New predicate to test whether the
	character at point is a valid symbol constituent.
	(slime-beginning-of-symbol, slime-end-of-symbol): Rewritten using
	above two functions and `forward-sexp' that correctly parses
	escapes etc.
	(slime-sexp-at-point): Consider thing at point a symbol first.

2009-02-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-forward-cruft): Forward whitespace, reader
	conditonals, comments. Splitted from `slime-forward-sexp'.
	(slime-pretty-package-name): Use it.

2009-02-24  Tobias C. Rittweiler  <tcr@freebits.de>

	Re-checkin my change from 2009-02-14. It seems I didn't actually
	commit it.

2009-02-22  Tobias C. Rittweiler  <tcr@freebits.de>

        `M-x slime-format-string-expand' displays the expansion of a
        format string.

        * slime.el (slime-string-at-point) New.
        (slime-string-at-point-or-error): New.
        (slime-format-string-expand): New; use them.

        * swank-backend.lisp (format-string-expand): New interface.
        * swank.lisp (swank-format-string-expand): New; use it.

2009-02-17  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (dispatch-event [:emacs-rex]): Reply a :invalid-rpc
	message if the specified thread doesn't exist.
	* slime.el (slime-dispatch-event): Handle :invalid-rpc.
	(slime-init-connection-state): Bind slime-current-thread
	to avoid problems with dead threads.

2009-02-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-reader-conditionals-regexp): New variable. Taken
	from `slime-forward-reader-conditional'.
	(slime-pretty-package-name): Fix modeline display for buffer
	containing forms like (in-package "#+foo :A #-foo :B"). Also do
	not call `read' on the name; the function does not need to return
	a symbol, and `read' may choke on non-elisp syntax.

2009-02-14  Helmut Eller  <heller@common-lisp.net>

	Don't signal conditions in interrupt handler to
	avoid problems with naive code like
	 (handler-case foo (condition bar))

	* swank-backend.lisp (*interrupt-queued-handler*): Use a dynamic
	variable instead.
	(slime-interrupt-queued): Deleted.
	* swank-cmucl.lisp, swank.lisp: Ditto.

2009-02-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-restart-or-init-modeline-update-timer): Don't
	run the timer repeatedly.
	(slime-change-directory): Also change the directory in the
	connection-buffer.

2009-02-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-current-tlf, slime-current-form-path): New
	functions; can be handy when inspecting source-locations while
	debugging M-.

2009-02-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Barf if emacs-major-version <= 20. We support 21 and up.
	(slime-emacs-20-p): Removed.

	* slime.el (slime-forward-reader-comment): Removed.
	(slime-forward-any-comment): New; superset of above.
	(slime-forward-reader-conditional): Make it understand SBCL's
	#!+,#!- so it works in source files of SBCL itself, too.
	(slime-current-parser-state): New.

2009-02-07  Tobias C. Rittweiler  <tcr@freebits.de>

	In Xref, list IR1-conversion functions with :DEF-IR1-TRANSLATOR as
	prefix rather than DEFUN. (Test case: M-. on FUNCTION.)

	* swank-sbcl.lisp (definition-specifier): New function.
	(make-dspec): New function. Splitted from
	MAKE-SOURCE-LOCATION-SPECIFICATION.

2009-02-07  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-initialize-macroexpansion-buffer): Clear the
	buffer-undo-list, so the user can't get expansions from earlier
	macroexpansions into the buffer, screwing up badly.

2009-01-30  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-clisp.lisp (fspec-location): Fix creation of source-location.

	Patch by Carsten Blaauw.

2009-01-30  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp (grovel-docstring-for-arglist): Fix for arglist
	that reads, but isn't a list

2009-01-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (with-symbol): New function, to be used with #+.

	* swank-sbcl.lisp: Use WITH-SYMBOL and get rid of SBCL-WITH-SYMBOL.

	* swank-openmcl.lisp (macroexpand-all): Implement it.

	Patch by Stas Boukarev.

2009-01-23  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-editing-keys): New variable; splitted from
	`slime-keys'. Contains key bindings that are useful for buffers
	where users can edit s-exprs, such as source buffers and the REPL.
	(slime-keys): Use it.

2009-01-17  Tobias C. Rittweiler  <tcr@freebits.de>

	Fix C-u C-c C-c in SLDB.

	* slime.el (sldb-recompile-frame-source): sind
	`slime-compilation-policy' at the right place.

2009-01-15  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp: wrapper functions for swank-mop
	slot-boundp-using-class, slot-value-using-class and
	slot-makunbound-using-class to account for MOP differences.

2009-01-16  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-keys): Put C-c C-i and M-* back.

2009-01-16  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (pprint-eval): Also return the output produced during
	evaluation.

2009-01-16  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (break-in-sldb): Display the argument.

2009-01-16  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (warn-unimplemented-interfaces): Print the
	names with pprint-fill.

2009-01-10  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (install-debugger-globally): Set *break-in-sldb*.

2009-01-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (do-symbols*): Wrap body in TAGBODY.

2009-01-10  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-compile-file-options): New variable.
	(slime-compile-file): Use it.

2009-01-10  David Reitter  <david.reitter@gmail.com>

	* slime.el (slime-space): Declare `slime-space' to
	`delete-selection-mode' and friends (CUA) so that their behavior
	is the same as with normal insertion of a space.

2009-01-10  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (swank-compile-file): Take output-file as
	additional argument.  Update backends accordingly.

	* swank.lisp (*fasl-directory*): New variable.
	(fasl-pathname): New function.
	(compile-file-for-emacs): Use it.

2009-01-10  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (set-default-initial-binding): New function.

	* swank.lisp (setup-stream-indirection):  Use it

2009-01-09  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (swank-compile-string): Don't use the
	no-longer-existing directory argument.

2009-01-08  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Move the tree widget for compiler notes to contrib/.

2009-01-08  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (swank-compile-string): Pass the
	buffer-file-name to Lisp, not only the directory.
	Update callers accordingly.
	* slime.el ([test] arglist): Update arglist.

2009-01-08  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-popup-restore-data): Renamed from
	slime-popup-buffer-restore-info.
	(slime-popup-buffer-saved-fingerprint)
	(slime-popup-buffer-saved-emacs-snapshot)
	(slime-popup-buffer-snapshot-unchanged-p)
	(slime-popup-buffer-restore-snapshot)
	(slime-xref-quit, slime-xref-retract): Deleted.

2009-01-08  Helmut Eller  <heller@common-lisp.net>

	Remove some customization variables of questionale use.

	* slime.el (slime-when-complete-filename-expand)
	(slime-space-information-p, slime-display-compilation-output)
	(sldb-show-location-recenter-arg, slime-recenter-window)
	(slime-display-buffer-region): Deleted.

2009-01-07  Helmut Eller  <heller@common-lisp.net>

	Just use find-tag-marker-ring as stack for M-.

	* slime.el (slime-push-definition-stack)
	(slime-pop-find-definition-stack): Do whatever Emacs's standard
	find-tag commands do.

2009-01-07  Helmut Eller  <heller@common-lisp.net>

	Fix the slime-next-location command.

	* slime.el (slime-xref-last-buffer): New variable.
	(slime-show-xrefs): Initialize it.
	(slime-goto-next-xref): Use it.
	(slime-search-property): New function.
	(slime-xref-buffer): Delted

2009-01-07  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*sldb-pprint-dispatch-table*): Honor *print-escape*

2009-01-07  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (frame-locals, frame-debug-vars): Remove
	non-valid variables.
	(debug-var-value): Compute the location from the frame arg.

2009-01-07  Helmut Eller  <heller@common-lisp.net>

	* swank-source-path-parser.lisp (make-source-recorder)
	(source-path-source-position): Adjust the file-position before
	entering it in the table.

2009-01-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-with-xref-buffer): Don't set
	slime-popup-buffer-quit-function. Use the default.  Don't shrink
	the window because it may have existed before creating the buffer
	and we need to restore it.
	(slime-goto-xref): Just use slime-popup-buffer-quit.
	(slime-edit-definition-cont): Push definition stack here so that
	we don't need to do anything special in slime-goto-xref.
	(slime-display-popup-buffer): Also save the buffer that the popup
	window was displaying before (if the window is not new).
	(slime-close-popup-window): Restore the old buffer (if any) of the
	popup window.

2009-01-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-show-buffer-position): Use reposition-window.

2009-01-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-keys): Remove the binding for C-c C-i. M-TAB
	can also be pressed with M-C-i which is probably not taken
	by the window manager.  ESC TAB would also work.  Maybe we
	should reuse C-c C-i for slime-inspect.
	Move C-c C-y to slime-repl.e.
	Remove C-c C-f: it's already on C-c C-d f.
	Remove C-c M-0: slime-restore-window-configuration doesn't exist.
	Remove M-g: slime-quit doesn't work since ages.

2009-01-05  Helmut Eller  <heller@common-lisp.net>

	Create a compilation-log buffer so that next-error works but
	don't display the buffer.

	* slime.el (slime-create-compilation-log): New function.
	(slime-compilation-finished-hook): Use it.

2009-01-05  Helmut Eller  <heller@common-lisp.net>

	Use keymap inheritance to share bindings in various modes.

	* slime.el (slime-parent-map): New keymap.
	(slime-mode-map, slime-popup-buffer-mode-map, sldb-mode-map)
	(slime-inspector-mode-map): Use it.
	(slime-parent-bindings, slime-prefix-bindings): New variables.
	(slime-prefix-key, slime-define-key): Deleted.

	Update contribs accordinly.

2009-01-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-with-popup-buffer): New argment: select.
	If nil (default) buffer will only be displayed but not selected.

2009-01-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-show-compilation-log): Insert two lines at
	the beginning.  Emacs 21 seems to skip over those two.

2009-01-05  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (function-arglist):
	SB-INTROSPECT:FUNCTION-ARGLIST is deprecated in bleeding edge sbcl.

2009-01-05  Tobias C. Rittweiler  <tcr@freebits.de>

	Do not truncate error messages in SLDB.

	* swank.lisp (*sldb-bitvector-length*): Like *PRINT-LENGTH* for
	bit-vectors.
	(*sldb-string-length*): Likewise for strings.
	(*sldb-pprint-dispatch-table*): Truncate bit-vectors / strings
	according to the above variables.
	(*sldb-printer-bindings*): Use the new variables. Bind
	*PRINT-LINES* to NIL so error messages are not truncated.

2009-01-04  Helmut Eller  <heller@common-lisp.net>

	Make it possible to limit the number of displayed restarts.

	* slime.el (sldb-initial-restart-limit)
	(sldb-insert-more-restarts): New.
	(sldb-setup, sldb-insert-restarts): Use it.

2009-01-04  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-local-variable-p): New function. XEmacs requires
	two arguments.

2009-01-04  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (note-error-location): If possible, include the
	filename.
	* slime.el (slime-goto-location-position): Add :eof as position
	kind.

2009-01-03  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-goto-location-buffer): Don't goto point-min.
	(slime-check-location-buffer-name-sanity)
	(slime-check-location-filename-sanity): Separated from
	slime-goto-location-buffer.
	(slime-line-number-at-pos): New compatibility function.

2009-01-03  Helmut Eller  <heller@common-lisp.net>

	By default, show compiler notes in a buffer with compilation-mode.

	* slime.el (slime-show-compilation-log)
	(slime-maybe-show-compilation-log): New functions,
	(slime-compilation-finished-hook): Change the default value
	to 'slime-maybe-show-compilation-log.

2009-01-03  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (simple-serve-requests, make-repl-input-stream):
	Move the call to WITH-CONNECTION to the input stream to pick up
	stream redirections.

2009-01-03  Helmut Eller  <heller@common-lisp.net>

	* swank-clisp.lisp (wait-for-input): Disable it for win32.

2009-01-02  Helmut Eller  <heller@common-lisp.net>

	Experimental implementation of "channels".
	The idea is to support arbitrary protocols without
	changes to the low level event dispatcher.

	* slime.el (slime-make-channel, slime-close-channel)
	(slime-channel-send, slime-send-to-remote-channel): New functions.
	(slime-define-channel-type, slime-define-channel-method): New
	macros.
	(slime-dispatch-event): Support channel events.
	* swank.lisp (channel, listener-channel): New classes.
	(channel-send, send-to-remote-channel): New functions.
	(create-listener): New function.  Test case for channel code.
	(process-requests): Process channel events.

2009-01-02  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] arglist): Guard against nil.  ECL
	returns nil most of the time.

2009-01-01  Tobias C. Rittweiler  <tcr@freebits.de>

	Arglists of user-defined types are now displayed by slime-autodoc
	on SBCL.

	  (deftype foo (x y) `(cons ,x ,y))
	  (declare (type (foo |

	* swank-sbcl.lisp ([method] type-specifier-arglist): Make use of
	recently introduced SB-INTROSPECT:DEFTYPE-LAMBDA-LIST.

2009-01-01  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-loader.lisp (*contribs*): Add `swank-sbcl-exts'.

2009-01-01  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-eval-async, slime-dispatch-event): Canoncalize
	return value. Previously they returned an arbitrary value which
	was displayed to the minibuffer due to a bug in slime-autodoc. The
	arbitrariness of the return value made debugging this a chore.

2009-01-01  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (frame-source-location-for-emacs)
	(pc-source-location): Fall back to the source-note of the function
	if there is no source-note for a pc offset.

2009-01-01  Helmut Eller  <heller@common-lisp.net>

	For buffers without filename, map the name of the tempfile back to
	the buffer name.

	* swank-openmcl.lisp (*temp-file-map*): New variable.
	(note-temp-file): New function.
	(compile-temp-file, source-note-to-source-location): Use it.

2009-01-01  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (sleep-for): New function
	* slime.el ([test] break): Use SWANK::SLEEP-FOR to help CCL pass
	this test.
	([test] arglist): Update arglist of
	swank::compile-string-for-emacs.
	([rest] find-definition.2): Allow some whitespace before the actual
	position.  Otherwise, CCL would fail on this test.

2008-12-31  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (maybe-redirect-global-io): Don't consider
	connections without streams.
	(*new-connection-hook*): Don't add MAYBE-REDIRECT-GLOBAL-IO.
	(create-repl): Call MAYBE-REDIRECT-GLOBAL-IO here.

2008-12-31  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp ([method] source-locations (symbol)): Drop
	the unused _; the compiler dosn't like it.

2008-12-31  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-cd, slime-pwd): New commands.
	(slime-change-directory): New function.
	(slime-change-directory-hooks): New hook.

2008-12-31  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] find-definition.2): Also fails for Lispworks.
	([test] interrupt-at-toplevel, [test] interrupt-in-debugger): Those
	don't work well if there's no REPL thread.

	* swank-backend.lisp (wait-for-input, wait-for-one-stream): Don't
	use PEEK-CHAR because we can't interrupt that cleanly.
	* swank.lisp (simple-serve-requests): Run the REPL inside
	WITH-CONNECTION.
	* swank-lispworks.lisp (emacs-connected): Don't install the signal
	handler here ...
	(install-sigint-handler): ... use this instead

2008-12-30  Tobias C. Rittweiler  <tcr@freebits.de>

	As of now, `C-u C-c C-c' compiled a function with maximum debug
	settings (SBCL only.)

	Now, `M-- C-c C-c' will compile a function with maximum _speed_
	settings (still SBCL only) --- useful to elicit compiler notes.

	* slime.el (slime-compilation-debug-level): Renamed to
	`slime-compilation-policy'.
	(slime-normalize-optimization-level): Renamed to
	`slime-compute-policy'.

	* swank.lisp (compile-string-for-emacs): Takes a policy now.
	(compile-multiple-strings-for-emacs): Ditto.

	* swank-backend.lisp (swank-compile-string): Change :DEBUG key arg
	to :POLICY.

	* swank-scl.lisp, swank-openmcl.lisp, swank-lispworks.lisp
	* swank-ecl.lisp, swank-corman.lisp, swank-cmucl.lisp,
	* swank-clisp.lisp, swank-allegro.lisp, swank-sbcl.lisp:

	Changed accordingly.

2008-12-29  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (find-definitions, source-locations): Use
	ccl:find-definition-sources.
	(swank-compile-string, compile-temp-file): Use new parameters to
	compile-file to adjust source locations.

2008-12-28  Helmut Eller  <heller@common-lisp.net>

	Recent CCLs support much better source location recording.
	Let's use the new features in SLIME.

	* swank-openmcl.lisp (function-source-location): Use
	ccl:function-source-note.
	(pc-source-location): New function, based on
	ccl:find-source-note-at-pc.
	(frame-source-location-for-emacs): Use it.

2008-12-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Move slime-lisp-package and
	slime-lisp-package-prompt-string to slime-repl.el

	* swank.lisp (create-repl): Return initial package and prompt.

2008-12-25  Helmut Eller  <heller@common-lisp.net>

	Don't restore window configs in sldb.
	That doesn't work in the native repl, because output
	may have moved point.

	* slime.el (sldb-setup, sldb-exit): Use temp buffer code.
	(slime-display-popup-buffer): Don't overwrite existing
	variables.
	(slime-close-popup-window): Factored out from
	slime-popup-buffer-quit.
	(slime-save-local-variables): New macro.
	(sldb-maybe-kill-buffer, sldb-saved-window-configuration): Deleted.

2008-12-23  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (connection.env): New slot. To hold dynamic variable
	bindings for this connection.
	(with-io-redirection): Use it.
	(create-repl): New function.  Currently only redirects IO for the
	connection.  Could potentially be used to create multiple
	listeners, each with a set of streams and corresponding buffers.
	(*redirect-io*, maybe-call-with-io-redirection)
	(call-with-redirected-io): Deleted.

2008-12-23  Helmut Eller  <heller@common-lisp.net>

	Move most of the REPL mode to contrib.
	Disable some commands that depend on the
	existence of a REPL buffer.

2008-12-23  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-set-connection-info): Don't create a repl
	buffer.
	(slime-start-lisp): Bind process-connection-type to nil to avoid
	problems witht CLISPs readline code.

	* swank.lisp (read-non-blocking, make-repl-input-stream)
	(simple-repl): New functions.
	(simple-serve-requests): Use it.

	* swank-backend.lisp (wait-for-one-stream, wait-for-streams): New
	functions.
	(wait-for-input): Use it to support wainting on multiple streams.

	* swank-cmucl.lisp (to-fd-stream): New function.
	(wait-for-input): Use it.

2008-12-23  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-run-mode-hooks): Wrapper for Emacs21.
	(slime-repl-mode): Use it.
	Reported by Peter Denno.

2008-12-23  Sven Van Caekenberghe  <sven@beta9.be>

	* swank.lisp (connection): Add a slot to store the
	auto-flush-thread.
	(cleanup-connection-threads): Also kill the auto-flush-thread.

	(stop-server): list-threads returns the thread name in second
	position and not in first position.

2008-12-23  Willem Broekema  <metawilm@gmail.com>

	* slime.el (sldb-insert-restarts): Make the space before each
	restart also propertized, consistent with how each line in the
	backtrace is fully sensitive.

2008-12-09  Helmut Eller  <heller@common-lisp.net>

	Reset the stream column to 0 after eval requests.

	* swank.lisp (interactive-eval, eval-region): Use FRESH-LINE
	to reset the stream column.
	* slime.el (test repl-test): Adjust test accordingly.

2008-12-09  Helmut Eller  <heller@common-lisp.net>

	Be a bit more careful when computing the toplevel restart.

	* swank.lisp (throw-to-toplevel): Test *sldb-quit-restart* for
	nilness.
	* sldb-quit (sldb-quit): Show the returned value in brackets.

2008-12-09  Helmut Eller  <heller@common-lisp.net>

	Make the modeline a bit shorter.

	* slime.el (slime-compute-modeline-string): Remove PKG: and CON:
	to save space.
	(slime-compute-modeline-connection-state): Don't include zeros.

2008-12-09  David Reitter  <david.reitter@gmail.com>

	* slime.el (slime-repl-mode): Use `run-mode-hooks' rather than
	just `run-hooks'.  That way, after-change-major-mode-hook is
	called automatically.

2008-12-07  Nikodemus Siivola  <nikodemus@random-state.net>

	* slime.el (slime-qualify-cl-symbol-name): Clean up the package
	name using `slime-pretty-package-name', so that packages named with
	strings are not left with the extra doublequotes.

2008-12-05  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-macroexpansion-minor-mode-map): Bind keybindings
	of `undo' to `slime-macroexpansion-undo'.
	(slime-show-macroexpansion): Renamed to
	`slime-initialize-macroexpansion-buffer'
	(slime-initialize-macroexpansion-buffer): Make sure that the user
	can't undo past the initial insertion.
	(slime-macroexpand-undo): New function. Tries to undo-only.

2008-12-05  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-trace-query): SPEC argument can be a symbol.

2008-12-02  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-compute-modeline-connection-state): Fix
	computation of debugged requests.

2008-11-30  Gábor Melis  <mega@retes.hu>

	* slime.el (slime-compute-modeline-connection-state): Print the
	number of debugged requests if non-zero.
	(slime-connection-state-as-string): Removed unused branches.
	(slime-compute-connection-state): Removed :debugged branch making
	most likely return :connected instead.

2008-12-02  Tobias C. Rittweiler  <tcr@freebits.de>

	Modeline wouldn't display {debugged..} after `slime-interrupt'.

	* slime.el (slime-debugged-connection-p): Can't rely on
	`sldb-debugged-continuations' to be non-null in every SLDB buffer.

2008-11-23  Helmut Eller  <heller@common-lisp.net>

	`q' in temp buffers should only delete the window if it was newly
	created for the buffer.

	* slime.el (slime-display-popup-buffer): New function.  Recognize
	if the window didn't exist before.  Save the created window and
	the selected window in buffer local variables.
	(slime-make-popup-buffer): Renamed from slime-popup-buffer.
	(slime-popup-buffer-quit): Delete the created window (if needed)
	and restore the old selected window.  Don't touch other windows.

	(slime-edit-value-callback): Calling lisp-mode deletes all local
	variables.  We need to that inside with-popup-buffer.

2008-11-22  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-update-all-modelines): Only walk through
	widnow-list not buffer-list.
	(slime-restart-or-init-modeline-update-timer): Inrease the timer
	interval to 0.5 seconds.

2008-11-22  Gábor Melis  <mega@retes.hu>

	Reincarnate "eval..." (almost)

	* slime.el (slime-compute-modeline-connection-state): Return the
	number of outstanding requests if connected.
	(slime-update-all-modelines): Renamed from slime-update-modelines,
	loops through all slime buffers.
	(slime-restart-or-init-modeline-update-timer): New function.
	(slime-dispatch-event): Arrange for modelines to be updated on
	:EMACS-REX and :RETURN.

2008-11-22  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (invoke-default-debugger): New condition type.
	(swank-debugger-hook): Handle invoke-default-debugger conditions.
	(sldb-break-with-default-debugger): Signal invoke-default-debugger
	to transfer control to the default debugger.
	New argument DONT-UNWIND to invoke the native debugger without
	unwinding the stack.
	* slime.el (sldb-break-with-default-debugger): By default,
	unwind the stack before invoke the native debugger.
	With prefix argument, run the native debugger in the
	dynamic environment of SLDB.

2008-11-02  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] package-updating): Allegro returns "||" as
	prompt for the keyword package.  I guess that's acceptable.

2008-11-02  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-popup-buffer-quit): Always delete windows and
	bury the buffer.

2008-11-02  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (slime-interrupt-queued): New condition.
	* swank.lisp (invoke-or-queue-interrupt): Raise it here.
	* swank-cmucl.lisp (wait-for-input): Make fd readable in condition
	handler so that we can call serve-events without timeout.

2008-11-02  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([test] find-definition.2, [test] compile-defun):
	Expect to fail for CCL.

2008-10-31  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-history-pattern): Simplify as suggested by
	Knut Olav Bøhmer and Michael Weber.

2008-10-31  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-eval-with-transcript)
	(slime-eval-with-transcript-cont): Restore the current buffer,
	before calling cont.

2008-10-31  Helmut Eller  <heller@common-lisp.net>

	* swank-lispworks.lisp (describe-function): Don't use
	string-upcase on lambda-list-argruments, because not all elements
	must be symbols.

2008-10-31  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (debug-in-emacs): Bind *sldb-quit-restart* here. If
	necessary, use the current abort retstart.

2008-10-30  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (wait-for-input): Return streams which are at
	EOF.

2008-10-30  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-popup-buffer-quit): Call bury-buffer with
	explicit argument for compatibility with XEmacs.

2008-10-30  Ivan Shvedunov  <ivan4th@gmail.com>

	* slime.el (slime-repl-history-pattern): Use the part of input
	between its start and (point) as history search pattern.
	Previously we used the entire input.

2008-10-26  Helmut Eller  <heller@common-lisp.net>

	* test.sh: Return the number of failed tests as exit code.

	* slime.el: Fix change from 2008-10-20.
	Use (eval-when (compile)...) instead of (eval-when-compile ...),
	because the latter is more like (eval-when (compile eval) ...).

2008-10-23  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-redirect-inferior-output): New command.

2008-10-21  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (frame-restartable-p): Handle errors signaled
	by debugger:frame-retryable-p.  This looks like an Allegro
	bug, though.  Reported by Luke Hope.

2008-10-20  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Require some packages, e.g. apropos, at compile time
	to suppress some "undefined function" warnings.

2008-10-19  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (frame-locals-and-catch-tags): New function.
	Fetch locals and catch tags with a single RPC.

	* slime.el (sldb-frame-details): Use it.

	* swank-backend.lisp (frame-catch-tags): Provide a default
	implementation.  Delete the dummy defs in various backends.

2008-10-19  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (handle-compiler-warning): Report source
	location position when we can.
	Use NAMESTRING for *compile-filename*.

2008-10-19  Helmut Eller  <heller@common-lisp.net>

	* swank-clisp.lisp (filename-to-pathname, parse-cygwin-filename):
	Accept Windows and Unix filenames when :CYGWIN is in *features*.

2008-10-17  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (swank-compile-file): Fix typo.

2008-10-17  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (compute-sane-restarts): Deleted. Use plain
	compute restarts instead.

2008-10-17  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (call-with-retry-restart): Implement this a little
	less confusing.

2008-10-17  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (frame-restartable-p): New function.
	(swank-frame): Deleted. Update implemenetations accordingly.
	(print-frame): Renamed back from print-swank-frame.

	* swank.lisp (backtrace): Don't clutter the backtrace with
	'(:restartable :unknown).  For practical purposes :unknown is the
	same as nil.

	* slime.el (sldb-compute-frame-face): Only accept nil or t for
	the :restartable prop.

2008-10-16  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (swank-compile-file): Return the same
	values as COMPILE-FILE.  Update backends accordingly.

	* swank-lispworks.lisp (with-swank-compilation-unit): Return the
	values of BODY.
	(compile-from-temp-file)
	* swank-allegro.lisp (compile-from-temp-file)
	* swank-clisp.lisp (swank-compile-string)
	* swank-abcl.lisp (swank-compile-string): Return T on success.
	* swank.lisp (collect-notes): Check return type of
	FUNCTION.

2008-10-16  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (frame-catch-tags): Disabled as it prevents
	FRAME-LOCALS from working in lx8632.

2008-10-10  Nikodemus Siivola  <nikodemus@random-state.net>

	* slime.el (slime-inspector-toggle-verbose): New function.
	(slime-inspector-mode-map): Bind v to slime-inspector-toggle-verbose.
	(slime-cheat-sheet-table): Add slime-inspector-toggle-verbose.
	* swank.lisp (*inspector-verbose*): New variable.
	([defstruct] istate): New slot called verbose.
	(istate>elisp): If the current istate is verbose, use untruncated
	result of TO-STRING as the title.
	(inspect-nth-part): Use the verbosity of the current istate.
	* doc/slime.texi: Document slime-inspector-toggle-verbose.

2008-10-07  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (*backtrace-printer-bindings*): export.

2008-10-05  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (list-callers): Do a full GC before calling
	map-allocated-objects. That's needed because map-allocated-objects
	seems to cons even if it's inlined.
	(emacs-inspect [code-component]): Try to detect
	byte-code-components.

	(inspect-alien-record, mv-function-end-breakpoint-values): Avoid
	compiler warnigns.

2008-10-04  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp: Add support for WHO-SPECIALIZES. This requires
	a patch for SBCL's SB-INTROSPECT contrib which I sent upstream a
	few minutes ago.

2008-10-04  Helmut Eller  <heller@common-lisp.net>

	Some cleanups for compilation commands.

	* slime.el ([defstruct] slime-compilation-result): Rename result
	slot as successp.
	(slime-make-compilation-finished-continuation): Deleted.
	slime-eval-async preserves the current buffer and preserving the
	window-configuration was always a questionable feature.
	(slime-compilation-finished): Simplified.
	(slime-show-note-counts): Also show the success/failure flag.
	(slime-recompile-locations): Take a continuation as argument
	rather than messing around with compilation-finished-hooks.
	(slime-aggregate-compilation-results): New function.
	(slime-xref-recompilation-cont): Renamed from
	slime-make-xref-recompilation-cont.
	(slime-compiler-results): Deleted.
	(slime-goto-first-note-after-compilation): Replaced with hook
	function slime-goto-first-note.
	(slime-compilation-just-finished): Deleted.
	(slime-to-lisp-filename-function): Use convert-standard-filename.
	* swank.lisp ([defstruct] compilation-result): Renamed from
	swank-compilation-result.
	(measure-time-interval): Return seconds as float.
	(collect-notes): Renamed from swank-compiler.  Return a single
	compilation-result.
	(compile-multiple-strings-for-emacs): Return a list of
	compilation-results instead of a single result with merged notes.

	* swank-backend.lisp (filename-to-pathname): Renamed from
	parse-emacs-filename.  Updated callers.
	(pathname-to-filename): New function.  Use it where appropriate.

	* swank-scl.lisp (pathname-to-filename): Implement it in the
	backend to get rid of the #+scl in swank.lisp.

	* swank-cmucl.lisp (swank-compile-file, swank-compile-string):
	Return t on success.

2008-10-04  Alain Picard  <Alain.Picard@accenture.com>

	UTF-8 support for Lispworks.

	* swank-lispworks.lisp (accept-connection): Use flexi-streams
	for utf-8.
	(make-flexi-stream): New function.
	(*temp-file-format*): New variable
	(compile-from-temp-file): Use it.

2008-09-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-list-compiler-notes): Revert change from
	2008-08-15 which introduced automatic shrinkage of the
	compiler-notes buffer. This turned out to be more annoying than
	worthwhile. On the cases where it's desired, the user can just use
	`C-x -' himself to shrink the notes buffer.

2008-09-28  Helmut Eller  <heller@common-lisp.net>

	Stop handling events in worker threads after sldb-quit.

	* swank.lisp (with-top-level-restart): New macro.
	(handle-requests, spawn-worker-thread): Use it.
	(process-requests): Drop the just-one argument.
	(handle-or-process-requests): Deleted. Call handle-requests
	directly.

2008-09-27  Tobias C. Rittweiler  <tcr@freebits.de>

	Improve ECL's arglist support somewhat.

	* swank-ecl.lisp (grovel-docstring-for-arglist): New function.
	(arglist): Use it. Now also try to find an arglist for special
	operators, and macros.

2008-09-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-cycle-connections): Do not make the new
	connection buffer-local if we're currently in a REPL buffer.

2008-09-24  Knut Olav Bøhmer  <knut-olav.bohmer@telenor.com>

	* slime.el (slime-cycle-connections): New command.

2008-09-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-prefix-map): New keymap.
	(slime-define-key): Use it.  Also drop unused :inferior arg.
	(slime-inspector-mode-map): Bind C-c to slime-prefix-map.
	(slime-define-both-key-bindings): New function.  Factor of
	slime-init-keymaps.
	(slime-init-keymaps): Use it.
	(slime-control-modified-char): Deleted.

2008-09-23  Douglas Crosher  <dcrosher@common-lisp.net>

	* swank-scl.lisp: update for Scieneer CL 1.3.8.

	* swank.lisp (ed-in-emacs): customize for the SCL.

	* swank.lisp (signal-interrupt): fix typo.

2008-09-22  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (guess-package): Return NIL if string designator is
	NIL: makes files without IN-PACKAGE forms more *BREAK-ON-SIGNALS*
	friendly.

2008-09-22  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (wait-for-input): Implement this in backend,
	since read-char-no-hang doesn't work in fd-handlers.
	(install-sigint-handler): Go through invoke-interruption and
	with-interrupts to support nested interrupts.

	* slime.el (slime-lisp-implementations): Mention :env keyword
	in docstring.

2008-09-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-input-end-mark): Deleted. It was always at
	the end of buffer. Use point-max instead.
	(slime-repl-eol): Removed.  The usual end-of-line does the same.

2008-09-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-eol-conversion-fixup): Return 0 (not nil) for
	anyting other than CRLF conventions.

2008-09-21  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp: Try to remove the first few internal frames
	from backtraces.
	(guess-stack-top): New function.
	(call-with-debugging-environment): Use it

	(frame-arguments): Return a list instead of a string.  Don't quote
	symbols.
	(source-locations): Recognize (:internal FOO) functions.

2008-09-21  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*backtrace-pprint-dispatch-table*):
	Honor *print-escape*.

2008-09-20  Ariel Badichi <abadichi@bezeqint.net>

	* slime.el (slime-with-output-end-mark):
	slime-repl-show-maximum-output no longer accepts any arguments.

2008-09-20  Helmut Eller  <heller@common-lisp.net>

	* test.sh: Parse the -S option as advertized.

	* slime.el (slime-randomize-test-order): Add the * to the
	docstring.
	([def-slime-test] break2): Also CCL is expected to fail here.

2008-09-20  Helmut Eller  <heller@common-lisp.net>

	Fix some of the bugs that I introduced with the last commits.

	* swank-openmcl.lisp (call-with-debugging-environment): Fix typo.
	(call-with-debugger-hook): Bind *break-in-sldb*.
	(backtrace-context): Return nil, not tcr!
	(map-backtrace): Remove the stack< test. Only test for nil.
	(lisp-implementation-type-name): Return "ccl".

	(emacs-inspect (t)): Fix typo.

	(kill-thread): Use join-process. Otherwise we get strange
	"process-reset" errors when disconnecting.
	(thread-alive-p): Implemented with ccl::process-exhausted-p.

	(source-locations): Use labels for helper functions.
	(function-source-location): Now implemented on top of
	source-locations.

2008-09-20  Helmut Eller  <heller@common-lisp.net>

	Fix frame-source-location-for-emacs for CCL.

	* swank-openmcl.lisp (source-locations): New function.
	(create-source-location): New function.
	(frame-source-location-for-emacs): Use it.

2008-09-20  Helmut Eller  <heller@common-lisp.net>
	Fix inspecting of arrays.

	* swank-openmcl.lisp (emacs-inspect :around (t)): call-next-method
	may return a lazy list.  Detect that case and only append to
	ordinary lists.
	(emacs-inspect (t)): Don't mark labels as inspectable. Just print
	them.

2008-09-20  Helmut Eller  <heller@common-lisp.net>

	Fix BREAK and backtraces after interrupts.

	* swank-openmcl.lisp (*sldb-stack-top-hint*): New variable.
	(call-with-debugging-environment, break-in-sldb)
	(interrupt-thread): Use it.
	(*process-to-stack-top*, record-stack-top)
	(grab-stack-top): Deleted. Use *sldb-stack-top-hint* instead.
	(backtrace-context): Deleted. Use %current-tcr directly.

2008-09-20  Helmut Eller  <heller@common-lisp.net>

	* swank-openmcl.lisp (call-with-debugging-environment): Don't set
	*debugger-hook* to nil.

2008-09-19  Helmut Eller  <heller@common-lisp.net>

	* slime.el ([def-slime-test] break): Split it up in two versions
	to make the debugger-hook issue more explicit.

	* swank-allegro.lisp (frob-allegro-field-def): There seems to be a
	new type :func handle it like :lisp.

2008-09-19  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-save-marker): New marcro. Use it in combination
	with insert-before-markers.
	(slime-check-buffer-contents): Use {} resp. [] to describe the
	position of output resp. input markers.

	(slime-repl-emit-result): Update window-point.

	(slime-randomize-test-order): New variable.
	(slime-shuffle-list): New function.
	(slime-run-tests): Use it.
	(slime-batch-test): Accept test-name and randomize arguments.

	* test.sh (usage): Accept -n and -S options.

2008-09-18  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-ecl.lisp: Forgot to update ECL's backend when introducing
	swank-frames in commit on 2008-09-12.

2008-09-18  Helmut Eller  <heller@common-lisp.net>

	Some cleanups for the REPL code.

	* slime.el (slime-show-last-output)
	(slime-show-last-output-function)
	(slime-show-last-output-region)
	(slime-maybe-display-output-buffer)
	(slime-repl-last-input-start-mark): Delete unused code.

	(slime-repl-emit-result, slime-repl-insert-prompt)
	(slime-repl-show-abort, slime-repl-insert-result)
	(slime-insert-transcript-delimiter)
	(slime-eval-with-transcript-cont): Consistently use save-excursion
	and insert-before-markers.  We always want to preserve the cursor
	position in the input region (for type-ahead).
	(slime-eval-with-transcript):  Change order of arguments to
	make the common case easier to use.

	(slime-batch-test): Use a timer.
	(slime-check-buffer-contents): New function to test contents and
	current position.  Use it in various places.

	(sldb-recenter-region, def-slime-test interactive-eval)
	(def-slime-test interactive-eval-output): Act slightly differently
	when the test suite is executed in batch mode (without terminal).

	* swank.lisp (handle-requests): Flush output.
	(interactive-eval, interactive-eval): Don't use fresh-line, as
	that makes it harder to test the REPL code.

	* test.sh (usage): Add a -T switch to run slime in the current
	directory without copying (and compiling) everything to a
	temporary directory.

2008-09-18  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-eval-with-transcript): Accept some more arguments
	so that we can also use it for compile-file.
	(slime-eval-with-transcript-cont): New. Insert prompt.
	(slime-compile-file): Use slime-eval-with-transcript.
	(slime-repl-show-maximum-output): Update window point.
	(slime-repl-insert-prompt): Don't use insert-before-markers.
	(slime-repl-emit): No longer use slime-with-output-end-mark.

2008-09-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-sbcl.lisp (make-definition-source-location): Fix typo
	introduced with crlf-related commit on 2008-09-16.

2008-09-17  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-popup-on-output): New variable.
	(slime-repl-emit): Honor slime-repl-popup-on-output.
	(slime-eval-with-transcript): Use slime-repl-popup-on-output.
	Also remove the function argument, as it was only used once
	and that was slime-message.

2008-09-17  Helmut Eller  <heller@common-lisp.net>

	(*pre-reply-hook*): Add 'force-user-output.

2008-09-17  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (send-user-output): Lifted from make-output-function.
	Make this a top-level function for easier redefinition.

2008-09-17  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-test-find-top-level-restart): New function.
	[def-slime-test] (interrupt-at-toplevel, interrupt-in-debugger):
	Use it.

2008-09-16  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-connection): Optionally select a new default
	connection.
	(slime-auto-select-connection): New variable.
	(slime-auto-select-connection): New function.

2008-09-16  Helmut Eller  <heller@common-lisp.net>

	Adjust positions in files with CRLF style end-on-line markers.

	* slime.el (slime-eol-conversion-fixup): New function.
	(slime-goto-location-position): Use it.  Also add a new position
	type :offset, so that we don't adjust offsets in strings that were
	sent over the wire (which uses LF eol-convention).

	* swank-abcl.lisp
	* swank-allegro.lisp
	* swank-clisp.lisp
	* swank-cmucl.lisp
	* swank-corman.lisp
	* swank-ecl.lisp
	* swank-lispworks.lisp
	* swank-openmcl.lisp
	* swank-sbcl.lisp
	* swank-scl.lisp: Create :offset style positions where needed.

	* swank-lispworks.lisp (skip-comments): New function.
	(dspec-stream-position): Use it.

2008-09-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-end-of-list): `backward-down-list' was used
	there which is defined by paredit.el.
	Use `(down-list -1)' instead.

2008-09-15  Helmut Eller  <heller@common-lisp.net>

	* swank-lispworks.lisp (describe-symbol-for-emacs): Revert last
	change.

2008-09-15  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (sldb-loop): Send a :sldb-return event to ourselfes
	to inform the debug session at the lower level.
	(wait-for-event): Drop the report-interrupt argument.  No longer
	needed.
	(event-match-p): Add an OR pattern operator.  Used to wait for
	different events simultaneously.

	(read-packet): Use peek-char to detect EOF. read-sequence wouldn't
	work.

	* slime.el (slime-test-interrupt-in-debugger): Call sldb-quit and
	sldb-continue in the right buffer.

	* swank-backend.lisp (wait-for-input):
	* swank-cmucl.lisp (wait-for-input):
	* swank-clisp.lisp (wait-for-input): Use the idiom
	"(when (check-slime-interrupts) (return :interrupt))".

2008-09-15  Helmut Eller  <heller@common-lisp.net>

	Interrupt related hacking.

	* swank-backend.lisp (*pending-slime-interrupts*): Should be
	thread-local.  Leave global value unbound.

	* swank.lisp (with-interrupts-enabled%): New helper macro.
	(with-slime-interrupts, without-slime-interrupts): Use it.
	(call-with-connection): Bind *pending-slime-interrupts* here.
	(wait-for-event): Add a report-interrupt argument.  Currently used
	by the debugger to detect when a nested debugger session, which
	was triggered by an interrupt in wait-for-event, returns.  Doesn't
	work well, though.

	* slime.el (slime-test-interrupt-in-debugger): New test.

2008-09-14  Helmut Eller  <heller@common-lisp.net>

	Introduce a WAIT-FOR-INPUT backend function.
	CMUCL's blocking input functions READ-CHAR etc.
	are hard to use with interrupts.  In the backend
	we have a more realistic chance to get interrupts working.

	* swank-backend.lisp (wait-for-input): New function.

	* swank-cmucl.lisp, swank-clisp.lisp (wait-for-input): Implement
	it.

	* swank.lisp (wait-for-event/event-loop): Use WAIT-FOR-INPUT and
	rescan the event-queue if WAIT-FOR-INPUT was interrupted.
	(reader-event): Deleted. Merged into wait-for-event/event-loop
	resp.  dispatch-loop.
	(decode-message): Drop the timeout argument.
	(*events-enqueued*): A counter to quickly detect new events after
	a wait.
	(call-with-connection): If the argument is already the current
	connection, don't rebind anything.
	(without-slime-interrupts, with-slime-interrupts): Don't rebind
	*pending-slime-interrupts*. Just to be save.

	* slime.el (sldb-maybe-kill-buffer): New function, to handle
	the case when the debugger was interrupted in WAIT-FOR-INPUT and
	we want to return to the previous debug level.

2008-09-12  Helmut Eller  <heller@common-lisp.net>

	For Lispworks, parse the $LWHOME/lwdoc file.

	* swank-lispworks.lisp (lwdoc, lookup-lwdoc, parse-lwdoc-record):
	New functions.
	(describe-symbol-for-emacs): Use it.

2008-09-12  Tobias C. Rittweiler  <tcr@freebits.de>

	In an SLDB buffer, `C-c C-c' will now recompile the source behind
	a frame. In particular, `C-u C-c C-c' will recompile the frame
	with high debug settings.

	* slime.el (sldb-recompile-frame-source): New function.
	(sldb-mode-map): Bind `C-c C-c' to it.

	* slime.el (sldb-overlays, sldb-delete-overlays, slime-xref-cleanup):
	Removed. Sldb-overlays weren't created anymore since 2008-08-17.

2008-09-12  Tobias C. Rittweiler  <tcr@freebits.de>

	New faces: `sldb-restartable-frame-line-face',
	           `sldb-non-restartable-frame-line-face'.

	The former is the face for frames that are surely restartable, the
	latter for frames that are surely not restartable. If
	restartability of a frame cannot be reliably determined, the face
	`sldb-frame-line-face' is used.

	At the moment, determination of frame restartability is supported
	by the SBCL backend only.

	* slime.el (sldb-frame.string): New.
	(sldb-frame.number): New.
	(sldb-frame.plist): New.
	(sldb-prune-initial-frames): Use them.
	(sldb-insert-frames): Ditto.
	(sldb-compute-frame-face): New.
	(sldb-insert-frame): Use `sldb-compute-frame-face' to insert
	frames with one of the faces described above.

	* swank.lisp (defslimefun backtrace): Changed return value; each
	frame is now accompanied with a PLIST which at the moment can
	contain :RESTARTABLE NIL/T/:UNKNOWN depending on whether the frame
	is restartable, or not.

	* swank-backend.lisp (defstruct swank-frame): New structure.
	(compute-backtrace): Is now supposed to return a list of SWANK-FRAMEs.
	(print-frame): Renamed to PRINT-SWANK-FRAME.

	* swank-sbcl.lisp, swank-cmucl.lisp, swank-lispworks.lisp,
	* swank-allegro.lisp, swank-scl.lisp, swank-openmcl.lisp,
	* swank-abcl.lisp, swank-clisp.lisp: Adapted to swank-backend changes.

2008-09-11  Helmut Eller  <heller@common-lisp.net>

	* doc/slime-refcard.tex: Fix typos.

2008-09-11  Gary King  <gwking@metabang.com>

	* swank-allegro.lisp (fspec-definition-locations): add declare
	ignores to prevent warnings

	(emacs-inspect): remove first definition on function since it
	was being overwritten by the next one. Wrap the method on t with
	a excl:without-redefinition-warnings to prevent warning.

2008-09-11  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (slime-output-stream): Remove last-flush-time
	slot.
	(sos/flush): Renamed from sos/misc-force-output.  Don't try to be
	clever: no timestamps and no line buffering.
	(sos/write-char, sos/write-string): Renamed from sos/out
	resp. sos/sout.  Call output-fn outside without-interrupts.
	(sos/reset-buffer): New function.

2008-09-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-compilation-unit): Renamed to
	`slime-compilation-result'.
	(slime-last-compilation-unit): Renamed to
	`slime-last-compilation-result'.
	(slime-compiler-notes, slime-compiler-results): Adapted accordingly.
	(slime-compilation-finished): Ditto.

2008-09-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-popup-buffer-restore-snapshot): Make sure that
	the buffer-local variable containing the popup buffer's snapshot
	is set to nil in the right buffer.

2008-09-11  Tobias C. Rittweiler  <tcr@freebits.de>

	Reimplement recompilation support. The previous implementation
	involving specials was subtly broken with the :fd-handler
	communcation-style, because of serve-event's polite interplay with
	specials. (Cf. my slime-devel post "Per event bindings" on 2008-08-17.)

	* swank.lisp (with-swank-compilation-unit): Removed.
	(record-note-for-condition): Removed.
	(defstruct swank-compilation-unit): Renamed to
	`swank-compilation-result'.
	(swank-compilation-unit-for-emacs): Renamed to
	`swank-compilation-result-for-emacs'.
	(swank-compiler): Takes additional argument, the
	swank-compilation-result where caught notes should be accumulated
	into.
	(defslimefun compile-file-for-emacs): Adapted accordingly.
	(defslimefun compile-string-for-emacs): Ditto.
	(defslimefun compile-multiple-strings-for-emacs): New RPC call.

	* slime.el (slime-make-compile-expression-for-swank): Removed.
	(slime-compile-string): Don't use above function anymore. Adapted.
	(slime-recompile-locations): Rewritten to use new RPC call above.

2008-09-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (*gray-stream-symbols*): Comment out
	STREAM-FILE-POSITION.

2008-09-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (eval-for-emacs): Remove WITH-RETRY-RESTART again for
	simplicity reasons.

	(interactive-eval): Add WITH-RETRY-RESTART.
	(eval-and-grab-output): Ditto.
	(interactive-eval-region): Ditto.
	(re-evaluate-defvar): Ditto.
	(pprint-eval): Ditto.
	(repl-eval): Ditto.
	(eval-string-in-frame): Ditto.
	(pprint-eval-string-in-frame): Ditto.
	(init-inspector): Ditto.
	(inspect-in-frame): Ditto.

2008-09-09  Tobias C. Rittweiler  <tcr@freebits.de>

	A RETRY restart is provided for all Slime evaluation requests.

	The rationale is that restarting from a frame is mostly only
	possible for functions compiled with high debug settings; most
	functions aren't, however.

	[Alternatively, we could make EVAL-FOR-EMACS be compiled with a
	high debug level, so it'll become restartable. That would be
	non-obvious to the user, though, and would only work on those
	implementations that implement SWANK-BACKEND:RESTART-FRAME.]

	* swank.lisp (call-with-retry-restart): New function.
	(with-retry-restart): New macro.
	(eval-for-emacs): Use WITH-RETRY-RESTART.

2008-09-09  Tobias C. Rittweiler  <tcr@freebits.de>

	A package "Foo.Bar.1.0" was truncated to "0>" as REPL
	prompt. It'll now be displayed as "Bar.1.0>".

	* swank.lisp (auto-abbreviated-package-name): Adapted accordingly.

2008-08-31  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (*gray-stream-symbols*): Remove
	stream-file-position because it's called stream-position in CCL.
	(make-fn-streams): Deleted.
	Update callers accordingly.

2008-08-30  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (receive-if): Add #+/-linux to avoid yet more
	WITH-TIMEOUT related problems.

	* swank-gray.lisp (slime-input-stream): Remove the output stream
	slot.  Most of the time we can just call force-output.

	* slime.el [test](inspector): New test.

	* swank.lisp (prepare-part): Also wrap action elements
	in a list.  Reported by Ariel Badichi and Madhu.

2008-08-30  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-pop-to-buffer): Drop the norecord argument,
	since we can't support it easily in Emacs 21.
	Reported by Christophe Rhodes.

2008-08-30  Michael Weber  <michaelw+slime@foldr.org>

	* swank-gray.lisp (make-input-stream): fixed typos

2008-08-30  Michael Weber  <michaelw+slime@foldr.org>

	* swank-backend.lisp (*gray-stream-symbols*): added symbols
	stream-peek-char, stream-read-line, stream-file-position

2008-08-30  Mark Evenson  <evenson@panix.com>

	* swank-abcl.lisp (make-output-stream, make-input-stream): provide
	the (trivial) definitions for MAKE-OUTPUT-STREAM and
	MAKE-INPUT-STREAM for ABCL.

2008-08-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-setup): Insert "No backtrace" if the backtrace is
	empty.

2008-08-27  Anton Vodonosov  <avodonosov@yandex.ru>

	* swank-ecl.lisp: Add :load-toplevel and :execute to EVAL-WHENs to
	fix loading.

2008-08-27  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (remove-sigio-handlers): Fix thinko.

	* swank.lisp (decode-message): Don't ignore EOF.
	(swank-debugger-hook): Remove the default-debugger restart.

2008-08-25  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-compute-modeline-package): Used `when-let'
	before its definition.
	(slime-compute-modeline-string): Display "PKG:" before "CON:".

2008-08-22  Helmut Eller  <heller@common-lisp.net>

	Some focus handling in multiframe setups.

	* slime.el (slime-pop-to-buffer): New function.
	(slime-switch-to-output-buffer): Use it.

2008-08-22  Helmut Eller  <heller@common-lisp.net>

	Use lazy lists in the inspector.

	* swank.lisp (lcons): New data type.
	(lcons*, lcons-car, lcons-cdr, llist-range): New functions.
	(emacs-inspect array): Use lazy lists.
	(istate>elisp): The istate.content is now be a lazy list.
	(iline): New utility.
	(prepare-range, prepare-part): Replaces inspector-content.

2008-08-22  Helmut Eller  <heller@common-lisp.net>

	Implement streams with a length limit.
	Use them to truncate printer output in backtraces.

	* swank-backend.lisp (make-output-stream, make-input-stream):
	Split make-fn-streams up into two functions.

	* swank.lisp (call/truncated-output-to-string): New function.
	(backtrace, istate>elisp, to-line): Use it.
	(frame-locals-for-emacs): Use to-line.

2008-08-22  Helmut Eller  <heller@common-lisp.net>

	In backtraces, escape newlines in strings as \n.

	* swank.lisp (*backtrace-pprint-dispatch-table*): New.
	(*backtrace-printer-bindings*): Use it.

2008-08-22  Stas Boukarev <stassats@gmail.com>

	* metering.lisp: Add deftypes for time-type and cons-type, which
	are not defined in newer versions of CCL.

2008-08-22  Stelian Ionescu <sionescu@common-lisp.net>

	* swank-ecl.lisp: Add a few EVAL-WHENs to fix compilation.

2008-08-22  Helmut Eller  <heller@common-lisp.net>

	Collect most of the inspector state in a structure.
	Truncate the printer output more aggressively.

	* swank.lisp (inspector-state): New structure.
	(*istate*): New variable holds the current state.
	(inspect-object, inspector-content, inspector-nth-part)
	(inspector-range, inspector-call-nth-action, describe-inspectee):
	Use it.
	(inspector-pop, inspector-next): Implemented forward/backward a
	bit differently.
	(emacs-inspect/printer-bindings, istate>elisp): New functions.
	(to-line, truncate-string): New functions.

2008-08-22  Tobias C. Rittweiler  <tcr@freebits.de>

	Compiling a file `let*.lisp' on SBCL via C-c C-k resulted in an
	error, because it parsed the asterisk to a wild pathname. Fix
	that.

	* swank-backend.lisp (definterface parse-emacs-filename): New.
	PARSE-NAMESTRING by default.

	* swank-sbcl.lisp (defimplementation parse-emacs-filename): Use
	SB-EXT:PARSE-NATIVE-NAMESTRING.

	* swank.lisp (compile-file-for-emacs): Use PARSE-EMACS-FILENAME.
	(compile-file-if-needed): Ditto.
	(load-file): Ditto.
	(swank-require): Ditto.

2008-08-18  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (install-fd-handler): Bind *emacs-connection* with
	with-connection, for case when the signal hander is called out of
	the blue.
	(swank-debugger-hook): Don't assume that the hook argument is
	#'swank-debugger-hook itself.

	* test.sh (usage): Use cat rather not echo for here-documents.

2008-08-17  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-inspector-show-source): New command.
	(slime-inspector-mode-map): Bind it to ".".
	(sldb-highlight-sexp): Use slime-flash-region rather than a
	permanent overlay.
	(slime-popup-buffer-quit): Must call bury-buffer without argument.

	* swank.lisp (find-source-location-for-emacs): New function.

	* slime.el (slime-add-local-hook): Renamed from add-local-hook.
	(slime-switch-to-output-buffer): Drop the connection argument.  It
	was never used.
	(slime-switch-to-output-buffer-search-all-frames): Deleted. Use
	display-buffer-reuse-frames instead.
	(slime-switch-to-output-buffer): Use pop-to-buffer to select the
	window and frame.

2008-08-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-switch-to-output-buffer): Fix regression
	discovered by Ariel Badichi. Programmatic invocation of this
	function expect this function to also set-buffer to the REPL
	buffer. Even though that's ugly, we do it for now, and declare it
	to be a FIXME.
	(slime-dispatch-event): Don't use `message' for the pipelined
	request message, but `slime-display-oneliner' which will truncate
	the form to be displayed.

2008-08-17  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (waitpid): Don't use unix::pid-t, it's only
	defined for Linux.

	* swank-sbcl.lisp (sb-thread::get-foreground): Don't override.
	Let SBCL people fix this.

2008-08-17  B.Scott Michel  <scooter.phd@gmail.com>

	* swank-loader.lisp (dump-image): Move this function to the end of
	the file to stop SBCL from reporting two times the same false
	alarm.

2008-08-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-popup-buffer-quit): Fix regression; we have to
	invoke `bury-buffer' without an argument to make it switch buffers
	for us (for the case when the snapshot wasn't restored.)

2008-08-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-list-compiler-notes): Only shrink if notes tree
	isn't displayed as being collapsed.

2008-08-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-popup-buffer-quit): If not kill, then at least
	bury the buffer.
	(slime-list-compiler-notes): Shrink the compiler-notes window.

2008-08-14  Tobias C. Rittweiler  <tcr@freebits.de>

	If another frame is already displaying a REPL, `C-c C-z' will now
	select this window instead of splitting the current frame, and
	displaying the REPL in the newly created window.

	* slime.el (slime-switch-to-output-buffer-search-all-frames): New
	variable to customize this behaviour, as it may not be optimal for
	people using multiple screens at once.
	(slime-switch-to-output-buffer): Adapted accordingly.

2008-08-14  Tobias C. Rittweiler  <tcr@freebits.de>

	Xref buffers: `M-,' in an Xref buffer will now revert to an Emacs
	state as of before the Xref command.

	* slime.el (slime-xref-mode-map): Add `slime-xref-retract' as `M-,'
	(slime-xref-retract): New. Restores the emacs snapshot unconditionally.
	(slime-xref-quit): Use it.

2008-08-14  Tobias C. Rittweiler  <tcr@freebits.de>

	Xref buffers: `q', and `SPC' will push onto the find-definition
	stack such that M-, will work afterwards.

	* slime.el (defstruct slime-emacs-snapshot): Also save the point
	explicitly.  It is implicitly stored already in the
	window-configuration, but inaccessible therein.
	(slime-current-emacs-snapshot, slime-set-emacs-snapshot): Adapted.
	(slime-push-definition-stack-from-snapshot): New. Reason for above
	changes.

	(slime-with-popup-buffer): Make sure that the current
	emacs-snapshot is taken, not only when the :emacs-snapshot
	argument is NIL at expansion time, but also on runtime.

	(slime-with-xref-buffer): The name of the Xref buffer was created
	at expansion time, but must be computed at runtime. Fix that.
	(slime-xref-quit): Use `slime-push-definition-stack-from-snapshot'
	(sime-xref-goto): Adapted to also push onto the stack.

	* slime.el (slime-compute-modeline-package): Cleaned up.
	(slime-update-modeline-string): Ditto.

2008-08-12  Helmut Eller  <heller@common-lisp.net>

	Add a dump-image function to the loader.

	* swank-loader.lisp (dump-image): New.

	* swank-backend.lisp (save-image): New interface.

	* swank-cmucl.lisp, swank-clisp.lisp, swank-sbcl.lisp
	(save-image): Implemented.

2008-08-12  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-send-input): Disable modification hooks
	when marking old input.
	(slime-check-version): Use y-or-n-p.

2008-08-12  Helmut Eller  <heller@common-lisp.net>

	Finally handle reader-errors without disconnecting.

	* swank.lisp (decode-message): Convert reader-error conditions
	into :reader-error events.
	(dispatch-event): Send :reader-error events to Emacs.

	* slime.el (slime-dispatch-event): Display reader-errors.

2008-08-12  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (with-buffer-syntax): Take package as argument.
	(defslimefun): Derive the package for exporting from the symbol.

2008-08-12  Helmut Eller  <heller@common-lisp.net>

	Let SIGINT create a synthetic event.

	* swank.lisp (install-fd-handler,simple-serve-requests): Dispatch
	a :emacs-interrupt event in the SIGINT handler.

	* slime.el (slime-interrupt): Send nothing over the wire when
	SIGINT is used.

2008-08-11  Helmut Eller  <heller@common-lisp.net>

	* test.sh: Use batch mode by default.

2008-08-11  Helmut Eller  <heller@common-lisp.net>

	Improve interrupt safety for single-threaded lisps.

	* slime.el (slime-interrupt): Send a :emacs-interrupt message
	together with SIGINT.  SIGINT now means "check for new events"
	instead of "invoke the debugger".

	* swank-backend.lisp (install-sigint-handler)
	(call-with-user-break-handler): New functions.

	* swank.lisp (simple-serve-requests,install-fd-handler): Use it.
	(read-packet): New function. Check for interrupts.
	(decode-message): Use it.
	(wait-for-event/event-loop): Check for interrupts.

2008-08-11  Helmut Eller  <heller@common-lisp.net>

	* swank-abcl.lisp (preferred-communication-style): Return nil
	until we implement receive-if.

	* swank-openmcl.lisp (receive-if): Support timeout argument.
	* swank-allegro.lisp (receive-if): Ditto.

2008-08-11  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*global-debugger*): Change default back to t.

2008-08-10  Helmut Eller  <heller@common-lisp.net>

	* swank-ecl.lisp (thread-id): Assign an non-nil id to unknown
	threads.

	* slime.el (slime-execute-tests): Call slime-test-should-fail-p
	before executing the test (which may close the connection).
	(def-slime-test): Use slime-sync-to-top-level with a timeout.
	(slime-temp-directory): New function.
	(slime-run-tests): Save repl-history in /tmp.
	(slime-repl-mode): Ignore persistent history if
	slime-repl-history-file is nil.
	(slime-quit-lisp-internal): New function.
	(slime-quit-lisp, slime-restart-inferior-lisp): Use it
	(slime-batch-test): Exit, if the Lisp isn't up and running after
	30 secs.

2008-08-10  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (wait-for-event): Add timeout argument.  This is used
	for :fd-handler and :sigio style where we only process events as
	long as we don't block.
	(wait-for-event/event-loop, read-event)
	(decode-message, receive-if): Ditto.
	(process-requests): Renamed from read-from-emacs.
	(handle-requests): Renamed from handle-request. Take timeout
	argument.  Update callers.
	(process-available-input): Deleted.
	(with-swank-error-handler): Renamed from
	with-reader-error-handler.
	(with-connection): Use it.

2008-08-10  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (invoke-slime-debugger): New function.
	Analagous to cl:invoke-debugger.
	(swank-debugger-hook): Use it.

2008-08-09  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-quit-lisp): Optionally send kill signal.
	(slime-quit-connection-at-point): Disconnect after some timeout.

2008-08-09  Helmut Eller  <heller@common-lisp.net>

	Fixes for heap dumping.

	* swank.lisp (*log-output*): Don't initialize at load-time,
	otherwise the stream would end up in a heap image.

2008-08-09  Helmut Eller  <heller@common-lisp.net>

	* swank-lispworks.lisp (defimplementation): Record location.

2008-08-09  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*maximum-pipelined-output-chunks*): New variable

2008-08-09  Helmut Eller  <heller@common-lisp.net>

	Display the "Use default debugger" restart more prominently
	for testing.

	* swank.lisp (swank-debugger-hook): Bind a user visible restart
	to invoke the native debugger.
	(*global-debugger*): Make this nil by default.
	(sldb-loop): Minor cleanups.
	(sldb-break-with-default-debugger): Invoke the native debugger
	on top of the slime debugger.

	* slime.el (slime-simple-completions): Bind slime-current-thread
	to t so that completion is peformed in a fresh thread.
	(sldb-setup): Always pop to the debugger buffer.
	(sldb-activate): Optionally select the window.

	* swank-sbcl.lisp (sb-thread::get-foreground): Override this
	as the default implementation is unusable for Slime.

	* swank-lispworks.lisp (environment-display-notifier): Just
	return t.

2008-08-09  Helmut Eller  <heller@common-lisp.net>

	* swank-lispworks.lisp (disassemble-frame): Implemented.

2008-08-09  Tobias C. Rittweiler  <tcr@freebits.de>

	M-x slime doesn't destroy the window layout anymore when you
	switch windows/frames while the connection is being set up.

	* slime.el (slime-hide-inferior-lisp-buffer): Search for the
	inferior-lisp buffer's window in all frames.
	(slime-repl-update-banner): Do not pop to the REPL buffer.

2008-08-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Fixing `q' in Xref buffers.

	(slime-popup-buffer-snapshot-unchanged-p): New.
	(slime-popup-buffer-restore-snapshot): New.
	(slime-xref-quit): Can't use slime-popup-buffer directly. Instead
	implement its own quit behaviour using the above functions.

2008-08-08  Helmut Eller  <heller@common-lisp.net>

	Use wait-for-event instead of catch/throw where needed.

	* swank.lisp (read-user-input-from-emacs, y-or-n-p-in-emacs)
	(eval-in-emacs): Use wait-for-event.
	(make-tag): Replaces intern-catch-tag.
	(take-input): Deleted.
	(dispatch-event): Remove some redundancy.

2008-08-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Make xref buffers use `slime-with-popup-buffer',
	nee `slime-with-temp-buffer'.

	(slime-with-xref-buffer): Rewritten using a popup buffer.
	(slime-init-xref-buffer): Removed.
	(slime-display-xref-buffer): Removed.

2008-08-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Rename slime's temp-buffer to popup-buffer.

2008-08-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-compiler-notes-mode, slime-connection-ist-mode):
	Add slime-temp-buffer-mode-map to docstring.

2008-08-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-connections-buffer-name): New variable.
	(slime-list-connections): Use it.
	(def-slime-selector ?c): Ditto

2008-08-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Make the threads browser use `slime-with-temp-buffer'.

	(slime-temp-buffer-quit-function): New buffer-local
	variable. Defaults to `slime-temp-buffer-quit'.
	(slime-temp-buffer-mode): `q' invokes above variable now.

	(slime-threads-buffer-name): New variable.
	(slime-list-threads): Use slime-with-temp-buffer.
	(slime-update-threads-buffer): New. Lifted from
	slime-list-threads.
	(slime-thread-quit): Renamed to slime-quit-threads-buffer.

2008-08-08  Helmut Eller  <heller@common-lisp.net>

	Unify event dispatching for single and multi-threaded cases.

	* swank.lisp (send-to-control-thread,read-from-control-thread)
	(send-to-socket-io,read-from-socket-io): Deleted.
	(send-event, read-event, send-to-emacs)
	(signal-interrupt, use-threads-p): New functions.
	And more random changes.

2008-08-08  Helmut Eller  <heller@common-lisp.net>

	Spawn the auto-flush thread in the front end.
	This removes some copy&paste code in various backends.

	* swank.lisp (auto-flush-loop): New function.
	(open-streams): Use it.
	* swank-backend.lisp (make-stream-interactive): Deleted.

2008-08-08  Helmut Eller  <heller@common-lisp.net>

	* slime.el (test disconnect): Call slime-inferior-process
	with explicit connection argument to avoid clashes with
	buffer-local connections.

2008-08-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-create-macroexpansion-buffer): Make fontifying
	case insensitive as the result from macroexpansion is most likely
	printed all upper-case.

2008-08-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-with-temp-buffer): By default, no longer inherit
	the current connection.

2008-08-07  Tobias C. Rittweiler  <tcr@freebits.de>

	Previously, M-p at the REPL deleted the input if no match could be
	found in the history. Now the input is untouched.

	* slime.el (slime-repl-history-replace): Ditch delete-at-end-p
	argument.
	(slime-repl-next-input, slime-repl-previous-input): Adapted.
	(slime-repl-forward-input, slime-repl-backward-input): Ditto.

2008-08-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-with-temp-buffer): Renamed from
	slime-with-output-to-temp-buffer.  Initialize the buffer local
	buffer variables before and after running BODY, so that we don't
	need the mode argument.

2008-08-07  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (def-slime-test narrowing): Adapted to recent changes
	of `slime-with-output-to-temp-buffer'.

2008-08-07  Tobias C. Rittweiler  <tcr@freebits.de>

	Mode-Line will now display a buffer's connection, and a buffer's
	package. Furthermore, stale connections will also be indicated.

	* slime.el: (slime-update-modeline-package): Renamed to
	`slime-extended-modeline'.
	(slime-modeline-string),
	(slime-modeline-connection-name),
	(slime-modeline-connection-state): New variables.
	(slime-update-modeline-package): Renamed to
	`slime-compute-modeline-package'.
	(slime-compute-modeline-connection): New.
	(sime-compute-modeline-connection-state): New.
	(slime-compute-modeline-string): New.
	(slime-update-modeline-string): New.
	(slime-shall-we-update-modeline-p): New.
	(slime-update-modeline): New. Run periodically by idle timer.

	(slime-mode, slime-temp-buffer-mode): Install extended mode-line.

	(slime-stale-connection-p, slime-debugged-connection-p): New.
	(slime-compute-connection-state): New.
	(slime-connection-state-as-string): New.
	(slime-state-name): Removed.
	(slime-set-state): Removed.

	(slime-length>): Fix typecase.

2008-08-07  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp, swank-cmucl.lisp,
	swank-scl.lisp (receive-if): Periodically check for interrupts.

2008-08-06  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (handle-notification-condition): resignal
	warnings as-is before replacing with COMPILER-CONDITION so that
	handlers higher up the stack can muffle them should they choose
	to. This silences redefinition warnings for definitions inside
	EVAL-WHEN :COMPILE-TOPLEVEL in newish SBCLs when compiling the
	file for a second time.
	(call-with-compilation-hooks): STYLE-WARNINGs are WARNINGs, and
	don't need a separate handler.

2008-08-06  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (short-backtrace): New function.
	(thread-description): Use it.

	* slime.el (slime-show-apropos): Use lisp-syntax-table to make
	M-. more useful.

2008-08-06  Helmut Eller  <heller@common-lisp.net>

	Queue interrupts in various places.

	* swank-backend.lisp (*pending-slime-interrupts*): New variable.
	(check-slime-interrupts): New function.

	* swank-lispworks.lisp (receive-if): Use it.

	* swank-sbcl.lisp, swank-openmcl.lisp: Ditto.

	* swank.lisp (*slime-interrupts-enabled*): New variable.
	(with-slime-interrupts, without-slime-interrupts): New macros.
	(invoke-or-queue-interrupt): New function.
	(interrupt-worker-thread, eval-for-emacs, swank-debugger-hook)
	(debug-nth-thread, wait-for-event, read-from-emacs): Use them.

2008-08-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-with-output-to-temp-buffer): Make sure that we
	don't make the wrong buffer read-only.

	* swank-lispworks.lisp (make-stream-interactive): Run our own
	thread to periodically flush streams instead of relying on
	soft-force-output.

	* swank.lisp (encode-message): Inhibit interrupts
	while writing the length and the body.

	* swank-backend.lisp (make-recursive-lock)
	(call-with-recursive-lock-held): Deleted.  Make the default locks
	"recursive" instead.
	(thread-id): Add a default implementation which works
	with the default implementation of current-thread.

	* swank-gray.lisp (stream-write-string): New method.

	* swank-backend.lisp (*gray-stream-symbols*): Include
	write-string.

2008-08-04  Helmut Eller  <heller@common-lisp.net>

	* swank-gray.lisp (slime-output-stream): Undo last change.
	Make force-output and finish-output do the same.

2008-08-04  Masayuki Onjo  <masayuki.onjo@gmail.com>

	Updates for CLISP-2.46.

	* swank-clisp.lisp (fspec-pathname, fspec-location): The structure
	of (documentation symbol 'sys::file) used to be (path . lines)
	but is now ((type path . lines) ...).

2008-08-04  Helmut Eller  <heller@common-lisp.net>

	* swank-gray.lisp (slime-output-stream): Add a slot
	"interactive-p" which should be true for streams which are flushed
	periodically by the Lisp system.  Update the relevant backends
	accordingly.

	* swank-scl.lisp (receive-if): Implemented.

	* swank-cmucl.lisp (receive,receive-if): Test for new messages in
	a loop.

	* swank.lisp (eval-for-emacs): Don't flush streams here as that
	may now block.

	* swank-lispworks.lisp (receive-if): Handle interrupts.

	* slime.el (slime-repl-clear-buffer): Delete stuff after the
	prompt too.
	(slime-with-output-to-temp-buffer): Add read-only argument.
	(slime-temp-buffer): Renamed from slime-get-temp-buffer-create.
	Drop noselect argument.

2008-08-03  Helmut Eller  <heller@common-lisp.net>

	Add some flow-control.

	* swank.lisp (make-output-function): Synchronize with Emacs on
	every 100th chunk of output.
	(wait-for-event,wait-for-event/event-loop,event-match-p): New
	functions.  Used to selectively wait for some events and to queue
	the other events.
	(dispatch-event, read-from-socket-io): Tag non-queueable events
	with :call.
	(read-from-control-thread, read-from-emacs): Process
	:call events only; enqueue the others.

	(*log-output*): Don't use synonym-streams here.  Dereference the
	symbol until we get at the real stream.
	(log-event): Escape non-ascii characters more carefully.

	* swank-backend.lisp (receive-if): New function.
	Update backends accordingly. (not yet for ABCL and SCL)

	* slime.el (slime-dispatch-event): Handle ping event.

2008-08-03  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Make code related to temp buffers more consistent.

	(slime-with-output-to-temp-buffer): Docstring update. New keyarg
	:connection to specify whether the current connection should be
	stored buffer-locally. New key arg :emacs-snapshot to explicitly
	pass the snapshot to be stored. The created buffer is not
	automatically set to slime-mode anymore.
	(slime-temp-buffer-mode): Add `C-c C-z', and `M-.' bindings to all
	temp buffers.

	(slime-list-compiler-notes): Use `slime-with-output-to-...',
	rename the buffer from "*compiler notes*" to "*SLIME
	Compiler-Notes*".
	(slime-compiler-notes-mode-map): Remove explicit binding of "q",
	as it's inherited from the temp buffer.
	(slime-edit-value-callback): Use `slime-with-output-to-...'.
	(slime-show-apropos): Adapted to above changes.
	(slime-macroexpansion-minor-mode): Removed "q" binding, as it's
	inherited.
	(slime-eval-macroexpand): Adapted. Rename buffer from "*SLIME
	macroexpansion*" to "*SLIME Macroexpansion*".
	(slime-list-connections): Use `slime-with-output-to-...', rename
	buffer from "*SLIME connections*" to "*SLIME Connections*".

2008-07-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (make-slime-buffer-location): New.
	(make-slime-file-location): New.

2008-07-29  Richard M Kreuter  <kreuter@progn.net>

	Environment variables for Lisp process.

	* slime.el (slime-start, slime-maybe-start-lisp)
	(slime-reinitialize-inferior-lisp-p, slime-start-lisp)
	(slime-restart-sentinel): Pass new parameter "env" through.

2008-07-29  Richard M Kreuter  <kreuter@progn.net>

	* swank-sbcl.lisp (add-sigio-handler, add-fd-handler): Be quiet
	as a workaround for non-properly initialized *debug-io*.

2008-07-29  Richard M Kreuter  <kreuter@progn.net>

	Fix slime-quit-lisp in non-default REPL buffer.

	* slime.el (slime-quit-lisp): Killing the REPL buffer also removes
	the buffer local binding of slime-buffer-connection.  Remember the
	connection before killing the buffer.

2008-07-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (swank-compiler): Fix bug when invoking an abort
	restart on a failed compilation attempt.

	* swank-sbcl.lisp (swank-compile-string): If a compilation attempt
	fails, COMPILE-FILE returns NIL which we tried to LOAD. Fix that.

	* swank-backend.lisp (swank-compile-string, swank-compile-file):
	Document return value.

2008-07-23  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-loader.lisp (*contribs*): Added `swank-package-fu'.

2008-07-23  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-at-list-p): New. Returns t if point is at a list.
	(slime-at-expression-p): New. Similiar to `slime-in-expression-p'.
	(slime-end-of-list): New. Pendant to `slime-beginning-of-list'.

2008-07-19  Tobias C. Rittweiler  <tcr@freebits.de>

	REPL shortcuts now leave an appropriate Common Lisp form in the
	REPL history.

	* slime.el (slime-within-repl-shortcut-handler-p): New global. T
	if truly inside a repl shortcut handler invoked by ,foo on the
	REPL.
	(slime-handle-repl-shortcut): Bind above global appropriatly.
	(slime-repl-shortcut-eval): New; should be used in repl shortcut
	handlers instead of `slime-eval'.
	(slime-repl-shortcut-eval-async): New; should be used in repl
	shortcut handlers instead of `slime-eval-async'.
	(defslime-repl-shortcut): Update docstring.
	(slime-repl-set-package): Use slime-repl-shortcut-eval.
	(slime-set-default-directory): Ditto.
	(slime-sync-package-and-default-directory): Ditto.

2008-07-18  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-recompile-locations): Locations were potentially
	recompiled within a wrong package. Fix that.

2008-07-18  Tobias C. Rittweiler  <tcr@freebits.de>

	An explicit numeric value as prefix-arg given to `C-c C-c' will
	now represent the debug level the defun is compiled with;
	`C-u C-c C-c' defaults to maximum debug like before. (Now also
	works for recompilation commands in xref buffers.)

	* slime.el (slime-compilation-debug-level): Renamed from
	`slime-compile-with-maximum-debug'.
	(slime-normalize-optimization-level): New.
	(slime-compile-defun): Adapted accordingly.
	(slime-compile-region): Ditto.
	(slime-recompile-location): Added setting of debug-level.
	(slime-recompile-locations): Ditto.
	(slime-recompile-xref): Now takes debug-level prefix-arg.
	(slime-recompile-all-xrefs): Ditto.

	* swank-sbcl.lisp (defimplementation swank-compile-string):
	Adapted accordingly.

2008-07-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-xref-dspec-at-point): Make more robust.
	(slime-xref-insert-recompilation-flags): Ditto.
	(slime-column-max): New.

2008-07-16  Tobias C. Rittweiler  <tcr@freebits.de>

	Recompilation support added to xref buffers. You can now use
	`C-c C-c' in an xref buffer to recompile the defun represented by
	the xref at point. Similiarly, you can use `C-c C-k' to recompile
	all xrefs displayed.

	For example, if you've changed a macro, and want to recompile all
	the functions in the image which use that macro, you first call
	`slime-who-macroexpands' (C-c C-w RET), and then issues `C-c C-k'
	in the xref buffer that just popped up.

	[There's no guarantee that this will actually recompile all
	functions that depend on the changed macro, as this obviously
	depends on the quality of the backend's WHO-MACROEXPANDS
	implementation.]

	* swank.lisp: Introduced the notion of a SWANK-COMPILATION-UNIT,
	so we're able to compile different stuff comming from Slime one
	after the other, and have compiler notes &c. collected in a
	contiguous manner.

	(defstruct :swank-compilation-unit): New. Contains compilation
	notes, compilation results, etc.
	(*swank-compilation-unit*): New. Current Swank Compilation Unit.
	(with-swank-compilation-unit): New. Like WITH-COMPILATION-UNIT.
	(swank-compilation-unit-for-emacs): New.
	(swank-compiler): Adapted; collect compilation stuff into the
	current swank-compilation-unit.
	(compile-string-for-emacs): Use WITH-SWANK-COMPILATION-UNIT.
	(compile-file-for-emacs): Ditto.

	(*compiler-notes*, clear-compiler-notes): Removed.
	(compiler-notes-for-emacs): Removed.

	* slime.el (slime-compilation-unit, slime-last-compilation-unit),
	(slime-compiler-notes, slime-compiler-results): New/Adapted.

	(slime-make-compile-expression-for-swank): Factored out from
	`slime-compile-string'.
	(slime-recompile-location): New.
	(slime-recompile-locations): New.
	(slime-pop-to-location): &optional `where' arg can now also be
	'excursion to only reset the current-buffer, but not switch.

	(slime-xref-mode-map): Add `C-c C-c' and `C-c C-k'.
	(slime-xref-dspec-at-point): New.
	(slime-all-xrefs): New.
	(slime-recompile-xref): New.
	(slime-recompile-all-xrefs): New.
	(slime-make-xref-recompilation-cont): New.
	(slime-xref-inert-recompilation-flags): New.

	(slime-trim-whitespace): New utility.

2008-07-05  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Revert Melis' change from 2008-07-04; Global IO
	redirection seems currently to be broken, and while it's not due
	to that commit (it seems that it's been broken since longer), I
	want to be on a safe bet.

2008-07-05  Tobias C. Rittweiler  <tcr@freebits.de>

	`M-x slime-lisp-threads' will now contain a summary of what's
	currently executed in a thread that was created by Swank.

	* swank-backend.lisp (thread-description, set-thread-description):
	New interface functions to associate strings with threads.
	* swank-sbcl.lisp (thread-description, set-thread-description):
	Implemented.

	* swank.lisp (call-with-thread-description),
	(with-thread-description): New.
	(read-from-emacs): Now temporarily sets the thread-description of
	the current thread to a summary of what's going to be executed by
	the current request.
	(defslimefun list-threads): Changed return value to also contain
	a thread's description.

	* slime.el (slime-list-threads, slime-thread-insert): Adapted to
	new return value of LIST-THREADS.

2008-07-04  Gábor Melis  <mega@retes.hu>

	* swank.lisp (call-with-redirected-io): Rebind only standard
	streams if *GLOBALLY-REDIRECT-IO*. Fixes lost output after
	disconnect, reconnect.

2008-07-04  Willem Broekema  <metawilm@gmail.com>

	* slime-allegro.lisp (fspec-definition-locations): Workaround for
	the issue that Allegro does not record the source file location
	for methods defined inside a defgeneric form. The idea is that if
	the source location of a method is not found, then the defgeneric
	form is almost certainly the right place.

2008-07-04  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-call-defun): Properly signal error message when
	used in a context that is not a function definition.

2008-07-04  Richard M Kreuter  <kreuter@progn.net>

	* swank-sbcl.lisp (code-location-source-location),
	(code-location-debug-source-name): Patched for incompatible
	structure change in SBCL 1.0.18.10.

2008-07-04  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-call-defun): Broken on DEFMETHOD forms. Fix
	that. Also, don't insert package qualifier anymore if the inserted
	qualifier is the same as the current REPL package.

2008-07-02  Martin Simmons  <martin@lispworks.com>
	* swank-lispworks.lisp (install-debugger-globally): hook into the
	environment globally to catch BREAK.

2008-06-07  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (def-slime-test find-definition.2, arglist):
	SWANK:COMPILE-STRING-FOR-EMACS since recently takes 5 instead of 4
	parameters. Fix that.

2008-06-07  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-extract-context, slime-parse-context): Recognize
	more toplevel forms, e.g. DEFINE-COMPILER-MACRO &c. Such that
	`slime-parse-toplevel-form' will also recognize these.
	(slime-trace-query): Adapted to above changes. Errors if spec is
	untraceable.
	(slime-call-defun): Adapted to also support the new toplevel forms.

	(slime-cl-symbol-name),
	(slime-cl-symbol-package),
	(slime-qualify-cl-symbol-name): Resurrected from the `slime-parse'
	contrib, as they've been used by `slime-call-defun'.

2008-06-02  Raymond Toy  <toy.raymond@gmail.com>

	Unicode support for CMUCL.

	* swank-cmucl.lisp (accept-connection, make-socket-io-stream):
	Handle external-format argument.
	(find-external-format): Implemented.
	(*external-format-to-coding-system*): New variable.

2008-05-19  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp: Don't require asdf.

2008-05-19  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (swank-compile-string): Add reader-conditionals
	for sb-ext::restrict-compiler-policy.

2008-05-19  Geo Carncross  <geocar@gmail.com>

	* contrib/swank-asdf.lisp: Require asdf.

2008-05-17  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-prin1-to-string): Bind print-length and
	print-level.

2008-05-17  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-inspector-limit): New variable.
	(slime-inspector-insert-content): Use it.
	(slime-inspector-fetch-chunk, slime-inspector-fetch)
	(slime-inspector-next-range, slime-inspector-join-chunks): New.

2008-05-08  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp (call-with-debugging-environment)
	(frame-decode-env): Bugfix: qualify fixnump

2008-05-01  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp (call-with-debugging-environment)
	(is-ignorable-fun-p, is-swank-source-p, in-swank-package-p):
	Trim swank sources from the ECL backtrace.

2008-04-30  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp (call-with-debugging-environment)
	(in-swank-package-p): Remove frames from the backtrace that are
	in a swank package as those are misleading. Fixup locals
	display.

2008-04-29  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp: Backtrace and frame/eval improvements

2008-04-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp: Clarified docstrings of interface functions
	in the Debugging section.

2008-04-23  Geo Carncross  <geocar@gmail.com>

	* swank-source-file-cache.lisp (skip-comments-and-whitespace):
	Include #\Page as whitespace

	* swank-ecl.lisp (find-source-location): Initial support for
	find-source-location with functions
	(flush-streams): Workaround differences in different ECL versions
	(find-definitions): basic/simple implementation of find-definitions

	* swank-loader.lisp (*sysdep-files*): Include swank-source-path-parser
	and swank-source-file-cache for ECL


2008-04-17  Travis Cross  <travis@travislists.com>

	* swank.asd: Don't make a compile-op a no-op so that a
	swank-loader.fasl file gets generated and (require 'swank) can be
	called multiple times.

2008-04-17  Zach Beane  <xach@xach.com>

	C-c C-c with prefix args now uses the maximal debug level.
	Only implemented for SBCL.

	* slime.el (slime-compile-with-maximum-debug): New variable.
	(slime-compile-defun, slime-compile-region): Use it.

	* swank.lisp (compile-string-for-emacs): Accept new debug
	argument. Update backend accordingly.

2008-04-17  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-set-default-directory): Send absolute filenames.

2008-04-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-edit-definition): The `slime-edit-definition-hooks'
	are now invoked with the same args as `slime-edit-definition'.

2008-03-27  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp (map-error-database): Make mapping work for
	LispWorks 5.1 too.

2008-03-26  Tobias C. Rittweiler  <tcr@freebits.de>

	On SBCL,

	  (block outta
	    (let ((*debugger-hook* #'(lambda (c hook)
				       (declare (ignore hook))
				       (return-from outta 42))))
	      (error "FOO")))

	would just silently skip over the *DEBUGGER-HOOK*, and pop right
	into SLDB to handle the error. Fix that.

	* swank-sbcl (make-invoke-debugger-hook): New function; returns a
	hook for SB-EXT:*INVOKE-DEBUGGER-HOOK* that checks for the
	presence of *DEBUGGER-HOOK*, and calls that if available.
	(install-debugger-globally): Use it.
	(call-with-debugger-hook): Ditto.

	(getpid): Declaim return type explicitly, to make SBCL shut up about
	being unable to optimize %SAP-ALIEN in ENABLE-SIGIO-ON-FD.

	* slime.el (def-slime-test break): Test additionally that BREAK
	turns into SLDB even when *DEBUGGER-HOOK* is locally bound.
	(def-slime-test locally-bound-debugger-hook): New test case; tests
	that a locally-bound *DEBUGGER-HOOK* is adhered, and not skipped.

2008-03-26  Helmut Eller  <heller@common-lisp.net>

	By default, don't ask if SLIME should be started.

	* slime.el (slime-auto-connect): New variable.
	(slime-auto-connect): New function.
	(slime-connection): Use it.

2008-03-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-check-version): New function.  Make the
	prompt fit in a single line.

	* swank-loader.lisp (load-swank): Call swank::before-init.

	* swank.lisp (before-init): New function.
	(init): Renamed from setup.

2008-03-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* HACKING: Updated due to broken links.
	Reported by Mirko Vukovic.

2008-03-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-set-connection-info): Display SLIME and SWANK
	versions explicitly in Protocol Mismatch message.  Adapted from
	idea and patch by Jeronimo Pellegrini.

2008-03-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-source-path-parser.lisp

	The source parser READs in files, and if such a file contains some
	nasty #. hackery that results in an error being signalled, M-. would
	fail on anything that's defined in those files. Fix that by using
	a special #. reader function that invokes the original #. reader
	with an IGNORE-ERRORS wrapped around.

	(make-sharpdot-reader): New function.
	(make-source-recording-readtable): Use it and install it on #.

	* slime.el (find-definition.2): New test case to guard against it.

2008-03-18  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp: ECL moved gray streams into GRAY package.

2008-03-18  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-xref-group): Handle :zip files.

2008-03-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-source-path-parser.lisp:

	Multibyte characters in files could screw up compiler-notes
	highlighting on SBCL. Fix that.

	(skip-toplevel-forms): Abstracted out from READ-SOURCE-FORM.
	(source-path-file-position): Don't operate on the file stream
	directly, since CL:FILE-POSITION may not return character but
	binary offsets on such streams; instead slurp file content into a
	buffer string, and operate on that.

2008-03-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (load-file-set-package): Removed; the function was
	only used in `slime-load-file-set-package' which invokes
	`slime-repl-set-package' which set the package for a second time.

	* slime.lisp (slime-load-file-set-package): Don't call
	SWANK:LOAD-FILE-SET-PACKAGE, but merely call SWANK:LOAD-FILE,
	then invoke `slime-repl-set-package' which will set the package.

	(slime-pretty-find-buffer-package): Removed. (Nowhere used.)
	(slime-set-package): Ditto.

2008-03-14  Helmut Eller  <heller@common-lisp.net>

	Remove some rarely used code.

	* slime.el (with-lexical-bindings): Removed.  Updated callers
	accordingly.
	(slime-make-default-connection, slime-choose-connection)
	(slime-find-connection-by-name, slime-symbol-at-point): Remove.
	Unused code.
	(slime-obsolete-commands, slime-bind-obsolete-commands)
	(slime-bind-obsolete-command, slime-upgrade-notice)
	(slime-timebomb, slime-timebomb-progress, slime-timebomb-message):
	Remove.  Obsolete.

2008-03-14  Helmut Eller  <heller@common-lisp.net>

	Move filename translation code to contrib.

	* slime.el (slime-find-filename-translators)
	(slime-filename-translations): Move to contrib/slime-tramp.el.
	(slime-to-lisp-filename-function)
	(slime-from-lisp-filename-function): New variables.

2008-03-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-return-behaviour): Deleted.  Rebind
	the key if you don't like what the command does.

2008-03-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (classify-symbol, symbol-classification->string): Add
	classification of symbols denoting type specifier, and denoting
	constants.

2008-03-13  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-eval-macroexpand): Indent expansion.

2008-03-13  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-edit-definition-cont): If no definition could
	be found, print also the package name in the error message where
	the definition was tried to be found in.

2008-03-13  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-region-for-defun-function): Deleted.
	(slime-region-for-defun-at-point): Use beginning-of-defun
	and not beginning-of-sexp.
	(slime-flash-region): New function.
	(slime-compile-region): Use it.

2008-03-13  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-xref-group): Renamed from slime-location-to-string.
	Handle source-form locations.

2008-03-12  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-find-definitions-function): Renamed from
	slime-edit-definition-fallback-function.
	(slime-find-definitions): Use it.
	(slime-find-tag-if-tags-table-visited): Deleted.

2008-03-12  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-inspector-operate-on-point): Signal an error if
	there is no object to operate on.

2008-03-08  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-toggle-details): Inhibit point-motion-hooks.
	This is a workaround for problems with the --more-- field.

2008-03-07  Helmut Eller  <heller@common-lisp.net>

	Be GC friendlier when parsing net packets.

	* slime.el (slime-net-read): Instead of consing a fresh string,
	use narrow-to-region and read the packet out of the buffer.

2008-03-04  Helmut Eller  <heller@common-lisp.net>

	* test.sh: Updated for Emacs 23.

2008-03-04  Andreas Fuchs  <asf@boinkor.net>

	* swank.asd (asdf:output-files, asdf:perform): Make compile-op on
	swank-loader-file a noop.

2008-03-02  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-edit-definition-hooks): This variable can be
	used to hook into the M-. machinery.
	(slime-edit-definition): Run above hooks until one succeeds. By
	default, try to find a definition for the symbol at point.

2008-02-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (find-definition-for-thing): New DEFSLIMEFUN.

	* swank-backend (find-source-location): New DEFINTERFACE.

	* swank-sbcl (find-source-location): Implement it.

	* slime.el (slime-edit-definition-cont): Use `slime-length='.

2008-02-28  Tobias C. Rittweiler  <tcr@freebits.de>

	Fix regressions in the `find-definition' test case on SBCL:

	M-. on e.g. SWANK::READ-FROM-EMACS would bring the user to

	  (|defun read-from-emacs ...)

	and not

	  |(defun read-from-emacs ...)

	* swank-sbcl.lisp (source-file-position): Don't 1+ the returned
	position; i.e. return a position usable as a CL /file position/
	which start from 0, and not a position usable in Emacs where
	buffer points start from 1. This is important because the return
	value is passed to SWANK-BACKEND::READ-SNIPPET which invokes
	CL:FILE-POSITION on it.
	(make-definition-source-location): Adapted to 1+ the position
	passed to Emacs, to reflect above change.

2008-02-25  Helmut Eller  <heller@common-lisp.net>

	Make it easier to prepare core-files.

	* swank-loader.lisp (init): Two new keyword args: :SETUP and
	:LOAD-CONTRIBS.  :SETUP=nil can be used to suppress init hooks and
	loading user init files.

	* swank.asd: Call swank-loader:init with :SETUP=nil.

	* swank.lisp (init-global-stream-redirection): Guard against
	redirecting already redirected streams.

2008-02-24  Helmut Eller  <heller@common-lisp.net>

	Work harder to avoid wrong guesses for slime-repl-set-package.

	* slime.el (slime-repl-set-package): Use slime-pretty-package-name
	to strip double quotes from slime-current-package before comparing
	it with slime-lisp-package.  Still doesn't deal with nicknames and
	other reader tricks.

2008-02-23  Ariel Badichi  <abadichi@bezeqint.net>

	Allow ED-IN-EMACS to edit new files.

	* swank.lisp (ed-in-emacs): Accept non-existing files.
	(canonicalize-filename): Merged into ed-in-emacs.

2008-02-23  Nikodemus Siivola  <nikodemus@random-state.net>

	If there is no connection, offer the option to start SLIME.

	* slime.el (slime-connection): Ask and maybe start SLIME.
	(slime-selector-method: ?r): No need to ask here any more.

2008-02-23  Helmut Eller  <heller@common-lisp.net>

	In the inspector, show one-element lists as list not as pair.

	* swank.lisp (emacs-inspect cons)

2008-02-23  Zach Beane  <xach@xach.com>

	Add customization variable for the `slime-connect' port.

	* slime.el (slime-port): New variable.

2008-02-22  Mark Evenson  <mark.evenson@gmx.at>

	* swank-abcl.lisp (getpid): Return '0' in case of error.
	Apparently needed bacause $PPID isn't not a standard feature.
	"[T]his is not a disentanglement from, but a progressive knotting
	into."

2008-02-22  Mark Harig  <idirectscm@aim.com>

	Fix typos: "contribs" -> "contrib".

	* slime-autoloads.el (slime-setup-contribs):
	* slime.el (slime-setup):

2008-02-22  Mark Harig  <idirectscm@aim.com>

	Fixes for CLISP 2.44.

	* swank-clisp.lisp (sldb-backtrace, %parse-stack-values):
	sys::frame-up-1 no longer exists; use sys::frame-up instead.

2008-02-22  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-pop-to-location): Slight cleanups.
	(slime-goto-xref, slime-goto-next-xref): Use it.

2008-02-22  Helmut Eller  <heller@common-lisp.net>

	Remove save-restriction-if-possible.

	* slime.el (save-restriction-if-possible): Deleted.  It was only
	used in one place.
	(slime-goto-source-location): Obey widen-automatically.
	(slime-location-offset): New function.

2008-02-21  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-location-to-string): New function.
	(slime-analyze-xrefs): Use it; display definitions defined
	interactively via C-c C-c as comming from #<buffer foo.lisp>
	instead of foo.lisp.

2008-02-20  Helmut Eller  <heller@common-lisp.net>

	Better factorization for M-. and xref commands.

	* slime.el (slime-xref): Renamed from slime-definition.
	(slime-location, slime-location-p): New ADT def.
	(slime-xref-has-location-p, slime-analyze-xrefs): New functions.
	This work used to be done on the Lisp side.
	(slime-pop-to-location): New function.
	(slime-edit-definition, slime-edit-definition-cont): Simplified.
	(slime-find-definitions): New function.
	(slime-goto-definition, slime-goto-definition-other-window)
	(slime-pop-to-other-window, slime-show-definitions): Deleted.
	(slime-insert-xrefs): Simplified.
	(slime-insert-xref-location): Deleted. No need to show the filename
	twice.

	* swank.lisp (find-definitions-for-emacs, xref): Use common
	representation for "definitions" and "xrefs".
	(xref>elisp): New helper.
	(group-xrefs, alistify, parition, location-position<, xref-position)
	(xref-buffer, location-valid-p): Deleted. This work is now done on
	the Emacs side.

2008-02-20  Helmut Eller  <heller@common-lisp.net>

	Emit a warning if the SWANK package already exists.

	* swank-loader.lisp (init): Issue a warning when SWANK will not be
	reloaded.

2008-02-18  Helmut Eller  <heller@common-lisp.net>

	Minor cleanups for inspector code.

	* swank.lisp (inspector-content, inspect-list-aux): Slight
	cleanups.

2008-02-17  Marco Baringer  <mb@bese.it>

	* swank.asd: Update for recent changes to swank-loader.lisp, we
	need to call swank-loader::init after loading.

2008-02-16  Helmut Eller  <heller@common-lisp.net>

	In the REPL, mark the trailing newline also as input.

	* slime.el (slime-repl-send-input): Mark the newline with
	the 'slime-repl-old-input property.
	(slime-repl-grab-old-input): Strip the newline.

2008-02-16  Helmut Eller  <heller@common-lisp.net>

	Split loading and initialization (again).

	* swank-loader.lisp (init): New.  Delete old packages only if
	explicitly requested.  Also, if the swank package already exists
	don't load swank again.
	(setup): New function.

	* swank.lisp (setup): New function.  Moved over here from
	swank-loader.lisp.

	* slime.el (slime-init-command): Call swank-loader:init.

2008-02-10  Helmut Eller  <heller@common-lisp.net>

	Remove remaining traces of make-default-inspector.

	* swank-scl.lisp (make-default-inspector, scl-inspector): Deleted.
	* swank-lispworks.lisp (make-default-inspector)
	(lispworks-inspector): Deleted.

2008-02-09  Helmut Eller  <heller@common-lisp.net>

	Drop the first return value of emacs-inspect.

	* swank.lisp (emacs-inspect): Drop the first return value. It
	wasn't used anymore.  Update all methods and callers.

2008-02-09  Helmut Eller  <heller@common-lisp.net>

	Remove obsolete *slime-inspect-contents-limit*.

	* swank.lisp (*slime-inspect-contents-limit*): Deleted and all its
	uses.  The new implementation isn't specific to hash-tables or
	arrays.

2008-02-09  Helmut Eller  <heller@common-lisp.net>

	Limit the length of the inspector content.
	That's similar to the limitation of the length of backtraces in
	the debugger.

	* swank.lisp (*inspectee-content*): New variable.
	(content-range): New function.
	(inspect-object): Use it with a length of 1000.
	(inspector-range): New function. Called from Emacs.

	* slime.el (slime-inspector-insert-content)
	(slime-inspector-insert-range, slime-inspector-insert-range-button)
	(slime-inspector-fetch-range): New functions.
	(slime-inspector-operate-on-point): Handle range-buttons.

2008-02-09  Helmut Eller  <heller@common-lisp.net>

	Make slime-property-bounds more useful.

	* slime.el (slime-property-bounds): Remove special casing for
	whitespace at the end.
	(slime-repl-send-input): Don't mark the newline with the
	slime-repl-old-input property.
	(sldb-frame-region): Use slime-property-bounds.

2008-02-09  Helmut Eller  <heller@common-lisp.net>

	Inspector cleanups.

	* swank.lisp (emacs-inspect): Renamed from inspect-for-emacs.
	Changed all method-defs accordingly.
	(common-seperated-spec, inspector-princ): Moved to
	swank-fancy-inspector.lisp.
	(inspector-content): Renamed from inspector-content-for-emacs.
	(value-part): Renamed from value-part-for-emacs.
	(action-part): Renamed from action-part-for-emacs.
	(inspect-list): Renamed from inspect-for-emacs-list.
	(inspect-list-aux): New.
	(inspect-cons): Renamed from inspect-for-emacs-simple-cons.
	(*inspect-length*): Deleted.
	(inspect-list): Ignore max-length stuff.
	(inspector-content): Don't allow nil elements.
	(emacs-inspect array): Make the label of element type more
	consistent with the others.

2008-02-09  Helmut Eller  <heller@common-lisp.net>

	Cleanup slime-repl-set-package.

	* slime.el (slime-repl-set-package): Make it fit within 80 columns.

2008-02-05  Marco Baringer  <mb@bese.it>

	* slime.el (slime-search-buffer-package): Ask the lisp to read the
	in-package form so that we properly deal with #+foo and |WHATEVER|
	package names.
	(slime-repl-set-package): Only prompt with a default package if
	the repl's package is different from the current package.

2008-02-04  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp (ccl::advise ccl::break): advise the
	lower-level ccl::cbreak-loop instead of cl:break.
	(frame-locals): If the value is a value-cell (a closed over value)
	show the closed over value and not the value cell.
	(disassemble-frame): add in x86-64 code.

	* slime-autoloads.el (slime-setup-contribs): Add contribs
	directory to load-path.

	* slime.el (slime-setup): Add contribs directory to load-path.

	* swank-abcl.lisp, swank-allegro.lisp, swank-backend.lisp,
	swank-clisp.lisp, swank-cmucl.lisp, swank-corman.lisp,
	swank-ecl.lisp, swank-lispworks.lisp, swank-openmcl.lisp,
	swank-sbcl.lisp, swank-scl.lisp, swank.lisp,
	contrib/swank-fancy-inspector.lisp: Remove second argument from
	swank:inspect-for-emacs. This functionality, choosing an inspector
	at runtime, was never actually used and is, now, needless
	complexity.

2008-02-04  Helmut Eller  <heller@common-lisp.net>

	Simpler code to bind 0-9 in the debugger.

	* slime.el (sldb-mode-map): When binding the keys 0-9, use eval
	instead of two macros.

2008-02-04  Helmut Eller  <heller@common-lisp.net>

	Move some functions to swank-arglist.lisp.

	* swank.lisp (length=, ensure-list, recursively-empty-p)
	(maybecall, exactly-one-p, read-softly-from-string)
	(unintern-in-home-package, valid-function-name-p): Moved to
	contrib/swank-arglist.lisp.

2008-02-03  Marco Baringer  <mb@bese.it>

	* swank.lisp (*sldb-condition-printer*): New variable.
	(safe-condition-message): Use the current binding
	of *sldb-condition-printer* to print the condition to a string.

	* slime.el (sldb-invoke-restart-by-name): New function. Invokes a
	restart by name, uses completion to read restart's name.
	(slime-define-keys sldb-mode-map): Bind
	sldb-invoke-restart-by-name to I in sldb buffers.

	* swank-loader.lisp: When loading swank delete all swank packages
	first. This protects the lisp from broken reloads of swank. Leave
	the swank-loader package so that users can set *fasl-directory*
	and *source-directory* as per the documentation.
	(lisp-version-string): On openmcl use the full
	cl:lisp-implementation-version, ccl::*openmcl-major-version* and
	ccl::*openmcl-minor-version* aren't sufficently precise to notice
	changes in openmcl's cvs.

2008-01-27  Helmut Eller  <heller@common-lisp.net>

	Make it easier to start a non-default Lisp from ELisp code.

	* slime.el (slime): If the argument is a symbol start the
	corresponding entry in slime-lisp-implementations.
	Typical use is something like:
	  (defun cmucl () (interactive) (slime 'cmucl))

2008-01-22  Luís Oliveira  <loliveira@common-lisp.net>

	* swank-source-path-parser.lisp (make-source-recording-readtable):
	don't suppress the #. reader macro.
	(read-and-record-source-map): don't bind *read-eval* to nil.
	(suppress-sharp-dot): unused, delete it.

	* slime.el (test compile-defun): test with #+#.'(:and).

2008-01-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-mode): Don't throw to toplevel in the
	kill-buffer-hook, since the buffer can be killed for other reasons
	too.
	(test break): Test BREAK and CONTINUE in a loop.
	(slime-wait-condition): Display the current time.

2008-01-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	New hooks that allow the slime-presentations contrib to hook
	into the debugger and inspector.

	* slime.el (sldb-insert-frame-variable-value-function): New
	variable.
	(sldb-insert-frame-variable-value): New function, default value
	for sldb-insert-frame-variable-value-function.
	(sldb-insert-locals): Use it here.

	* slime.el (slime-inspector-insert-ispec-function): New variable.
	(slime-open-inspector): Use it here.

2008-01-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* doc/slime.texi (Presentations): Improve documentation of
	presentations.

2008-01-19  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp (inspect-for-emacs): Make ECL inspection better;
	should be able to handle all builtin types and CLOS objects now.

2008-01-17 Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (sbcl-source-file-p): When a buffer is not
	associated with any file, M-. for names defined there ends up
	calling SBCL-SOURCE-FILE-P with NIL -- guard against that.

2008-01-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (sldb-mode): Add `sldb-quit' to `kill-buffer-hook' to
	close the debugging machinery on swank side when the SLDB buffer
	is killed. (Notice that killing the SLDB buffer manually will not
	restore window configuration in contrast to typing `q'.)

2008-01-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-delete-and-extract-region): New
	function. Portable version of `delete-and-extract-region' which
	returned NIL instead of "", as experienced by Matthias Koeppe.

2008-01-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-repl-mode-map): Bind C-c C-t to
	slime-toggle-trace-fdefinition (as in Lisp buffers) instead of
	slime-repl-clear-buffer.  This binding is useful for untracing
	functions directly from the trace output.  Move
	slime-repl-clear-buffer to the keybinding C-c M-o.

2008-01-04  Juho Snellman  <jsnell@iki.fi>

	* swank-sbcl.lisp (source-file-source-location): Use the
	debootstrap readtable when appropriate (fixes occasional reader
	errors when using "v" on debugger frames that point to functions
	defined in SBCL). Likewise for the debootstrapping packages.
	(code-location-debug-source-name): Ensure that we always return a
	physical namestring, Emacs won't like a pathname or a logical
	namestring.

2008-01-02  Luís Oliveira  <loliveira@common-lisp.net>

	Use sane default values for slime-repl-set-package.

	Previously, when typing `,!p' at the REPL, the current package
	would have been inserted as a default (although the whole intent
	was to /change/ the current package in the first place), now
	nothing is inserted anymore.

	* slime.el (slime-pretty-current-package): rename it to
	slime-pretty-find-buffer-package and make it use
	slime-find-buffer-package instead of slime-current-package.
	(slime-repl-set-package, slime-set-package): use new function.

2008-01-02  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-print-apropos): Simplified: Don't insert action
	properties anymore for the symbol; they were ignored anyway,
	because `apropos-follow' (bound to RET in the resulting
	*SLIME Apropos* buffer) looks for buttons only.

2008-01-02  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-apropos): Update docstring: Apropos doesn't
	match on regular expressions anymore since 2007-11-24.

2007-12-22  Douglas Crosher <dcrosher@common-lisp.net>

	* swank-scl.lisp (set-stream-timeout, make-socket-io-stream): update
	for Scieneer CL 1.3.7.

2007-12-21  Geo Carncross  <geocar@gmail.com>

	* swank-ecl.lisp: try to parse the Args: line in most ecl functions to
	make modeline/autodoc more interesting

2007-12-20  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (read-softly-from-string): Now actually returns all
	three values as explained in its docstring.

2007-12-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-insert-xref-location): New function. Tries to
	either insert the file name a function is defined in, or inserts
	information about the buffer a function was interactively
	`C-c C-c'd from. Idea from Knut Olav Bøhmer.
	(slime-insert-xrefs): Use it.

2007-12-14  Geo Carncross  <geocar@gmail.com>

	* Add ECL threads implementation to swank

2007-12-04  Helmut Eller  <heller@common-lisp.net>

	Simplify the inspector.

	* swank.lisp (inspect-object): Ignore the title value returned
	from backends.

	* slime.el (slime-open-inspector): Updated accordingly.

2007-12-04  Helmut Eller  <heller@common-lisp.net>

	Fix slime-list-thread selector.

	* slime.el (slime-list-threads): Wait for the result before
	continuing.

2007-12-04  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-insert-result): Use slime-repl-emit-result
	since handling of markers has changed.
	(slime-repl-emit-result): New argument: bol.

2007-12-02  Alan Caulkins <fatman@maxint.net>

	Make it possible to close listening sockets.

	* swank.lisp (stop-server, restart-server): New functions.
	(*listener-sockets*): New variable.
	(setup-server): Store open sockets in *listener-sockets*.

2007-12-02  Helmut Eller  <heller@common-lisp.net>

	Add hook to customize the region used by C-c C-c.
	Useful to recognize block declarations in CMUCL sources.

	* slime.el (slime-region-for-defun-function): New variable.
	(slime-region-for-defun-at-point): Use it.

2007-11-30  Helmut Eller  <heller@common-lisp.net>

	Handle byte-functions without debug-info.

	* swank-cmucl.lisp (byte-function-location): Return an error
	if the component has no debug-info.

2007-11-30  Helmut Eller  <heller@common-lisp.net>

	Disable the pretty-printer for backtraces.
	Would be nice if we could print newlines in strings as \n.

	* swank.lisp (*backtrace-printer-bindings*):  New varaible.
	(backtrace, frame-locals-for-emacs): Use it.

2007-11-29  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (valid-function-name-p): Fixed wrt. setf functions.

2007-11-29  Helmut Eller  <heller@common-lisp.net>

	Prettify package names for slime-repl-set-package.

	* slime.el (slime-repl-set-package): slime-current-package may
	have leading colons.  Use slime-pretty-package-name to remove
	them.  Reported by Constantine Vetoshev.
	(slime-pretty-current-package): New function.
	(slime-set-package): Use it.

2007-11-24  Helmut Eller  <heller@common-lisp.net>

	Drop remaining dependencies on nregex.

	* swank-lispworks.lisp (unmangle-unfun): Use sys::setf-symbol-p
	instead of regexp matching.

	* swank-loader.lisp (*sysdep-files*): Don't include nregex.

2007-11-24  Helmut Eller  <heller@common-lisp.net>

	Mirror *modules* in Emacs.

	* slime.el (slime-lisp-modules): New connction variable.
	(slime-set-connection-info): Load requested modules.
	(slime-required-modules): New variable.
	(slime-require, slime-load-contribs): New functions.

	* swank.lisp (connection-info): Include *modules*.
	(swank-require): Accept a list of modules as argument.

2007-11-24  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (parse-package): The old version didn't pass the
	test-suite.  Now use the reader directly instead of emulating it
	half-heartedly.

	* slime.el (slime-search-buffer-package): Don't remove double
	quotes or "#:", swank:parse-package takes care of that.

2007-11-24  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (apropos-symbols):  Use simple search instead of
	regexps.
	(make-apropos-matcher): Used to be make-regexp-matcher.

	(*sldb-printer-bindings*): Set *print-right-margin* to
	most-positive-fixnum. This prints each frame in the backtrace in a
	single long line.  But is suboptimal for other purposes, like
	eval-in-frame.

	(setup-server): Initialize multiprocessing here, so that is also
	done for create-server.

2007-11-23  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (swank-require): Fix typo (:key was used instead of
	:test.)  Reported by Stelian Ionescu.

2007-11-22  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (swank-require): Don't search the file if the
	module-name is present in *modules*. That should avoid problems if
	swank is included in a core file and moved to a different
	location.  Reported by John Wiegley.

2007-11-19  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-repl-mode-map, slime-repl-read-mode),
	(slime-compiler-notes-mode-map, slime-xref-mode-map),
	(sldb-mode-map, slime-connection-list-mode-map),
	(slime-inspector-mode-map): Added bindings for [return] in
	addition to (kbd "RET"). The reason is that pressing enter in X is
	translated to (kbd "RET") only if no binding for [return] is
	active; if [return] is bound to something, pressing enter is
	translated to this key binding henceforth, as was explained to me
	by Pierre Gaston, thanks! This can cause quite confusing behaviour
	as Andreas Davour faced in his post
	<cs9k5ofqbt7.fsf@Psilocybe.Update.UU.SE> to comp.lang.lisp.

2007-11-06  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-events-buffer, slime-inspector-buffer): Disable
	undo.

2007-11-01  Tobias C. Rittweiler  <tcr@freebits.de>

	The inspector page layout has changed slightly. Before the header
	looked like

	  A proper list.
            [type: CONS]
	  -------------------

	It now looks like

	  #<CONS {B3DBD39}>:
	     A proper list.
	  --------------------

	Rationale is to have a "presentation link" to the currently
	inspected object itself, to copy it down to the REPL via `M-RET'.
	This is mostly useful when trying to get a value from the Slime
	Debugger to the REPL, which you can do by inspecting the value
	first by `i', and then using `M-RET' on the object representation
	in the new header layout.

	Such a "presentation link" existed already but was removed in
	2007-08-23. The old behaviour was to have the title ("A proper
	list" in the above example) to contain the link. I decided to make
	the link more explicit.

	* swank.lisp (inspect-object): Now additionally returns a
	string-representation of the object itself, and an inspector id
	for it. Removed returning its type as this is implicit in the new
	string representation.

	* slime.el (slime-open-inspector): Adapted for new header layout.

2007-10-22  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (read-softly-from-string, unintern-in-home-package):
	Moved from `contrib/swank-arglist.lisp'.
	(parse-package): Use them. (Removes FIXME about interning
	symbols.)  Also changed the logic somewhat to avoid passing :|| to
	FIND-PACKAGE as ECL chokes on that.

2007-10-22  Steve Smith  <tarkasteve@gmail.com>

	* swank-loader.lisp (compile-files-if-needed-serially): Added
	missing `load' argument to function definition on Corman Lisp /
	ECL.

2007-10-22  Mark Evenson  <mark.evenson@gmx.at>

	* swank-abcl.lisp (getpid): Implemented.

2007-10-22  R. Matthew Emerson  <rme@thoughtstuff.com>

	* swank-openmcl.lisp (closure-closed-over-values): Use
	CCL::NTH-IMMEDIATE instead of CCL::%SVREF.  This makes it work on
	x86-64 OpenMCL. (The %SVREF worked on PPC, but this will work on
	both.)

2007-09-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-filesystem-toplevel-directory): New function.
	Windows doesn't have a filesystem that is as hierarchical as the
	Unix' one. Reported by Carsten Blaauw and Stefan Kluehspies.
	(slime-file-name-merge-source-root): Use it.
	(slime-highlight-differences-in-dirname): Use it.

2007-09-26  Utz-Uwe Haus  <haus+slime@mail.math.uni-magdeburg.de>

	* swank-allegro.lisp (fspec-definition-locations): Allow the
	POSITION datum of :top-level-form fspecs to be missing.  This
	apparently helpful for Allegro CL 8.1.

2007-09-21  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-length=, slime-length>): Restore support for
	vectors, as `slime-length=' was already used with strings in
	`slime-parse.el'. This broke extended arglist display.

2007-09-20  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-setup): Call the respective init functions of
	contribs.

	* slime-autoloads.el (slime-setup-contribs): Ditto.

2007-09-19  Helmut Eller  <heller@common-lisp.net>

	Simplify slime-compile-file.

	* slime.el (slime-compile-file): Don't save window config.
	(slime-curry, slime-rcurry): New functions.

	* slime.el (slime-complete-symbol*-fancy): Move defcustom to
	contrib/slime-c-p-c.el

	* swank-version.el: Delete file. No longer used.

	* bridge.el: Moved to contrib.

	* tree-widget.el: File deleted. Only needed by contribs and is
	distributed with Emacs 21.

	* slime.el: Reorder some devfars and menus code so that the
	compiler doesn't complain about free variables.

	Fix apropos in Emacs 22.

	* slime.el (slime-print-apropos): Add button props for Emacs 22.
	(slime-call-describer): ARG is a marker in Emacs 22.

	(def-slime-selector-method ?c): Wait until slime-list-threads
	returns.

	Remove define-slime-dialect.

	* slime.el (define-slime-dialect): Deleted. Use
	slime-lisp-implementations instead.

	Introduce a slime-start-and-init function.

	* slime.el (slime-start-and-init, slime-lisp-options): New
	functions.
	(slime-start-and-load): Use it.

	Simplify slime-length=.

	* slime.el (slime-length=, slime-length>): No need for vectors.

	Remove explicit support for Scheme mode.

	* slime.el (slime-scheme-mode-hook, slime-shared-lisp-mode-hook)
	Deleted.
	(slime-indentation-update-hooks): New hook.
	(slime-handle-indentation-update): Use it.

	Fix close-connection.

	* swank.lisp (close-connection): Use *log-output* instead of
	*debug-io* (which could be redirected to the to-be-closed
	connection).

2007-09-15  Helmut Eller  <heller@common-lisp.net>

	Let slime-setup load contribs.

	* slime.el (slime-setup): Take a list of contribs to load as
	argument.

	* slime-autoloads.el (slime-setup): Ditto, but delay the actual
	loading until slime is loaded.
	(slime-setup-contribs): New function.

2007-09-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-maybe-warn-for-different-source-root): Catch
	returned NIL from `slime-file-name-merge-source-root' if the two
	filenames don't share a common source root.
	Reported by Frank Goenninger.

2007-09-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-split-string): New semi-portability function.
	The behaviour of `split-string' changed between Emacs21 and
	Emacs22. Thanks to Christophe Rhodes for reporting this.
	(slime-file-name-merge-source-root): Use `slime-split-string'.
	(slime-highlight-differences-in-dirname): Likewise.

2007-09-14  Helmut Eller  <heller@common-lisp.net>

	Some cleanups for the REPL.

	* slime.el (slime-repl-write-string): Split it up into smaller
	functions.
	(slime-repl-emit, slime-repl-emit-result)
	(slime-emit-string): New functions.

	(slime-repl-save-history): Use prin1 instead of pp.

	(repl-type-ahead): New test case.

2007-09-12  Christophe Rhodes  <csr21@cantab.net>

	Make ASDF:LOAD-OP (and SBCL REQUIRE) happy with swank.asd

	* swank.asd: Define and use a CL-SCRIPT-FILE class for loading as
	source, even with ASDF:LOAD-OP.

2007-09-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-loader.lisp: Aways compile-file `contrib/swank-asdf.lisp'
	on SBCL. This fixes "Undefined function" style-warnings when using
	`slime-asdf' in combination with SBCL. Reported by Cyrus Harmon.

	* swank-sbcl.lisp: Explicitly require ASDF. (While this is not
	strictly necessary, as it's implicitly loaded on requiring the
	other modules, I think it's better to be explicit about it.)

2007-09-10  Helmut Eller  <heller@common-lisp.net>

	Fix some bugs introduced while moving doc refs to contrib.

	* swank-sbcl.lisp (condition-references): It's still needed.

	* slime.el (sldb-dispatch-extras): Add missing quote.
	(slime-sbcl-manual-root): Move definition to
	contrib/slime-references.el.
	(slime-cl-symbol-name, slime-cl-symbol-package): Move to
	contrib/slime-parse.el.

2007-09-10  Helmut Eller  <heller@common-lisp.net>

	Move SBCL doc references to contrib.

	* slime.el (sldb-insert-condition): Merge REFERENCES and EXTRAS.
	(sldb-extras-hooks, sldb-dispatch-extras): New hook.

	* swank-backend.lisp (condition-references): Removed. Merged with
	condition-extras.

	* swank-sbcl.lisp (condition-references): Removed.
	(condition-extras): Include references.
	(externalize-reference): New function.  Don't return plain
	symbols.

	* swank-allegro.lisp (condition-references): Removed.

2007-09-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-cl-symbol-name, slime-cl-symbol-package):
	Ressurected, as they're still used in this file.
	Reported by Edward Cant.

2007-09-10  Tobias C. Rittweiler  <tcr@freebits.de>

	When working on multiple source trees simultaneously, the way
	`slime-edit-definition' (M-.) works can sometimes be confusing:

	`M-.' visits locations that are present in the current Lisp image,
	which works perfectly well as long as the image reflects the
	source tree that one is currently looking at.

	In the other case, however, one can easily end up visiting a file
	in a different source root directory (the one corresponding to the
	Lisp image), and is thus easily tricked to modify the wrong source
	files---which can lead to quite some stressfull cursing.

	If the variable `slime-warn-when-possibly-tricked-by-M-.' is
	T (the default), a warning message is issued to raise the user's
	attention whenever `M-.' is about opening a file in a different
	source root that also exists in the source root directory of the
	user's _current buffer_.

	There's no guarantee that all possible cases are covered, but if
	you encounter such a warning, it's a strong indication that you
	should check twice before modifying.

	* slime.el (slime-file-name-merge-source-root): New function.
	(slime-highlight-differences-in-dirname): New function.
	(slime-maybe-warn-for-different-source-root): New function.
	(slime-warn-when-possibly-tricked-by-M-.): New variable (T by default.)
	(slime-goto-location-buffer): Where appropriate, call
	`slime-maybe-warn-for-different-source-root'

2007-09-08  Stelian Ionescu  <sionescu@common-lisp.net>

	* slime.el (save-restriction-if-possible): Place macro definition
	above use of the macro, to regain ability to byte-compile-file.

2007-09-08  Tobias C. Rittweiler  <tcr@freebits.de>

	Fix message displaying on XEmacs. Reported by Steven E. Harris,
	and Ken Causey.

	* slime.el (slime-display-message): Resurrect secondary
	`buffer-name' argument which got lost in 2007-08-24.
	(slime-format-display-message): Resurrect passing "*SLIME Note*"
	as default buffer-name to `slime-display-message'.

2007-09-08  Matt Pillsbury  <mtbp@rci.rutgers.edu>

	* swank-backend.lisp (definterface): Updated docstring.

2007-09-06  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-repl-write-string): Use case, not ecase, for
	dispatching targets.Should fix XEmacs compatibility.
	Reported by Steven E. Harris.

2007-09-05  Didier Verna  <didier@xemacs.org>

	* slime.el (slime-filename-translations): Fix custom type.

2007-09-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-toggle-trace-fdefinition):  Fix typo.  The
	 argument for interactive should be "P" not "p".

2007-09-04  Mark Evenson  <mark.evenson@gmx.at>

	* swank-abcl.lisp: Call accessors of compiler-condition at load
	time to work around some ABCL problems.

2007-09-04  Helmut Eller  <heller@common-lisp.net>

	Move asdf support to contrib.

	* swank-backend.lisp (operate-on-system): Moved to
	swank-asdf.lisp. It wasn't specialized in any backend.

	* swank.lisp (operate-on-system-for-emacs)
	(list-all-systems-known-to-asdf, list-asdf-systems): Moved to
	swank-asdf.lisp.

	* slime.el: Move asdf commands to contrib slime-adsf.el.

	* swank-loader.lisp: Load swank-asdf if ASDF is in
	*FEATURES*. Also add the contrib source directory to
	swank::*load-path*.

2007-09-04  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Move tramp support to contrib.

2007-09-04  Helmut Eller  <heller@common-lisp.net>

	Move startup animation to contrib.

	* slime.el (slime-repl-banner-function): New hook.
	(slime-repl-update-banner): Use it and reset markers after calling
	it.
	(slime-set-default-directory): Don't call slime-repl-update-banner
	here.
	(slime-repl-insert-prompt): Set slime-repl-input-end-mark to
	point-max.

2007-09-04  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Move inferior-slime-mode to contrib.

2007-09-04  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Fix the test suite (except for SBCL).

2007-09-04  Helmut Eller  <heller@common-lisp.net>

	Simplify slime-process-available-input.

	* slime.el (slime-process-available-input): We are called in a
	process filter, i.e. at arbitrary times and in an aribtrary
	buffer.  So it doesn't make sense to save-and-restore the current
	buffer here
	(slime-eval-async): Instead, save and restore the buffer here.
	(slime-net-read-or-lose): New.

2007-09-04  Helmut Eller  <heller@common-lisp.net>

	Remove request-abort condition.

	* swank-backend.lisp (request-abort): Removed
	(abort-request): Removed.  Replace all (3) uses with ERROR.
	* swank.lisp (eval-for-emacs): No special case for request-abort.
	* slime.el (slime-eval-async): Remove optional arg of :abort.

2007-09-04  Helmut Eller  <heller@common-lisp.net>

	Rename slime-insert-possibly-as-rectangle to slime-insert-indented.

	* slime.el (slime-insert-indented): Renamed. Update callers.

2007-08-31  Helmut Eller  <heller@common-lisp.net>

	Move compound prefix completion and autodoc to contrib.

	* swank.lisp (simple-completions): Rewritten for simplicity.
	(operator-arglist): Rewritten for simplicity.

	* slime.el (slime-complete-symbol-function): Make simple
	completion the default.
	(slime-echo-arglist-function, slime-echo-arglist): New hook.

	Remove corresponding key bindigs.

	* slime.el (slime-obsolete-commands): New table. Use it to bind
	a command with an upgrade notice.

2007-08-31  Andreas Fuchs  <asf@boinkor.net>

	* slime.el (slime-reindent-defun): Fixed when used in lisp file
	buffers. (Similiar patch also provided by Gábor Melis; problem
	also reported by Jeff Cunningham.)

2007-08-31  Jon Allen Boone  <ipmonger@delamancha.org>

	* swank-cmucl.lisp: CMUCL now has an x86-Darwin port as well as
	  the PPC-Darwin version. Changed to conditionalize on the
	  presence of darwin instead of ppc so that slime works with both
	  Darwin versions of CMUCL.

2007-08-31  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-sexp-at-point): Explicitely set current syntax
	table to operate in `lisp-mode-syntax-table' because
	`thing-at-point' is used which depends on the syntax table. (E.g.
	 keywords like `:foo' aren't recognized as sexp otherwise.)

	* slime.el (slime-parse-extended-operator/declare): Wrap regexp
	stuff in `save-match-data'
	(slime-internal-scratch-buffer): Removed again. Was only
	introduced as a performance hack; but it turned out that the bad
	performance was because of unneccessary recursive calls of
	`slime-make-form-spec-from-string'. (Which was fixed on 2007-08-27
	already.)
	(slime-make-form-spec-from-string): Use `with-temp-buffer' instead
	of `slime-internal-scratch-buffer'. Removed activation of
	`lisp-mode' in the temporary buffer, because this made
	`lisp-mode-hooks' run. This activated autodoc in the temp buffer,
	although the temp buffer is used to compute an autodoc
	itself (which resulted in some very mutual recursion which caused
	the current arglist to be displayed again and again---as could
	have been witnessed in `*Messages*'.) `Lisp-mode' was activated to
	get the right syntax-table for `slime-sexp-at-point', but this one
	sets the correct syntax-table itself now.

2007-08-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Fix user input type-ahead again (this change from 2007-08-25 got
	lost).  Testcase: Type (dotimes (i 5) (format t "Number ~A~%"
	i) (sleep 1)) and then type ahead while the command is executing
	and output arrives.

	* slime.el (slime-repl-insert-prompt): Don't go to point-max but
	to slime-repl-input-start-mark if there is one.
	(slime-repl-write-string): Insert a :repl-result before the
	prompt, not at point-max.  Update markers properly.

2007-08-28  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (safe-definition-finding): Remove whitespace
	around error messages.
	(trim-whitespace): New function.

2007-08-28  Helmut Eller  <heller@common-lisp.net>

	Fix some output related bugs.

	* swank.lisp (send-repl-results-to-emacs): Emit a fresh line.

	* slime.el (slime-insert-transcript-delimiter): Use
	insert-before-markers since slime-output-end is no longer left
	inserting.  Reported by Austin Haas <austin@pettomato.com>.

2007-08-28  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-display-or-scroll-completions,
	slime-scroll-completions): New functions.  Factored out of
	slime-expand-abbreviations-and-complete.

2007-08-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-repl-write-string): Handle arbitrary targets
	using slime-output-target-marker.
	(slime-last-output-target-id, slime-output-target-to-marker)
	(slime-output-target-marker)
	(slime-redirect-trace-output): Move back here from
	slime-presentations.el.

2007-08-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (classify-symbol, symbol-classification->string):
	Resurrected in swank.lisp. (I was bitten by cvs-pcl which
	committed (2007-08-27) my locally changed `contribs/swank-fuzzy.lisp'
	where I already removed these functions from.)

2007-08-28  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-make-form-spec-from-string): Elisp Hacking 101:
	Don't use `beginning-of-buffer' and `end-of-buffer' in Elisp code.

	* swank.lisp (read-form-spec): Unintern just newly interned
	symbols when an reader error occurs.

2007-08-28  Helmut Eller  <heller@common-lisp.net>

	Move presentations to contrib.  Part II.

	* swank.lisp (*listener-eval-function*): New variables.
	(listener-eval): Use it
	(repl-eval): Used to be listener-eval.
	(*send-repl-results-function*): New variable.
	(eval-region): Simplify.
	(track-package, cat): New functions.
	(slime-repl-clear-buffer-hook): New hook.
	(slime-repl-clear-buffer): Use it.

2007-08-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Remove the ID argument from :write-string protocol messages.
	Everything, except for rigid-indentation tricks, can be achieved
	by using :write-string in conjunction with :presentation-start and
	:presentation-end.

	* swank.lisp (present-in-emacs): Unused, removed.

	* swank.lisp (make-output-function-for-target): Remove id argument
	from :write-string.
	(send-repl-results-to-emacs): Don't call
	save-presented-object. Remove id argument from :write-string.

	* slime.el (slime-dispatch-event): Change it here.
	(slime-write-string, slime-repl-write-string): And here.

2007-08-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank-loader.lisp (*contribs*): Add swank-presentations.

2007-08-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-make-extended-operator-parser/look-ahead): Move
	to end of symbol at point.
	(slime-make-form-spec-from-string): Fixes unexpected behaviour of
	`save-excursion'.

2007-08-27  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-sexp-at-point): Fixes a few edge cases were
	Emacs' `(thing-at-point 'sexp)' behaves suboptimally. For example,
	`foo(bar baz)' where point is at the ?\(.
	(slime-internal-scratch-buffer): New. This variable holds an
	internal scratch buffer that can be reused instead of having to
	create a new temporary buffer again and again.
	(slime-make-extended-operator-parser/look-ahead): Uses
	`slime-make-form-spec-from-string' to parse nested expressions
	properly.
	(slime-nesting-until-point): Added docstring.
	(slime-make-form-spec-from-string): Added new optional parameter
	for stripping the operator off the passed string representation of
	a form. Necessary to work in the context of
	`slime-make-extended-operator-parser/look-ahead'. Added safety check
	against a possible endless recursion.

	* swank.lisp (parse-form-spec): Looses restriction for nesting.

2007-08-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-eval-feature-conditional): Fix typo.
	(slime-keywordify): Simplify.

2007-08-27  Helmut Eller  <heller@common-lisp.net>

	Move presentations to contrib.  Part I.

	* slime.el (slime-event-hooks, slime-dispatch-event): New hook.
	(slime-write-string-function, slime-write-string): New hook.
	(slime-repl-return-hooks, slime-repl-return): New hook.
	(slime-repl-current-input-hooks, slime-repl-current-input): New hook.
	(slime-open-stream-hooks, slime-open-stream-to-lisp): New hook.
	(sldb-insert-locals, slime-inspector-insert-ispec)
	(slime-last-expression): Don't use presentations.

2007-08-26  Tobias C. Rittweiler  <tcr@freebits.de>

	Reduces needless interning of symbols that was introduced by my
	recent work on autodoc to a minimum. Also fixes this issue for
	`slime-complete-form' which always interned symbols even before my
	changes.

	* slime.el (slime-sexp-at-point): If N is given, but there aren't
	N sexps available at point, make it return a list of just as many
	as there are.
	(slime-make-form-spec-from-string): New. Creates a ``raw form
	spec'' from a string that's suited for determining newly interned
	symbols later in Swank.
	(slime-parse-extended-operator/declare): Uses it.

	* swank.lisp (parse-symbol): Returns internal knowledge, to
	provide a means for callers to perform a sanity check.
	(call-with-ignored-reader-errors): New. Abstracted out from
	`read-incomplete-form-from-string.'

	* swank.lisp (read-form-spec): New. Only READs elements of a form
	spec if necessary. And if it does have to READ, it keeps track
	of newly interned symbols which are returned as secondary
	return value.
	(parse-form-spec): Use it. Propagate newly interned symbols.
	(parse-first-valid-form-spec): Likewise.
	(arglist-for-echo-area, complete-form, completions-for-keyword):
	Adapted to unintern the newly interned symbols.


2007-08-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (current-slime-narrowing-configuration):
	Renamed to `slime-current-narrowing-configuration'.
	(set-slime-narrowing-configuration):
	Renamed to `slime-set-narrowing-configuration'.
	(current-slime-emacs-snapshot):
	Renamed to `slime-current-emacs-snapshot'.
	(current-slime-emacs-snapshot-fingerprint):
	Renamed to `slime-current-emacs-snapshot-fingerprint'.
	(set-slime-emacs-snapshot):
	Renamed to `slime-set-emacs-snapshot'.

2007-08-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (save-restriction-if-possible): Fixed another typo,
	duh! Thanks again to Matthias Koeppe.

2007-08-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-cl-symbol-name): Handle vertical bars (|)
	(%slime-nesting-until-point): Renamed to `slime-nesting-until-point'.

2007-08-25  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Fix a bug where REPL results would sometimes be indented by a
	random amount.

	* slime.el (slime-insert-presentation): Make the
	rectangle-ification of multi-line presentations, introduced
	2006-12-19, optional.
	(slime-write-string): Use it here only for regular output, but not
	for REPL results.
	(sldb-insert-locals): Use it here.
	(slime-inspector-insert-ispec): Use it here.

2007-08-25  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Fix handling of user-input type-ahead in the REPL.
	Reported by Madhu <enometh@meer.net> on 2007-04-24.

	* slime.el (slime-write-string): Make sure text properties are
	rear-nonsticky, so typed-ahead user input does not pick up the
	text properties.  Fix up some markers.
	(slime-reset-repl-markers): Make the marker slime-output-end of
	insertion type nil (no automatic advances on insertions).
	(slime-with-output-end-mark): Update the location of
	slime-output-end here manually.
	(slime-repl-update-banner): Use insert-before-markers.

2007-08-25  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	New command slime-redirect-trace-output creates a separate Emacs
	buffer, where all subsequent trace output is sent.

	* slime.el (slime-last-output-target-id): New variable.
	(slime-output-target-to-marker): New variable.
	(slime-output-target-marker): New function.
	(slime-write-string): Handle general "target" arguments using
	slime-output-target-marker.
	(slime-redirect-trace-output): New command.
	(slime-easy-menu): Add a menu item for it.

	* slime.el (slime-mark-presentation-start)
	(slime-mark-presentation-end): Make "target" argument optional.
	Use slime-output-target-to-marker.

	* swank.lisp (make-output-stream-for-target): New function,
	factored out from open-streams.
	(open-streams): Use it here.

	* swank.lisp (connection): New slot "trace-output".
	(call-with-redirected-io): Use it here.
	(redirect-trace-output): New slimefun; set the slot to a new
	target stream.

2007-08-25  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (save-restriction-if-possible): Fixed typo in
	macroexpansion. Thanks to Matthias Koeppe for reporting.

2007-08-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-insert-arglist): Removed, superseded by
	slime-complete-form since 2005-02-20.

	* swank.lisp (arglist-for-insertion): Now unused, removed.

2007-08-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Some fixes to the presentation-streams contrib.

	* slime.el (slime-dispatch-event): Handle new optionals args of
	messages :presentation-start and :presentation-end.

	* slime.el (slime-mark-presentation-start)
	(slime-mark-presentation-end): New arg "target"; record
	presentation boundaries separately for REPL results and regular
	process output.  This fixes the presentation markup of REPL
	results when the presentation-streams contrib is loaded.

2007-08-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Make the fancy presentation-streams feature a contrib.
	Previously, it was only available if "present.lisp" was loaded
	manually.  Now it can be loaded automatically using:

	   (add-hook 'slime-load-hook
	             (lambda () (require 'slime-presentation-streams)))

	Note that the normal presentations that are created by REPL
	results, the inspector, and the debugger are NOT dependent on this
	code.

	* present.lisp: Moved to contrib/swank-presentation-streams.lisp.
	* swank-loader.lisp (*contribs*): Add swank-presentation-streams.

2007-08-24  Helmut Eller  <heller@common-lisp.net>

	Move typeout frame to contrib.

	* slime.el (slime-message-function, slime-background-message-function)
	(slime-autodoc-message-function): New variables.
	(slime-message, slime-background-message)
	(slime-autodoc-message): Call the function in the respective
	variable, so that the typeout window can be plugged in.

2007-08-24  Helmut Eller  <heller@common-lisp.net>

	Move xref and class browser to contrib.

	* slime.el (slime-browse-classes, slime-browse-xrefs): Gone. The
	Common Lisp part is still there.

2007-08-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-forward-blanks): Wrapped w/ `ignore-errors.'
	(slime-sexp-at-point): Return results as a list of strings, rather
	than just one big string if called with arg > 1.
	(slime-parse-extended-operator-name): Wrapping some movement code
	in `ignore-errors'. Adapted to new return value of
	`slime-enclosing-form-specs'. Minor cosmetic changes.
	(slime-make-extended-operator-parser/look-ahead): Adapted to
	changes of the ``raw form spec'' format; returns a form of
	strings, instead of a string of a form.
	(slime-parse-extended-operator/declare): Simplified. Adapted to
	changes of the ``raw form spec'' format; passes decl-identifiers,
	or typespec-operators respectively, along the decl/type-spec.
	(%slime-in-mid-of-typespec-p): Removed. Replaced by an regexp
	based approach.
	(%slime-nesting-until-point): New helper for
	`slime-parse-extended-operator/declare'.

	* swank.lisp (parse-form-spec): Adapted to new ``raw form spec''
	format. Updated format description in docstring accordingly.  The
	new format allows less interning of wrong symbols names comming
	from Slime. Thanks to Matthias Koeppe for spotting this.

2007-08-24  Helmut Eller  <heller@common-lisp.net>

	Move slime-highlight-edits-mode to contrib.

2007-08-24  Helmut Eller  <heller@common-lisp.net>

	Move slime-scratch to contrib.

	* slime.el (slime-scratch): Gone.

2007-08-24  Helmut Eller  <heller@common-lisp.net>

	Various cleanups related to slime-insert-propertized.

	* slime.el (slime-with-rigid-indentation): Fix evaluation order.
	(slime-indent-rigidly): New.
	(slime-insert-possibly-as-rectange): Don't set mark.
	(slime-insert-propertized): Use plain insert instead of
	slime-insert-possibly-as-rectange.

2007-08-24  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (sbcl-inspector): Fix typo.

2007-08-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Repair inspection of presentations.

	* swank.lisp (inspect-presentation): New slimefun.
	* slime.el (slime-inspect-presentation-at-mouse): Use it here.

2007-08-23  Helmut Eller  <heller@common-lisp.net>

	Move Marco Baringer's inspector to contrib.

	* swank.lisp (*default-inspector*): New variable. Set this
	variable dispatch to different inspectors.
	(inspect-object): Use it.

	* swank-loader.lisp (*contribs*): Add 'swank-fancy-inspector.

	* swank-backend.lisp (backend-inspector): New class.  Introduce a
	named class to give as another way to dispatch to backend methods.

	* swank-cmucl.lisp: Use backend-inspector class.
	* swank-sbcl.lisp: Use backend-inspector class.
	* swank-clisp.lisp: Use backend-inspector class.
	* swank-lispworks.lisp: Use backend-inspector class.
	* swank-allegro.lisp: Use backend-inspector class.
	* swank-openmcl.lisp: Use backend-inspector class.
	* swank-abcl.lisp: Use backend-inspector class.
	* swank-corman.lisp: Use backend-inspector class.
	* swank-scl.lisp: Use backend-inspector class.

2007-08-23  Tobias C. Rittweiler  <tcr@freebits.de>

	Added arglist display for declaration specifiers and type
	specifiers.

	Examples:

	`(declare (type' will display

	   (declare (type type-specifier &rest vars))

	`(declare (type (float' will display

	   [Typespec] (float &optional lower-limit upper-limit)

	`(declare (optimize' will display

	   (declare (optimize &any (safety 1) (space 1) (speed 1) ...))

	&ANY is a new lambda keyword that is introduced for arglist
	description purpose, and is very similiar to &KEY, but isn't based
	upon plists; they're more based upon *FEATURES* lists. (See the
	comment near the ARGLIST defstruct in `swank.lisp'.)

	* slime.el:
	(slime-to-feature-keyword): Renamed to `slime-keywordify'.
	(slime-eval-feature-conditional): Adapted to use `slime-keywordify'.
	(slime-ensure-list): New utility.
	(slime-sexp-at-point): Now takes an argument that specify how many
	sexps at point should be returned.
	(slime-enclosing-operator-names): Renamed to
	`slime-enclosing-form-specs'.
	(slime-enclosing-form-specs): Returns a list of ``raw form specs''
	instead of what was called ``extended operator names'' before, see
	`swank::parse-form-spec' for more information. This is a
	simplified superset. Additionally as tertiary return value return
	a list of points to let the caller see where each form spec is
	located. Adapted callers accordingly. Extended docstring.
	(slime-parse-extended-operator-name): Adapted to changes in
	`slime-enclosing-form-specs'. Now gets more context, and is such
	more powerful. This was needed to allow parsing DECLARE forms.
	(slime-make-extended-operator-parser/look-ahead): Because the
	protocol for arglist display was simplified, it was possible to
	replace the plethora of parsing function just by this one.
	(slime-extended-operator-name-parser-alist): Use it. Also add
	parser for DECLARE forms.
	(slime-parse-extended-operator/declare): Responsible for parsing
	DECLARE forms.
	(%slime-in-mid-of-typespec-p): Helper function for
	`slime-parse-extended-operator/declare'.
	(slime-incomplete-form-at-point): New. Return the ``raw form
	spec'' near point.
	(slime-complete-form): Use `slime-incomplete-form-at-point'.

	* swank.lisp: New Helper functions.
	(length=, ensure-list, recursively-empty-p): New.
	(maybecall, exactly-one-p): New.

	* swank.lisp (arglist-for-echo-area): Adapted to take ``raw form
	specs'' from Slime.
	(parse-form-spec): New. Takes a ``raw form spec'' and returns a
	``form spec'' for further processing in Swank. Docstring documents
	these two terms.
	(split-form-spec): New. Return relevant information from a form
	spec.
	(parse-first-valid-form-spec): Replaces `find-valid-operator-name'.
	(find-valid-operator-name): Removed.
	(operator-designator-to-form): Removed. Obsoleted by `parse-form-spec'.

	(defstruct arglist): Add `any-p' and `any-args' slots to contain
	arguments belonging to the &ANY lambda keyword.
	(print-arglist): Adapted to also print &ANY args.
	(print-decoded-arglist-as-template): Likewise.
	(decode-arglist): Adapted to also decode &ANY args.
	(remove-actual-args): Adapted to also remove &ANY args.
	(remove-&key-args): Split out from `remove-actual-args'.
	(remove-&any-args): New. Removes already provided &ANY args.
	(arglist-from-form-spec): New. Added detailed docstring.
	(arglist-dispatch): Dispatching generic function for
	`arglist-from-form-spec' that does all the work. Renamed from
	prior `form-completion'.
	(arglist-dispatch) Added methods for dealing with declaration and
	type-specifiers.
	(complete-form): Adapted to take ``raw form specs'' from Slime.
	(completions-for-keyword): Likewise.
	(format-arglist-for-echo-area): Removed. Not needed anymore.

	* swank-backend.lisp (declaration-arglist): New generic
	function. Returns the arglist for a given declaration
	identifier. (Backends are supposed to specialize it if they can
	provide additional information.)
	(type-specifier-arglist): New generic function. Returns the
	arglist for a given type-specifier operator. (Backends are
	supposed to specialize it if they can provide additional
	information.)
	(*type-specifier-arglists*): New variable. Contains the arglists
	for the type specifiers in Common Lisp.

	* swank-sbcl.lisp: Now depends upon sb-cltl2.
	(declaration-arglist 'optimize): Specialize the `optimize'
	declaration identifier to pass it to
	sb-cltl2:declaration-information.


2007-08-23  Helmut Eller  <heller@common-lisp.net>

	Some inspector cleanups.

	* slime.el (slime-inspect): Remove dwim stuff and drop keyword
	args.
	(slime-read-object): Killed.
	(slime-open-inspector): Drop keyword args.  Update callers
	accodordingly, expect presentation related code. Presentations no
	longer work in the inspector.

	* swank.lisp (*inspector-dwim-lookup-hooks*)
	(default-dwim-inspector-lookup-hook): Deleted.
	(init-inspector): Sanitize arglist.
	(inspect-object): Don't return an :id for *inspectee-parts*.

	* swank-backend (type-for-emacs): Removed. No backend implemented
	it.

2007-08-23  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-fuzzy-upgrade-notice): New function.  Bound to
	the key where slime-fuzzy-complete-symbol used to be.

2007-08-22  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-close-all-parens-in-sexp): Fix interplay with
	`slime-close-parens-limit'. This should also affect
	`slime-complete-form' (C-c C-s) in a positive way.

2007-08-19  Helmut Eller  <heller@common-lisp.net>

	* contrib: New directory.  Move fuzzy completion code to that
	directory.

	* swank.lisp (swank-require): New function to load contrib code.
	(*find-module*, module-filename, *load-path*, merged-directory)
	(find-module, module-canditates): New. Pathname acrobatics for
	swank-require.

	* swank-loader.lisp: Compile (but don't load) contribs.
	(*contribs*, contrib-source-files): New.

2007-08-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-process-available-input): Correct yesterday's
	change: the buffer a request was originally performed in doesn't
	necessarily exist at this time anymore, so we check for buffer
	liveness now.

	 The problem arised when quitting in SLDB which would cause Swank
	 to send a `:debug-return' message before the acknowledgement
	 message for `sldb-quit' is sent. So the acknowledgement is
	 received in a context where the sldb-buffer is closed already.

2007-08-15  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-process-available-input): Make sure that the
	event received from SWANK is processed in the context of the
	original buffer the request of the response was performed in.
	Previously, the clauses of `slime-rex' were processed in the
	internal *cl-connection* buffer. And as a result the continuations
	passed to `slime-eval' and `slime-eval-async' ditto.

2007-08-15  Tobias C. Rittweiler  <tcr@freebits.de>

	Make `M-.' work on definitions outside the current restriction.
	`M-,' will also properly restore the narrowing as of before the
	jump. Similiarly for quiting from the compilation notes buffer and
	the Xref buffers.

	* slime.el (slime-narrowing-configuration, slime-emacs-snapshot),
        (current-slime-narrowing-configuration),
        (set-slime-narrowing-configuration),
	(current-slime-emacs-snapshot),
	(set-slime-emacs-snapshot),
	(current-slime-emacs-snapshot-fingerprint): New. Emacs' window
	configurations do not restore narrowing, so introduce a
	snapshot facility that contains the necessary information.

	* slime.el: Various renaming and adaptions in the Slime temp
	buffer, xref, goto-definition and compilation notes section to use
	the newly introduced snapshots instead of mere window
	configurations.

	* slime.el: (slime-highlight-notes, slime-remove-old-overlays):
	Still operate on whole buffer, but restore previous restriction if
	there was any.
        (slime-goto-location-position): Now widens the buffer to properly
	jump to definitions outside of the current restriction.

	* slime.el (slime-push-definition-stack),
	(slime-pop-find-definition-stack): Now also stores information
	about narrowing on the definition stack, in order to properly
	restore narrowing on `M-,'.

	* slime.el (def-slime-test narrowing): Test case for properly
	dealing with narrowing.

	* slime.el (slime-buffer-narrowed-p): New function, tests whether
	the current buffer is narrowed or not.
	(save-restriction-if-possibly): Like `save-restriction', but not
	as strict---see doc string.

	* slime.el (slime-length=): New function; semantically the same
	as (= (length seq) n), but more efficiently implemented for lists.
	Changed the above pattern into a call to SLIME-LENGTH= where
	appropriate.

2007-08-05  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (backtrace): Handle printer errors while printing a
	frame.  This makes debugging print-object methods with SLIME
	easier.  Reported by Utz-Uwe Haus.

2007-08-02  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-kill-all-buffers): Now also kills all buffers
	beginning with a `*SLIME' prefix (like, for instance, `*SLIME
	Apropos*', or `*SLIME macroexpansion*'.)

2007-06-28  Helmut Eller  <heller@common-lisp.net>

	* slime.el (def-slime-selector-method): Revert Marco's change from
	2007-05-23.  BODY can return a buffer name, like "*slime-events*".
	Handle that and never ignore invalid return values.  Force BODY to
	abort if there's no suitable buffer.  Why would you want to switch
	buffers if the desired buffer doesn't exist?

2007-06-27  Tobias C. Rittweiler  <tcr@freebits.de>

	Fixing `C-c M-q' at the REPL. Thanks to André Thieme for pointing
	out that it has been broken since several months.

	* slime.el (slime-reindent-defun): Use functions
	`slime-beginning-of-defun' and `slime-end-of-defun' that were
	introduced in the last changeset.

2007-06-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Pressing `C-M-a' (beginning-of-defun) in midst of the
	last REPL prompt directs the cursor to the beginning of the
	prompt. Pressing it again, would do nothing; now it moves the
	cursor to the start of the previous prompt (as it's consistent
	with the behaviour when the cursor was placed midst one of the old
	prompts.)

	Likewise for `C-M-e' (end-of-defun)

	Additionally fixing `C-c C-s' (slime-complete-form) at the REPL.

	(slime-keys): New bindings for `C-M-a' and `C-M-e' to
	SLIME-BEGINNING-OF-DEFUN and SLIME-END-OF-DEFUN respectively.
	(slime-keys): Making `C-c C-q' (slime-close-parens-at-point)
	obsolete, as it didn't work correctly on the REPL.
	(slime-repl-mode-map): Removed bindings for `C-M-a' and `C-M-e',
	as they're now inherited from SLIME-KEYS.
	(slime-repl-beginning-of-defun, slime-repl-end-of-defun): Jump to
	the previous (next) prompt if called twice in a row.

	(slime-close-parens-at-point): Commented out.
	(slime-close-all-sexp): Renamed to SLIME-CLOSE-ALL-PARENS-IN-SEXP.
	(slime-close-all-parens-in-sexp): Modified to take
	SLIME-CLOSE-PARENS-LIMIT into account.
	(slime-complete-form): Use SLIME-CLOSE-ALL-PARENS-IN-SEXP.


2007-05-24  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Fixed regression in completion: "swank[TAB]" would
	previously be completed to "swank-backend:"; "get-internal[TAB]"
	would be completed to "get-internal-r-time" (instead of simply
	"get-internal-r"); and "custom:*comp[TAB]" would be completed to
	"custom:*compiled-" on CLISP, even though there's a
	"custom:*complile-".

	Thanks to Ken Causey for helping me find the first two.

	(completions): Revert changes from 2007-05-11.
	(longest-compound-prefix): Fixed to properly generate a compound
	_prefix_.

2007-05-23  Marco Baringer  <mb@bese.it>

	* slime.el (def-slime-selector-method): Allow the selector body to
	not return a buffer. This means that, instead of being to forced
	to signal an error when a choosen buffer can't be found (like
	choosing d when there are no debugger buffers) can simply display
	a message.

	Fix handling of auto-flushing on sbcl:

	* swank-sbcl.lisp (*auto-flush-interval*): New variable
	controlling how often streams are flushed.
	(*auto-flush-lock*): New lock guarding access to the shared
	variable *auto-flush-streams*.
	(make-stream-interactive): Wrapped access to *auto-flush-streams*
	in a call-with-recursive-lock-held.
	(flush-streams): Wrapped in call-with-recursive-lock-held.

2007-05-17  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp (lispworks-inspect): Fix hanging caused by
	mapcan, i.e. nconc, on a constant list returned by
	label-value-line.

2007-05-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-complete-form): Only insert a closing
	parenthesis if the form is not already closed. Reported by and
	adapted from Mac Chan.

2007-05-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Fixed bug in completion as previously "swank:[tab]"
	would correctly list all the symbols in SWANK, but would
	simultaneously append a spooky dash to the original
	string ("swank:-").

	(completions): Strip off the package identifier part, and only
	compute the longest compound prefix for the actual symbol
	identifiers.
	(untokenize-symbol): New function. Inverse of TOKENIZE-SYMBOL.
	(format-completion-result): Use UNTOKENIZE-SYMBOL.

2007-05-17  Dustin Long  <dlong@stevens.edu>

	* swank-ecl.lisp (compile-from-stream): Fixed typo that prevented
	`slime-compile-defun' from actually compiling a function.

2007-05-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-loader.lisp (*sysdep-files*): Load the auxiliary files
	swank-source-*.lisp before swank-sbcl.lisp to avoid
	undefined-function style warnings.

2007-05-16  Takehiko Abe  <keke@gol.com>

	* swank.lisp (inspect-for-emacs file-stream, stream-error): Fixed
	typo in keyword arg; it's `:refreshp', not `:refresh'.

2007-05-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Fixed proper handling of the abortion of a
	request. (For instance, when calling (SWANK::ABORT-REQUEST "FOO")
	from the REPL.)

	(sldb-quit): Updated the DESTRUCTURE-CASE clause for (:abort) to
	take an argument.
	(sldb-continue): Likewise.
	(sldb-invoke-restart): Likewise.
	(sldb-break-with-default-debugger): Likewise.
	(sldb-return-from-frame): Likewise.
	(sldb-restart-frame): Likewise.
	(slime-repl-eval-string) Likewise.
	(slime-repl-show-abort): Now also inserts the reason for the abort
	into the REPL buffer.

	* swank.lisp (eval-for-emacs): Remove code that would suggest that
	it's possible to use the rex `(:abort ...)' with more than one
	argument.

2007-05-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Liberated from unnecessary style-warnings!

	(eval-for-emacs): Don't use SLOT-VALUE on condition objects!
	(inspect-bigger-piece-actions): Changed from DEFMETHOD to DEFUN.
	(inspect-whole-thing-action): Likewise.
	(inspect-show-more-action): Likewise.
	(make-symbols-listing): Adds an explicit DEFGENERIC.
	(menu-choices-for-presentation): Likewise.

	(make-symbols-listing (eql :classification)): Use `(loop for k
	being EACH hash-key ...)' rather than `(loop for k being THE
	hash-key)', to omit the justified style-warning from CLISP.

2007-05-14  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (package-names): Make sure to return a fresh list.
	(fuzzy-find-matching-packages): Use PACKAGE-NAMES.
	(list-all-package-names): Use PACKAGE-NAMES.

2007-05-13  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-pretty-lambdas): Removed. If you really want
	this, please use one of the external ressources that provide this;
	for instance, `pretty-lambda.el', `pretty-greek.el', or even
	`pretty-symbols.el'. For more information, please see

	   http://www.emacswiki.org/cgi-bin/wiki/PrettyLambda

2007-05-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (fuzzy-find-matching-symbols): Modified to take
	package nicknames into account. Previously, fuzzy completing on
	nicknames did (except for some incidental cases) not work. Thanks
	to Luís Oliveira and Attila Lendvai for pointing that out.

2007-05-11  Tobias C. Rittweiler  <tcr@freebits.de>

	Removed support for completing to the longest compound pre- and
	suffix with the default completion method (C-c TAB, or just TAB on
	the REPL), because it has been causing trouble all the time, but
	didn't offer any real advantage besides niftiness. E.g.:

	    previous behaviour:

	      asdf:*com TAB => asdf:*compile-file--behaviour*

	    now simply:

	      asdf:*com TAB => asdf:*compile-file-

	For discussing on this subject, please see the mail with
	message-id <87y7l53lch.fsf@freebits.de> that was posted to
	slime-devel 2007-04-06, or alternatively:

	http://common-lisp.net/pipermail/slime-devel/2007-April/006087.html

	* swank.lisp (make-compound-prefix-matcher): New function.
	Abstracted from COMPOUND-PREFIX-MATCH.
	(compound-prefix-match): Use MAKE-COMPOUND-PREFIX-MATCHER.
	(compound-prefix-match/ci/underscores): Removed.

	(longest-completion): Renamed to LONGEST-COMPOUND-PREFIX. Changed
	to only return a compound prefix, instead of a concatenation of a
	compound prefix and a compound suffix. Added an &optional
	parameter to specify what delimeter the passed string is
	compounded with.
	(tokenize-completion): Takes additional parameter to specify the
	delimeter for tokenization.
	(longest-completion/underscores): Removed; not needed anymore.
	(tokenize-completion/underscores): Likewise.
	(untokenize-completion/underscores): Likewise.

	(completions): Slight docstring modification, also added an
	examplary use case; use LONGEST-COMPOUND-PREFIX instead of
	LONGEST-COMPLETION.
	(completions-for-character): Use LONGEST-COMPOUND-PREFIX, and
	MAKE-COMPOUND-PREFIX-MATCHER.
	(completions-for-keyword): Use LONGEST-COMPOUND-PREFIX.

2007-05-11  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (apropos-symbols): Really use MAKE-REGEXP-MATCHER.

2007-05-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Previously when using SLIME-APROPOS-PACKAGE, only
	those symbols were considered whose home package matched the
	given package; this would, however, prevent all those symbols from
	being listed that are imported from another package, and then
	exported again in the package they got imported into. (As an
	example, SWANK:RESTART-FRAME is actually from SWANK-BACKEND.)

	(apropos-matcher): Renamed to MAKE-REGEXP-MATCHER.
	(make-regexp-matcher): Changed to only match for a given regexp.
	(apropos-symbols): Use MAKE-REGEXP-MATCHER.

2007-05-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Fix macroexpanding on things like ",(loop ...)".

	(slime-sexp-at-point-for-macroexpansion): New function; like
	SLIME-SEXP-AT-POINT-OR-ERROR, but fixes up some misbehaviour with
	respect to macroexpansion.
	(slime-eval-macroexpand, slime-eval-macroexpand-inplace): Use the
	new function.

2007-05-10  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Within the Slime Inspector, `S-Tab' will now also work
	 on X.  Furthermore `Tab' and `S-Tab' will now correctly wrap
	 around the beginning and end of the buffer; priorly it'd hang on
	 the beginning with a message "Beginning of buffer", and would
	 require an additional `S-Tab'.

	(slime-inspector-mode-map): Attached `[backtab]' to
	SLIME-INSPECTOR-PREVIOUS-INSPECTABLE-OBJECT, as Emacs translates
	`S-Tab' to `Backtab' on X.
	(slime-find-inspectable-object): New function; finds next or
	previous inspectable object.
	(slime-inspector-next-inspectable-object): Mostly rewritten. Use
	SLIME-FIND-INSPECTABLE-OBJECT to make the code clearer.

2007-04-19  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (label-value-line): Add :newline as &key
	argument; if true (the default) inserts a newline.

	* swank.lisp (inspect-for-emacs-list): Don't add a newline after
	the last value of the list.

2007-04-18  Marco Baringer  <mb@bese.it>

	* swank.lisp (log-event): Setup the printer so that, no matter
	what the global values of the *print-XYZ* variables, this function
	works as expected.
	(*debug-on-swank-error*): New variable.
	(defpackage :swank): Export *debug-on-swank-error*.
	(with-reader-error-handler): When *debug-on-swank-error* is
	non-nil drop into a debugger.
	(dispatch-loop): Idem.

2007-04-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Instead of just having all the symbols of a package
	listed alphabetically in the inspector page recently introduced
	for that purpose, add a button to that page to group them by their
	classification.

	(%package-symbols-container): New slot GROUPING-KIND.
	(%make-package-symbols-container): New function; wraps around
	%%MAKE-PACKAGE-SYMBOLS-CONTAINER, which will actually create the
	structure. We need this, to make GROUPING-KIND an entirely
	internal affair.

	(make-symbols-listing): New generic function to dispatch on
	GROUPING-KIND.
	(make-symbols-listing :symbol): Just the stuff that was priorly
	wired into INSPECT-FOR-EMACS (%PACKAGE-SYMBOLS-CONTAINER).
	(make-symbols-listing :classification): New; returns the passed
	symbols grouped by their classification.
	(inspect-for-emacs %package-symbols-container): Most code split
	off into MAKE-SYMBOLS-LISTING.

2007-04-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (swank-compiler): Fix the return value to always be a
	list of two elements even if the abort restart is invoked which
	originally just returned NIL. (Which wouldn't play with the recent
	change to use DESTRUCTURING-BIND in SLIME-COMPILATION-FINISHED.)

2007-04-17  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (inspect-for-emacs %package-symbols-container):
	Revert Marco's change from 2007-04-08; he had the good idea of
	adding a facility to jump to the relevant source line of a symbol,
	but `M-.' is already bound to SLIME-FIND-DEFINITION in the
	inspector, which is a nicer way of doing this alltogether.

2007-04-16  Takehiko Abe  <keke@gol.com>

	* swank-openmcl.lisp (accept-connection, find-external-format):
	utf-8 support.

2007-04-16  Marco Baringer  <mb@bese.it>

	* slime.el (slime-with-xref-buffer): Added missing ,

2007-04-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el: Pressing `q' in *compiler notes* after a `C-c C-k' or
	`C-c M-k' would not probably restore the original window
	configuration. Fix that.

	(slime-get-temp-buffer-create): New &key arg WINDOW-CONFIGURATION.
	(slime-with-xref-buffer): Likewise.

	(slime-compilation-finished): New &optional arg WINDOW-CONFIG.
	(slime-maybe-show-xrefs-for-notes): Likewise.
	(slime-show-xrefs) Likewise.
	(slime-maybe-list-compiler-notes): Likewise.
	(slime-list-compiler-notes): Likewise.

	(slime-compilation-finished-continuation): Renamed to
	SLIME-MAKE-COMPILATION-FINISHED-CONTINUATION.

	(slime-make-compilation-finished-continuation): Now takes two
	args, the current buffer and optionally the current window config
	to be restored.

	(slime-compile-file): Save current window configuration before
	popping up the REPL for compilation output, pass it down.
	(slime-easy-menu): Add entry for SLIME-UNTRACE-ALL.

2007-04-16  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (fuzzy-find-matching-packages): Fix a small typo that
	prevented interpreting NIL as the argument TIME-LIMIT-IN-MEC to
	mean an infinite time limit. This bug propagated up to explicit
	calls to FUZZY-COMPLETIONS, like
	   (swank:fuzzy-completions "mvb" "COMMON-LISP") => (NIL, T)

	(format-fuzzy-completions): Renamed to FORMAT-FUZZY-COMPLETION-SET

	(format-fuzzy-completion-set): Accomodated to recent changes of
	the return value of FUZZY-COMPLETIONS; changed the docstring to
	make it explicit that this function is supposed to take the return
	value of FUZZY-COMPLETION-SET.

	* slime.el (slime-compilation-finished): Don't use
	MULTIPLE-VALUE-BIND for list destructuring, only because multiple
	values happen to be implemented via lists in elisp!
	(slime-fuzzy-completions-mode): Added an detailed explanation to
	the docstring of how Fuzzy Completion works and how it'ss supposed
	to be worked with.
	(slime-fuzzy-explanation): Shortened to reference to
	SLIME-FUZZY-COMPLETIONS-MODE for help on fuzzy completion.
	(slime-fuzzy-choices-buffer): Set BUFFER-QUIT-FUNCTION to
	SLIME-FUZZY-ABORT to make it correctly exit fuzzy completion when
	pressing `Esc Esc Esc' (`M-Esc Esc').

2007-04-12  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (emacs-buffer-source-location): Add &allow-other-keys
	to the descructuring of the source location plist in order to accept
	:emacs-directory.

2007-04-09  Marco Baringer  <mb@bese.it>

	* swank.lisp (inspector-content-for-emacs): Look for refresh
	keyword argument in :action links.
	(inspect-whole-thing-action, inspect-show-more-action): Update for
	new :action argument handling.
	(inspect-for-emacs stream, inspect-for-emacs stream-error): Pass
	:refresh nil on :action links.
	(action-part-for-emacs): Set both lambda and refresh in the
	*inspectee-actions* array.
	(inspector-call-nth-action): *inspectee-actions* now holds both
	the function and the boolean specifying whether to refresh or not.

	* swank-backend.lisp (inspect-for-emacs): Docstring update.

	* slime.el (slime-inspector-operate-on-point): Allow the action
	calls to return nil.

2007-04-08  Marco Baringer  <mb@bese.it>

	* .cvsignore: Added *.lx64fsl (openmcl on linux fasls).

2007-04-08  Marco Baringer  <mb@bese.it>

	* swank.lisp (inspect-for-emacs): Added 'jump to source' action
	for symbols in the new package-symbol browser.

2007-04-08  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Implemented a new special inspector page for
	displaying internal (external, &c) symbols that display
	classification flags additionally to each symbol, similiar to the
	content of a *Fuzzy Completion* buffer.  Furthermore, added the
	possibility to display all symbols that are /present/ in a
	package. Combined with cleanup of the code parts in question.

	(symbol-status): New function. Returns the status of a symbol in a
	given package (:internal, :external &c.)

	(symbol-external-p): Adapted to use new function SYMBOL-STATUS.

	(symbol-classification->string): New function. Converts a list of
	classification flags into a concise string representation.

	(%package-symbols-container): New struct. We need a unique type to
	dispatch in INSPECT-FOR-EMACS for the new inspector page, use this
	as a wrapper structure.

	(inspect-for-emacs package): Reorganized to not cause too much eye
	cancer; now with a saner maximum column width. Changed to make use
	of new SYMBOL-STATUS, for code reuse. Also changed to make use of
	new %PACKAGE-SYMBOLS-CONTAINER to let a new page pop up in Emacs
	if the user wants to access the list of symbols of the package.
	Added such a possibility to access all `present' symbols.

	(inspect-for-emacs %package-symbols-container): New method.
	Displays all symbols wrapped up in the container structure
	combined with their classification flags as determined by
	CLASSIFY-SYMBOL.

2007-04-08  Luís Oliveira  <loliveira@common-lisp.net>

	* swank-backend.lisp (compute-sane-restarts): New interface.
	* swank-clisp.lisp: Fix tabs and trailing whitespace.
	(compute-sane-restarts): Implement new interface.

2007-04-08 Takehiko Abe  <keke@gol.com>

	* swank-openmcl.lisp (xref-locations):

2007-04-08  Marco Baringer  <mb@bese.it>

	* swank.lisp (fuzzy-completion-set): Use two check-type forms
	instead of a place like (values limit time-limit-in-msec). While
	sbcl seems to accept this form openmcl doesn't and it's not clear
	from the spec that this is allowed.

2007-04-07 Harald Hanche-Olsen  <hanche@math.ntnu.no>

	* slime.el (sldb-mode-map): Added key definition for follow-link.

2007-04-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Making fuzzy completion regard the time limit
	correctly. Also make it properly use microseconds as time
	granularity and inform the Emacs side if the time limit has
	exhausted. Additionally, over all minor and cosmetic changes:

	(fuzzy-completions, fuzzy-completion-set): Returns now
	additionally a flag indicating whether the time limit has
	exhausted under the hood. Accomodated docstring accordingly.

	(fuzzy-create-completion-set): Changed to correctly catch and
	propagate the remaining time limit to the actual match functions,
	and return once time limit has exhausted. Some aesthetical code
	reorganization.

	(get-real-time-in-msecs): New function.

	(fuzzy-find-matching-symbols, fuzzy-find-matching-packages):
	Correctly regard the time limit. Use new function
	GET-REAL-TIME-IN-MSECS for that purpose. Return the remaining
	time limit as second value.

	* slime.el (slime-fuzzy-complete-symbol): Accomodated to deal with
	the additionally returned flag of SWANK:FUZZY-COMPLETIONS. Pass
	the flag by.
	(slime-fuzzy-choices-buffer): Pass interruption flag by.
	(slime-fuzzy-fill-completions-buffer): If time limit has exhausted
	during completion retrieval, show an informational indication as
	last entry in *Fuzzy Completion*.
	(slime-fuzzy-last): New variable. To hold the last real completion
	choice previous to the (possible) Time Limit Exhausted information.
	(slime-fuzzy-next): Accomodated to not go beneath SLIME-FUZZY-LAST.

2007-04-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp (tokenize-symbol, tokenize-symbol-thoroughly):
	Previously these functions said a string representing a symbol is
	internal exactly if it contained "::" as substring. Now they say
	additionally so for symbols without any package identifier, as
	they are internal to am implicit current package. (Otherwise
	will break fuzzy completion.)

	(tokenize-symbol): Added docstring.

	* swank.lisp (format-completion-result): Fixed formation
	for the case that PACKAGE-NAME is NIL but INTERNAL-P is T.

2007-04-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Making fuzzy completion semantically right from a
	user perspective. As an example on SBCL, "sb:with- C-c M-i" will
	display all exported "with"-style macros in all sb-* packages from
	now on. :)

	(parse-completion-arguments): Replacing with a semantically-sound
	implementation, as the previous one was a bit confused. Clarifying
	docstring. Adding commentary table of various constellations of
	returned values for thorough explanation.

	(carefully-find-package): Removed. Obsolete by above change.

	(defstruct fuzzy-matching): Introduced to make internally-used
	datastructure explicit. Distinguishing ``completion chunks''
	between those pertaining to the symbol itself and those to the
	package identifier.

	(convert-fuzzy-completion-result): Renamed to
	FUZZY-CONVERT-MATCHING-FOR-EMACS.

	(fuzzy-convert-matching-for-emacs): Accomodating for the new
	datastructure. Only the chunks pertaining to the symbol itself are
	fixed up positionally, the package-chunks are untouched.
	Necessary for letting package identifiers be highlighted within
	*Fuzzy Completions* in cases like "sb:with- C-c M-i."

	(fuzzy-completion-set): Taking out most code to become new
	function FUZZY-CREATE-COMPLETION-SET.

	(fuzzy-create-completion-set): Doing all the hard work. Crux of
	this changeset. so to speak. Largly rewritten to accomodate all
	different cases of PARSE-COMPLETION-ARGUMENT.

	(fuzzy-find-matching-symbols, fuzzy-find-matching-packages):
	Accomodating to new datatstructure FUZZY-MATCHING. Adapting
	docstring accordingly.

	* swank-backend.lisp: Export WITH-STRUCT.

	* swank.lisp (eval-for-emacs, fuzzy-completions):
	Various trivia like fixing spelling and indentation.

2007-04-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-fuzzy-highlight-current-completion): Fix
	off-by-one error that causes the currently selected
	completion in the *Fuzzy Completion* buffer be highlighted
	one char too far.

2007-04-06  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank.lisp: Cleanup of parts of the fuzzy completion code.
	Additionally a couple of enhancements. As follows:

	(fuzzy-completions, fuzzy-completion-selected): Minor
	stylistic and clarifying modifications of the docstrings.

	(fuzzy-find-matching-symbols): Huge code reorganization.
	Organizing relevant code into local function TIME-EXHAUSTED-P,
	renaming local function SYMBOL-MATCH to PERFORM-FUZZY-MATCH,
	making previously required argument EXTERNAL to new &key
	argument :EXTERNAL-ONLY, clarifying docstring.

	(fuzzy-find-matching-packages): Making its return value
	conformant to that of FUZZY-FIND-MATCHING-SYMBOLS, i.e.
	instead of returning, among others, a package's name as
	string, it now returns a symbol representing the package.
	Accomodates the docstring accordingly.

	(fuzzy-completion-set): Minor typographical fix in docstring.
	Changing local function CONVERT to use MAP-INTO instead of
	doing it essentially manually. Accomodating to changes of
	FUZZY-FIND-MATCHING-SYMBOLS, resp. -PACKAGES.

	(fuzzy-completion-set):	Additional new feature:
	The returned completions are sorted alphabetically by the
	matched completion string before sorted by its score.
	Affects especially the list of all possible completions when
	the user hits fuzzy-completion on an empty string within Emacs;
	also makes the potential limitness of the listed completions
	clearer to the end user of SLIME.

	(classify-symbol): New function. Returns a list with keywords
	that classifies a given symbol. (E.g. :BOUNDP, :MACRO &c)
	Supersedes parts of CONVERT-FUZZY-COMPLETION-RESULT,
	implementing them in a more straightforward and proper way;
	removes prior KLUDGE in that part of the original function.

	(convert-fuzzy-completion-result): The above changes made
	it possible to simplify this function drastically. Now uses
	the newly introduced function CLASSIFY-SYMBOL.

	* slime.el: Minor stylistic changes. Additionally:
	(slime-fuzzy-insert-completion-choice):
	(slime-fuzzy-fill-completions-buffer) : Adding use of the
	:PACKAGE classification flag returned by SWANK:FUZZY-COMPLETIONS.
	This flag is called "p".

2007-04-06  Neil Van Dyke  <neil@neilvandyke.org>

	* slime.el (sldb-insert-frame): Added mouse-face to frame label
	and expression in Backtrace.
	(sldb-insert-frames): Added mouse-face to "--more--" label in
	Backtrace.

2007-04-06  Michael Weber  <michaelw+slime@foldr.org>

	* slime.el (slime-call-defun): insert the closing parenthesis for
	the form.

2007-04-06  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp (package swank-mop): Added
	slot-makunbound-using-class.

2007-03-29  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (swank-compile-string): save the original
	directory into the source plist as :emacs-directory.
	(make-definition-source-location): use the :emacs-directory from
	the source plist and guess-readtable-for-filename to determine the
	correct readtable for string-compiled definitions.

2007-03-29  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (*macroexpand-printer-bindings*): add *print-lines*
	to defaults (NIL).
	(find-definitions-for-emacs): use unless instead of cond.

2007-03-25  Douglas Crosher  <dcrosher@common-lisp.net>

	* slime.el (with-selected-window): define for compatibility with
	Emacs 21.

2007-03-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (menu-choices-for-presentation): Offer a
	"disassemble" menu item for functions.

2007-03-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-read-port-and-connect): Fix race condition:
	retry one more time if the port file is empty. Pop up the debugger
	on other errors.
	(slime-attempt-connection): Moved to toplevel.
	(slime-timer-call): New. Used by slime-attempt-connection.
	(slime-cancel-connect-retry-timer): New.
	(slime-abort-connection): Use it.
	(slime-repl-insert-prompt): Use insert-before-markers. This fixes
	some redisplay problems, but I don't know why.  Also: remove the
	timer for async output.
	(slime-repl-move-output-mark-before-prompt): Removed.
	(slime-repl-save-merged-history): Use with-temp-message.
	(slime-goto-location-buffer): Support Zip files.
	(sldb-quit): Don't print "Evaluation aborted".

2007-03-22  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-scratch-buffer): Respect the syntax text
	properties of presentations.

2007-03-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (lookup-presented-object): The presentation id of
	frame locals now includes the thread id; ignore it for now.

	* slime.el (slime-copy-presentation-at-mouse-to-point): Manually
	invoke the after-change function, so that the presentation overlay
	is created even if we paste to non-REPL buffers.
	(slime-menu-choices-for-presentation): Evaluate
	menu-choices-for-presentation-id in the right buffer, thus in the
	right Lisp thread.  Reported by Attila Lendvai.
	(slime-menu-choices-for-presentation): Show the id of the presentation.
	(sldb-insert-locals): Include the thread id in the presentation id.

2007-03-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-eval-string, slime-repl-insert-result):
	Support the presentation-less old protocol.
	(slime-goto-location-position): Use column number if available.

2007-03-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (completion-output-symbol-converter): Fix completion
	for mixed-case symbols that need escaping in readtable-case
	:upcase or :downcase.

	* slime.el (slime-copy-presentation-at-mouse-to-point)
	(slime-copy-presentation-at-mouse-to-kill-ring): New commands.
	(slime-menu-choices-for-presentation): Change interface.  New
	menu options, Copy to kill-ring, Copy to point.
	(slime-presentation-menu): Change call to
	slime-menu-choices-for-presentation.

2007-03-20  Takehiko Abe  <keke@gol.com>

	* swank-openmcl.lisp (hash-table-weakness): fix typo

2007-03-14  Christophe Rhodes  <csr21@cantab.net>

	* slime.el (slime-search-suppressed-forms): handle multiple
	conditionals on the same line.

2007-02-26  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (inspect-for-emacs): Add support for inspecting
	non-decodable float entities like NaNs and infinities.

2007-02-25  Tobias C. Rittweiler  <tcr@freebits.de>

	* swank-backend.lisp (inspect-for-emacs): Remove reference to
	inexistent argument from docstring.

2007-02-25  Harald Hanche-Olsen  <hanche@math.ntnu.no>

	* slime.el (slime-init-keymaps): Use vectors when defining keys,
	because e.g. (define-key (string ?\C-c) ...) doesn't work in the
	emacs-unicode-2 branch.  Some strings are still there.

2007-02-25  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-delete-swank-port-file): Don't use
	display-warning; that's not available everywhere.
	(slime-repl-update-banner): Insert the date only if the buffer is
	empty.
	(slime-list-compiler-notes): Fetch the notes only if called
	interactively.
	(slime-set-query-on-exit-flag): New function, to avoid compiler
	warnings about obsolete function process-kill-without-query.
	(slime-defun-if-undefined): Perform the test at runtime not at
	compile time.  Reported by Lennart Staflin.

	* swank.lisp (guess-package): Renamed from
	guess-package-from-string.
	(set-package): Use it.

2007-02-22  Juho Snellman  <jsnell@iki.fi>

	* slime.el (slime-start-lisp): Don't cd if no directory was specified.
	(slime-maybe-start-lisp): Pass directory argument to slime-start-lisp
	also in other cond branch.
	(slime-restart-sentinel): Pass a NIL directory to slime-start-lisp.

2007-02-21  Marco Baringer  <mb@bese.it>

	* slime.el (slime-start): Added :directory argument and pass it to
	slime-maybe-start-lisp.
	(slime-maybe-start-lisp): Added directory argument and pass it to
	slime-start-lisp (but not slime-reinitialize-inferior-lisp-p)
	(slime-start-lisp): Added directory argument. Used to set buffer's
	directory before starting the inferior lisp.

2007-02-17  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-find-tag-if-tags-table-visited): New function.
	(slime-edit-definition-fallback-function): Offer it as a value
	for customization.

2007-02-05  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (sldb-insert-locals): Repair presentation markup of
	frame locals.

2007-02-04  António Menezes Leitão <aml@gia.ist.utl.pt>

	* swank-lispworks.lisp (dspec-file-position): Bind
	*compile-file-pathname*, *compile-file-truename*, *load-pathname*
	and *load-truename* in dspec-file-position.

2007-02-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-write-string): When writing a :repl-result,
	update the slime-output-end marker for the purpose of asynchronous
	output (when *use-dedicated-output-stream* is true).
	Reported by Madhu <enometh@meer.net>.

2007-02-03  Marco Baringer  <mb@bese.it>

	* slime.el (slime-delete-swank-port-file): Fix typo in
	warning message.

2007-02-02  Marco Baringer  <mb@bese.it>

	Warn, as opposed to bailing out with an error, when deleting the
	port file fails. Patch by: Samium Gromoff
	<_deepfire@feelingofgreen.ru>

	* slime.el (slime-delete-swank-port-file): New function.
	(slime-inferior-connect): Use slime-delete-swank-port-file.
	(slime-read-port-and-connect): Use slime-delete-swank-port-file.

2007-01-31  Marco Baringer  <mb@bese.it>

	* slime.el (slime-repl-update-banner): Restore animation.
	(slime-startup-animation): restore.

2007-01-30  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-complete-symbol-function): Restore old default.
	(set-keymap-parents): Deleted.
	(slime-startup-animation): Deleted.
	(slime-read-from-minibuffer): Don't use defun*.
	(slime-repl-terminate-history-search): New.
	(slime-repl-next-matching-input): Use it.

	* slime-autoloads.el: New file.

2007-01-29  Sean O'Rourke  <sorourke@cs.ucsd.edu>

	* slime.el (slime-start): Continue even if the user, after
	prompting, didn't recompile the stale .elc file.
	(slime-urge-bytecode-recompile) [xemacs]: Abort immediately if the
	user doesn't want to continue.
	(slime-recompile-bytecode): Don't use byte-compile-warning-types;
	it may not exist in XEmacs.

2007-01-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-recenter-region): Use count-screen-lines instead
	of count-lines.

	* swank.lisp (unparse-name): New function.
	(list-all-package-names): Use it.  This fixes a bug related to
	readtable-case and makes package name completions look prettier.
	Suggested by Harald Hanche-Olsen <hanche@math.ntnu.no>.

2007-01-24  Bill Clementson <billclem@gmail.com>

	* slime.el (slime-call-defun): Put the docstring before
	the (interactive) form so that "C-h f slime-call-defun" will
	return it.

	* slime.el (slime-scratch-mode-map): Changed parent keymap to
	lisp-mode-map to prevent unnecessary duplication of slime-mode-map
	bindings and so that lisp-mode-map key bindings are present in the
	slime scratch buffer. Change identified by Ariel Badichi.

2007-01-20  Luke Gorrie  <luke@synap.se>

	* slime.el (slime): Use COMMAND and CODING-SYSTEM parameters
	Previously they were ignored.

2007-01-17  Christian Lynbech  <christian.lynbech@ericsson.com>

	* slime.el (slime-init-command): Use expanded files when writing
	the LOAD form for swank.

2007-01-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Cleanups for the repl history code.
	(slime-repl-mode-map): Don't shadow M-C-d.
	(slime-repl-history-replace): Simplified.
	(slime-repl-history-search-in-progress-p): New.
	(slime-repl-position-in-history): If there's no match return
	out-of-bound positions instead of nil.
	(slime-repl-add-to-input-history): Never modify the argument.
	(slime-repl-previous-input): Renamed from
	slime-repl-previous-input-starting-with-current-input.
	(slime-repl-next-input): Renamed from
	slime-repl-next-input-starting-with-current-input
	(slime-repl-forward-input): Renamed from slime-repl-next-input.
	(slime-repl-backward-input): Renamed from
	slime-repl-previous-input.
	(slime-repl-history-pattern): Renamed from
	slime-repl-matching-input-regexp.
	(slime-repl-delete-from-input-history): Simplified.

	(slime-repl-history-map)
	(slime-repl-history-navigation-neutral-commands)
	(slime-repl-jump-to-history-item)
	(slime-repl-previous-or-next-input)
	(slime-repl-starting-with-current-input-regexp)
	(slime-repl-continue-search-with-last-pattern)
	(slime-repl-previous-or-next-matching-input): Deleted.

	(sldb-list-locals, sldb-list-catch-tags): Deleted. Aren't of much
	use anymore.

2007-01-12  Helmut Eller  <heller@common-lisp.net>

	* swank-clisp.lisp: Better classification on frames on the stack.
	Make variables in eval frames accessible to the debugger.
	(frame-type, *frame-prefixes*, frame-to-string, is-prefix-p)
	(frame-string-type, boring-frame-p): New.
	(%frame-count-vars, %frame-var-name, %frame-var-value)
	(frame-venv, next-venv, venv-ref, %parse-stack-values): Replaces
	old frame-do-venv.
	(extract-frame-line, extract-function-name, split-frame-string)
	(string-match): New code to print frames.
	(frame-locals, frame-var-value): Use the new stuff.

	(inspect-for-emacs): Fix various bugs.

	* swank-loader.lisp (compile-files-if-needed-serially): Don't wrap
	everything in a compilation unit.  If we abort on load errors and
	it is confusing to see compiler warnings after the abort message.
	(handle-loadtime-error): CLISP's format implements ~< differently
	as everybody else, so use a explicit pprint-logical-block instead.

	* swank.lisp (list-all-systems-in-central-registry): Don't
	reference asdf directly, that leads to read errors in some
	systems.

2007-01-12  Juho Snellman  <jsnell@iki.fi>

	* slime.el (slime-read-expression-map): Switch the slime-mode-map
	and minibuffer-local-map back the way they were. The previous change
	was made due to a misunderstanding, caused by a keybinding for
	[(return)] apparently being more specific than one for (kbd "RET"),
	even when the former is in a parent keymap and the latter in the
	child.

2007-01-12  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (handle-request): Use 'abort as restart name, but
	bind *sldb-quit-restart* to the restart returned by find-restart.
	Also use a slighly friendlier message, because newbies seem to
	invoke the ABORT restart instead of pressing q in the debugger.

2007-01-12  Edi Weitz  <edi@agharta.de>

	* slime.el (slime-find-asd): Remove file extension.

	(slime-read-system-name): Use SWANK:LIST-ASDF-SYSTEMS.

	* swank.lisp (list-all-systems-in-central-registry): Use only
	pathname name.

	(list-all-systems-known-to-asdf): New function.

	(list-asdf-systems): New function.

2007-01-12  Marco Baringer  <mb@bese.it>

	* slime.el (slime-keys): Remove binding of M-*, restore binding of
	M-,.

2007-01-11  Edi Weitz  <edi@agharta.de>

	* slime.el (slime-repl-test-system, slime-repl-test/force-system):
	New REPL shortcuts.  Patch by Kevin Rosenberg
	<kevin@rosenberg.net>.

2007-01-11  Juho Snellman  <jsnell@iki.fi>

	* slime.el (slime-read-expression-map): restore tab completion in
	the minibuffer. Switch the slime-mode-map and minibuffer-local-map
	around, so that the minibuffer binding for return takes precedence
	over the slime-mode one.

2007-01-11  Marco Baringer  <mb@bese.it>

	* swank.lisp (inspect-for-emacs integer): Don't die if the integer
	can't be expressed as a float.  Patch by Ariel Badichi
	<abadichi@bezeqint.net>.

	* slime.el (slime-keys): Removed binding of M-,

2007-01-11  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Some cleanups for the debugger code: add some outline
	sections and docstrings.

	(sldb-setup): Always display the beginning of the condition
	text. Previously, we always showed the beginning of the backtrace.

	(sldb-prune-initial-frames): Do what the docstring says. Reverted
	to Luke's version.

	(sldb-dispatch-extras): Fix typo.

	(sldb-insert-restarts, sldb-insert-frames)
	(sldb-insert-frame, sldb-fetch-more-frames)
	(sldb-toggle-details, sldb-show-frame-details)
	(sldb-insert-locals): Simplified.
	(sldb-frame-details): New.

	(slime-save-coordinates, slime-coordinates)
	(slime-restore-coordinate, slime-count-lines): New macro and its
	helpers.
	(sldb-recenter-region): Renamed from slime-maybe-recenter-region.

	(sldb-enable-styled-backtrace, sldb-show-catch-tags)
	(sldb-highlight): Deleted. Seem to be obsolete.
	(sldb-add-face): Removed, because it is now the same as
	slime-add-face.

	(sldb-help-summary): Deleted. The docstring for sldb-mode is
	already pretty terse.
	(define-sldb-face): Renamed from def-sldb-face.

	* swank-sbcl.lisp, swank-cmucl.lisp (condition-extras): Fix typo

2007-01-10  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*sldb-printer-bindings*): Add *print-right-margin*.
	(debug-in-emacs): Bind *sldb-printer-bindings* here ...
	(backtrace, debugger-info-for-emacs, frame-locals-for-emacs):
	... and remove redundant bindings here.

2007-01-10  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el: FIX: set-keymap-parents for GNU Emacs was bogus, fixed
	by Ariel Badichi.

2007-01-09  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-merge-histories): Use (setf (gethash ...)
	instead of puthash, for Emacs 20.

2007-01-09  Juho Snellman  <jsnell@iki.fi>

	SBCL 1.0.1.15 supports restart-frame natively, and uses a different
	debug catch tag interface than earlier versions.

	* swank-sbcl (sbcl-with-restart-frame): New function, detects SBCL
	1.0.1.15 or later.
	(return-from-frame): Another version for 1.0.1.15, using
	sb-debug:unwind-to-frame-and-call
	(restart-frame): Another version for 1.0.1.15, using
	sb-debug:unwind-to-frame-and-call

2007-01-07  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (open-streams): Don't pass nil to make-fn-streams;
	use a dummy function as workaround.  Both arguments must be
	functions and CMUCL checks the types.

2007-01-06  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el: Added set-keymap-parents when not available (GNU
	Emacs). Result: slime bindings while reading expressions from the
	minibuffer.

	* slime.el, swank.lisp: FIX: slime-insert-possibly-as-rectange and
	sldb stuff on newer emacsen

2007-01-04  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el: Added slime-insert-possibly-as-rectangle and use it
	when inserting things here and there. The effect of this is that
	multi-line strings coming from swank (e.g. stuff in sldb) are
	inserted with insert-rectangle, so they are properly indented.

	* swank.lisp: FIX: sort is destructive, call copy-seq at a few
	places. FIX: bind *sldb-printer-bindings* also in
	frame-locals-for-emacs.

2007-01-03  Attila Lendvai  <attila.lendvai@gmail.com>

	* swank.lisp: FIX: drop extra "Slots: " from standard-object's
	inspector presentation

	* swank.lisp: FIX: keyword symbols keep their : when travelling
	from swank to slime

	* slime.el: FIX: older Emacsen have no line-number-at-pos.

	* slime.el: Convert some minibuffer reading defun's to defun* and
	use keywords. Support extra arguments.

	* slime.el: Use set-parent-keymaps when available (xemacs only for
	now) when setting up slime-read-expression-map. The effect of this
	is that the minibuffer will have all the slime-mode-map keys where
	minibuffer-local-map is not overriding.

	* slime.el, swank.lisp: Handle better the case when swank can not
	read anything from the string sent to be inspected. Only bring up
	the debugger when the inspect command is prefixed.

2006-12-31  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Restore the nested-presentations feature.

	* present.lisp (slime-stream-p): Allow sending presentations to
	the repl-results stream.
	(make-presentations-result): Removed.
	(send-repl-results-to-emacs): New.

	* swank.lisp (connection): New slot repl-results (a stream).
	(make-output-function-for-target): New.
	(open-streams): Use it here to also create a stream for REPL results.
	(initialize-streams-for-connection): Store the stream.

2006-12-29  Edi Weitz  <edi@agharta.de>

	* slime.el (slime-find-asd, slime-read-system-name): Only offer
	initial input if system is really in central registry.

2006-12-29  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Simplify the REPL-results protocol.  The results are now printed
	using special :WRITE-STRING events from the Lisp side.

	* slime.el (slime-repl-insert-prompt): Don't insert a result, only
	the prompt.
	(slime-repl-insert-result): Removed.
	(slime-repl-eval-string, slime-repl-show-abort)
	(slime-repl-set-package, slime-output-buffer)
	(slime-repl-update-banner): Change all callers.
	(slime-dispatch-event): Event :WRITE-STRING gets an
	optional argument TARGET, which controls where the string is
	inserted.
	(slime-write-string): Handle targets NIL (regular process output)
	and :REPL-RESULT.

	* swank.lisp (make-presentations-result): Removed.
	(send-repl-results-to-emacs): New function, sends :WRITE-STRING events.
	(listener-eval): Use it here instead of make-presentations-result.

2006-12-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Performance improvement for slime-autodoc-mode, in particular when
	there are REPL results that are long lists.

	* slime.el (slime-repl-mode-beginning-of-defun)
	(slime-repl-mode-end-of-defun): New.
	(slime-repl-mode): Use them as beginning-of-defun-function and
	end-of-defun-function.
	(slime-enclosing-operator-names): Bind
	parse-sexp-lookup-properties to nil, don't parse more than 20000
	characters before point, don't determine exact argument positions
	larger than 64.  Byte-compile this function.

2006-12-24  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el, swank.lisp: Added customizable dwim lookup hook
	support for inspect

	* doc/slime.texi: Small doc fixes by Alfredo Beaumont

	* swank.lisp: Change the order to [set value] [make unbound]. Sort
	slot names in the inspector

2006-12-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank-clisp.lisp (make-weak-key-hash-table)
	(make-weak-value-hash-table): Implement for CLISP, so that the
	REPL results history does not cause "memory leaks".

	* slime.el (slime-inspect): Add a dwim-mode keyword argument, move
	all input handling into the interactive spec.  Restore the
	behavior of slime-inspect when point is within a presentation (no
	prompting, no DWIM).
	(slime-inspect-presentation-at-mouse): Don't do DWIM here, so the
	presentation-retrieval expression does not end up on the inspector
	stack.
	(slime-inspector-position): New.
	(slime-inspector-operate-on-point, slime-inspector-reinspect): Use
	it here to make it work on GNU Emacs too.
	(slime-open-inspector): Fix row-col addressing at end of buffer.

2006-12-20  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el: FIX: inspecting presentations from the right click
	menu broke in the inspect refactor

	* slime.el: FIX: slime-fuzzy-target-buffer-completions-mode's
	keymap must always precede other keymaps

	* slime.el, swank.lisp: Extend :write-string with and &optional
	presentation id and use this in present-in-emacs

	* swank.lisp: Added present-in-emacs that prints a presentation of
	the given object in the repl

	* swank.lisp: Return the inspected object when inspecting from the
	lisp side.

	* swank.lisp: Turn off right margin for restart printing, too

2006-12-19  Attila Lendvai  <attila.lendvai@gmail.com>

	* HACKING: Added useful init.el piece into HACKING about
	update-change-log

	* swank.lisp: In all-slots-for-inspector pad slot names to be
	equal length, so the result is more readable

	* slime.el: Fix slime-insert-presentation to handle multi-line
	presentations better (use insert-rectangle)

	* swank.lisp: Properly bind *sldb-printer-bindings* and turn off
	right margin while printing stuff in sldb

	* slime.el: Smarten up the sldb heuristic that drops swank frames

	* swank-allegro.lisp, swank-backend.lisp, swank-openmcl.lisp,
	swank-sbcl.lisp, swank.lisp: Added hash-table-weakness and use it
	in hash-table-inspecting

	* swank.lisp: Hashtable inspecting: added [clear hashtable]
	and [remove entry] actions

	* slime.el, swank.lisp: FIX dwim inspecting to handle (setf
	some-fun) functions, too

	* slime.el: FIX: slime-sexp-at-point for foo::|bar::baz|

	* slime.el: FIX: Properly keep track of slime-buffer-package in
	the inspector

	* swank.lisp: Small: get rid of notes and warnings

	* slime.el, swank.lisp: Added dwim-mode to slime-inspect that
	tries to be smart unless prefixed

	* slime.el: Make slime-fuzzy-complete-symbol the default in the
	belife that it's better for new users

	* swank.lisp: Add (expt 1.2 length) higher scores for longer
	matches in fuzzy completion. A good example: puts "make-instance"
	before "make-string-input-stream" while completing "make-ins"

	* slime.el: Set slime-fuzzy-completion-in-place enabled by default

	* slime.el: Added (cons row col) addressing to
	slime-open-inspector, use in slime-inspector-operate-on-point

	* slime.el: FIX: operate the inspector in the debug thread when
	started from sldb

	* slime.el: Convert some inspector defuns to defun* and use
	keywords. Other minor cleanups.

2006-12-18  Marco Baringer  <mb@bese.it>

	* slime.el (slime-region-for-defun-at-point): end-of-defun and
	beginning-of-defun modify match-data, added a save-match-data to
	prevent this from affecting callers of
	slime-region-for-defun-at-point.

2006-12-15  Edi Weitz  <edi@agharta.de>

	* swank-lispworks.lisp (make-weak-key-hash-table): Weak hash
	tables for Lispworks.
	(make-weak-value-hash-table): Ditto.

2006-12-14  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*sldb-printer-bindings*): *PRINT-LINES* is in
	effect only if *PRINT-PRETTY* is non-NIL, so it better to enable
	the pretty printer.  Suggested by Madhu <enometh@meer.net>.

	* slime.el (slime-expand-abbreviations-and-complete): Emacs
	`choose-completion' (choosing a completion from the *Completions*
	buffer) always replaces text upto (point). So the code which
	figures out an `unambiguous-completion-length' and places the
	point there in `slime-expand-abbreviations-and-complete' causes
	problems: the replacement text gets garbled.  Get rid of the bogus
	`unambiguous-completion-length'.  Patch by Madhu <enometh@meer.net>

	* swank-cmucl.lisp (remove-gc-hooks): The variables
	EXT:*GC-NOTIFY-AFTER* and EXT:*NOTIFY-BEFORE* should hold
	functions and should be NIL. This affects the function
	REMOVE-GC-HOOKS in swank-cmucl.lisp which sets them to
	NIL, (should one happen to use it).  Set them back to the original
	parameters.  Patch by Madhu <enometh@meer.net>

	* slime.el (slime-repl-output-mouseover-face): Fix a pair of extra
	parens.  Patch by Madhu <enometh@meer.net>

2006-12-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-search-buffer-package): Remove Xemacs special
	casing.  There's already a compatibility defun for
	match-string-no-properties.

2006-12-13  Attila Lendvai  <attila.lendvai@gmail.com>

	* swank.lisp: FIX: fuzzy completion for M-V-B. Fix by Madhu.

2006-12-12  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank.lisp (inspect-for-emacs integer): Pad the hex formatted
	value to eight digits, "Code-char:" instead of "Corresponding
	character:", "Integer-length:" instead of "Length:",
	"Universal-time:" instead of "As time".
	(inspect-object): Use TYPE-FOR-EMACS instead of TYPE-OF.
	(inspect-in-emacs): New function, analogous to ED-IN-EMACS.

	* swank-backend.lisp (type-for-emacs): New generic function,
	defaults to TYPE-OF for non-integers, and returns FIXNUM or BIGNUM
	for integers.

	* slime.el (destructure-case): Indicate in the error message that
	it was the Elisp destructure-case that failed to avoid confusion.
	(slime-check-eval-in-emacs-enabled): More verbose error message.

2006-12-11  Attila Lendvai  <attila.lendvai@gmail.com>

	* swank.lisp: Added [set value] command for slot inspecting

	* slime.el: Work on repl history navigation, restore old M-p/M-n
	behaviour due to #lisp demand

	Also print the current regexp in the minibuffer messages.  M-p/M-n
	takes the repl input up to the point not the entire input as it
	did before.
	slime-repl-previous/next-input-starting-with-current-input: new
	names for the old M-p/M-n commands History navigation commands
	jump to the end of buffer when point is before the prompt.

	* slime.el: Fix/smarten up temp-buffer-quit

	Now it tries its best to remember the original window config and
	restore it at slime-temp-buffer-quit unless it was changed
	meanwhile. IOW, fix "q" after macroexpand in a macroexpand buffer
	not closing the temp window.
	Also fix the compiler notes usage of the temp buffer.

	* swank-backend.lisp, swank.lisp:
	Added inspect-slot-for-emacs to let users customize it.

	Use all-slots-for-inspector everywhere, render link to both the
	effective and direct slots when both are available.  Dropped
	slot-value-using-class-for-inspector and friends.  Added
	slot-makunbound-using-class to the swank-mop package and added
	a [make-unbound] action to the standard slot presentation.

	* slime.el: FIX: slime-symbol-name-at-point for symbols like
	foo::|bar::baz|

	* .cvsignore, swank.lisp: FIX: Drop #\. and add #\, to escaped
	symbol chars

	* slime.el: Added slime-repl-delete-from-input-history that
	deletes the current history entry when no input is supplied

	* slime.el: slime-repl-kill-input kills the entire input when
	point is at the prompt and resets the history navigation state

	* slime.el:
	Use a hashtable to remove duplicates in slime-repl-merge-histories

2006-12-07  Marco Baringer  <mb@bese.it>

	* swank.lisp (init-inspector): Added eval parameter. If NIL we
	don't eval FORM but limit our selves to cl:read'ing it and
	inspecting that value.

	* slime.el (slime-inspect): If a prefix argument is provided pass
	:eval nil to swank:init-inspector.

2006-12-07  Paul Collins  <paul@briny.ondioline.org>

	* hyperspec.el (common-lisp-hyperspec): Strip all text properties
	from the symbol-at-point to avoid problems with read-only text.

2006-12-06  Marco Baringer  <mb@bese.it>

	* slime.el (slime-search-buffer-package): Don't call
	match-string-no-properties if it's not defined (as is on some
	xemacs')
	(slime-repl-clear-buffer): Added optional prefix argument
	specifying how many lines to leave.

2006-12-06  Johan Bockgård  <bojohan+sf@dd.chalmers.se>

	* swank.lisp (fuzzy-completion-set): Don't mix for clauses and
	body clauses in loop.

2006-12-05  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (create-swank-server): Removed. Use create-server
	instead.

	* slime.el (slime-first-change-hook): Don't do anything if buffers
	file doesn't exist.
	(slime-start, slime-set-connection-info): Add support for a
	:init-function which is called after the usual initialization of the
	connection is completed.

	* swank-source-file-cache.lisp (buffer-first-change): Always
	return nil and remove the now redundant test with probe-file.

	* swank-backend.lisp (guess-external-format): Return nil if the
	file can't be opened.  Previusly we wrongly read from stdin.

2006-12-05  Juho Snellman  <jsnell@iki.fi>

	Real xref support for SBCL (requires SBCL 1.0.0.18).

	* swank-sbcl.lisp (who-calls): New function, fetch xref data from
	sb-introspect.
	(who-binds): Ditto.
	(who-sets): Ditto.
	(who-references): Ditto.
	(who-macroexpands): Ditto.
	(defxref): New macro, create the above functions.
	(source-location-for-xref-data): New, map from sb-introspect xref
	format to the Swank xref format.
	(sanitize-xrefs): Map PCL method names to something more readable.
	(string-path-snippet): New function, finds a more accurate source
	snippet for definition source locations which have both an
	:emacs-string and a full source path available. Otherwise the xref
	location would point to the toplevel form rather than the exact
	form for functions compiled with C-c C-c.
	(source-file-position): New function, somewhat like
	source-path-file-position but uses the source-file cache, handles
	missing form-paths more gracefully.
	(make-definition-source-location): Use the above two functions.
	(sbcl-with-xref-p): New function, detect whether SBCL has xref support
	for backwards compability.

2006-11-26  Juho Snellman  <jsnell@iki.fi>

	* swank-source-file-cache.lisp (buffer-first-change): Check
	whether a file exists before trying load it into the source cache.

2006-11-26  Juho Snellman  <jsnell@iki.fi>

	Restore the way M-n and M-p used to work in the REPL. (cherry-picked
	from a patch with other changes, sent by Attila Lendvai).

	* slime.el (slime-repl-previous-input-starting-with-current-input)
	(slime-repl-next-input-starting-with-current-input): New functions,
	work like the old slime-repl-previous-input / next-input.
	(slime-repl-matching-input-regexp): Restore old version.
	(slime-repl-mode-map): Bind s-r-p-i-s-w-c-i and s-r-n-i-s-w-c-i
	to M-p and M-n respectively. slime-repl-previous-input and
	slime-repl-next-input are still accessible with C-up / C-down.

2006-11-25  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-read-break): Use a :emacs-interrupt message
	instead of a RPC to swank:simple-break.  Suggested by Taylor R.
	Campbell.

2006-11-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-search-buffer-package): Prettify the package
	name if it is written as string or keyword.

2006-11-23  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-in-expression-p): Use `read' and `eq' to test
	the first element of the list.  Previuosly, the pattern (foo)
	wrongly matched (foobar) because we used (looking-at <symbol>).

	* swank-cmucl.lisp (setf-definitions): Also include defs which
	were created with (defun (setf NAME) ...).  Previously we only
	found definitions created with defsetf or define-setf-expander.

2006-11-22  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-edit-definition): Don't hide error messages.

2006-11-21  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*coding-system*): "Coding systems" are now strings
	instead of keywords.

2006-11-19  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-compile-file): Let the Lisp side choose the
	coding system.
	(slime-coding): Deleted.

	* swank.lisp (compile-file-for-emacs): Use guess-external-format.
	(swank:create-server): no more accepts an  :external-format 'enc ,
	use  :coding-system "enc"  instead.

	* swank-backend.lisp (find-external-format)
	(guess-external-format): New.
	(swank-compile-file): The external-format argument is now a
	backend specific value returned by find-external-format.

	* swank-cmucl.lisp, swank-sbcl.lisp, swank-clisp,
	swank-lispworks.lisp, swank-allegro.lisp, swank-corman.lisp,
	swank-ecl.lisp, swank-scl.lisp, swank-abcl.lisp, swank-openmcl:
	Update implementations accordingly.

	* swank-source-file-cache.lisp (read-file): Use guess-external-format.

	* swank.lisp (*swank-wire-protocol-version*): Is now initialized
	by the loader.
	(wire-protocol-version): Removed, because it contained a reference
	to swank-loader::*source-directory*.

	* slime.el (slime-set-connection-info): On protocol version
	mismatch, ask the user how to proceed.
	(slime-protocol-version): New variable. Initialize it at compile
	time to detect stale elc files.

	* swank-loader.lisp (load-swank): Set the protocol version.

2006-11-12  Marco Baringer  <mb@bese.it>

	* slime.el (slime-make-tramp-file-name): Added (require 'tramp)
	since tramp-make-tramp-file-name is not an autoloaded function.

2006-11-07  Edi Weitz  <edi@agharta.de>

	* slime.el (slime-fuzzy-completion-time-limit-in-msec): Escaped
	left parenthesis in doc string.

2006-11-05  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-complete-keywords-contextually): Unused
	variable, removed.

2006-11-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-sexp-highlight-mode): Remove bloat.

2006-11-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Support nested presentations in REPL results, when present.lisp is
	loaded.

	* swank.lisp (make-presentations-result): New, factored out from
	listener-eval.
	(listener-eval): Use it here.

	* present.lisp (make-presentations-result): Override it here.

2006-11-03  Marco Baringer  <mb@bese.it>

	* swank.lisp (all-slots-for-inspector): Added declare ignore for
	unused argument inspector (openmcl warns about this). Reindented.

2006-11-01  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el (sldb-sexp-highlight-mode): New custom.
	(slime-handle-repl-shortcut): Trigger slime-lookup-shortcut when
	the point is anywhere before slime-repl-input-start-mark.  IOW,
	you can press "," anywhere before the prompt.
	(slime-edit-definition): Handle the case when there are only such
	entries returned from swank that have errors.
	(slime-read-from-minibuffer): Allow overriding of the keymap.
	(slime-repl-previous-matching-input): Similar behaviour like
	isearch-forward.
	(slime-repl-next-matching-input): Ditto. In more details: You can
	freely navigate with slime-repl-previous/next-input with M-p and
	M-n at any time among the history entries.  When M-r is pressed,
	which invokes slime-repl-previous-matching-input, the the
	minibuffer is activated to read the regexp to search for and the
	contents will default to the current repl input.  Pressing M-r
	again will start searching with the last pattern used no matter
	what the content of the minibuffer is. Subsequent invocations of
	M-r get the next match, and of course the same applies for M-s,
	which is slime-repl-previous-matching-input.

	* swank.lisp (fuzzy-completion-set): Fix on clisp.
	(convert-fuzzy-completion-result): Fix symbol fbound and other
	annotations.
	(slot-value-using-class-for-inspector): New.
	(slot-boundp-using-class-for-inspector): New.
	(inspect-for-emacs): Use the special slot access methods so that
	it's possible to customize the inspecting of complex
	slots (e.g. computed-class at
	http://common-lisp.net/project/computed-class/).
	(all-slots-for-inspector): Converted to generic method.

2006-11-01  Marco Baringer  <mb@bese.it>

	* swank.lisp (*swank-wire-protocol-version*): Use a defvar to
	declare the existence of tihs variable to the lisp (Reported by:
	Jonathon McKitrick <jcm@FreeBSD-uk.eu.org>).

2006-10-30  Marco Baringer  <mb@bese.it>

	* swank.lisp (*dont-close*): New variable.
	(defpackage :swank): Export *dont-close*.
	(start-server, create-server): Use *dont-close* as the default
	value of the :dont-close parameter.
	(connection-info): Send the wire-protocol-version (supplied by the
	swank-version.el file) to slime when connecting.
	(wire-protocol-version): New function.

	* slime.el (slime-global-variable-name-regexp): New variable.
	(slime-global-variable-name-p): Use
	slime-global-variable-name-regexp.
	("swank-version"): Load swank-version.el to get the wire protocol
	version.
	(slime-set-connection-info): Check the wire protocol version.

2006-10-30  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-global-variable-name-p): Oops... need to handle
	very long strings.

2006-10-29  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el (slime-global-variable-name-p): Use defun* instead of
	defun.

2006-10-29  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-global-variable-name-p): Simplified.

2006-10-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Add completion for character names.

	* slime.el (slime-completions-for-character): New.
	(slime-contextual-completions): Use it here.

	* swank-backend.lisp (character-completion-set): New interface.

	* swank-allegro.lisp (character-completion-set): Implement it.

	* swank.lisp (completions-for-character): New slimefun.
	(compound-prefix-match/ci/underscores)
	(longest-completion/underscores, tokenize-completion/underscores)
	(untokenize-completion/underscores): New functions.

2006-10-28 Ivan Toshkov  <ivan@toshkov.org>

	* hyperspec.el: Missing Hyperspec links for ~| and ~~

2006-10-27 Ivan Toshkov  <ivan@toshkov.org>

	* hyperspec.el: Missing Hyperspec links for ~% and ~&

2006-10-27 Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp (make-weak-key-hash-table): Restore support
	for older SBCLs without weak hash-tables.
	(make-weak-value-hash-table): Ditto.

2006-10-26  Utz-Uwe Haus  <haus+slime@mail.math.uni-magdeburg.de>

	* swank-allegro.lisp (sldb-break-at-start): Implement.

2006-10-26  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el (slime-setup-command-hooks): Use make-local-hook.
	(slime-repl-mode): Ditto.
	(slime-fuzzy-choices-buffer): Ditto.
	(sldb-mode): Ditto.
	(slime-fuzzy-completion-limit): New variable.
	(slime-fuzzy-completion-time-limit-in-msec): New variable.
	(slime-fuzzy-next): Fix when at the end of the buffer.
	(completion-output-symbol-converter): New to handle escaped
	symbols for those who need to mess around with symbols like
	layered-function-definers::|CONTEXTL::SLOT-VALUE-USING-LAYER|.
	When a symbol is escaped then completion is case sensitive.
	(completion-output-package-converter): New.
	(mimic-key-bindings): New to easily define bindings by first
	trying to look up bindings for an operation and only use the
	provided default bindings if nothing was found in the source
	keymap. Use it to set up fuzzy bindings. (Hint: if you have keys
	like previous-line customized, then only load slime after they
	have been set, and the fuzzy mode will mimic them.)
	(slime-temp-buffer-quit): Always close the opened window, updated
	docstring.  Also made the fuzzy maps smarter, they now try to look
	up keys with 'where-is-internal and map the functions on them.

	* swank-sbcl.lisp
	(make-weak-value-hash-table): New for sbcl.
	(make-weak-key-hash-table): New for sbcl.

	* swank.lisp (fuzzy-completions and friends): Added :limit and
	:time-limit-in-msec keyword params. Used vectors instead of lists
	that nearly doubled its speed (at least on sbcl).  Also added some
	declare optimize and type annotations.
	(do-symbols*): New, uses a hash-table to visit only non-seen
	symbols. Replaced various uses of do-symbols where it was
	appropiate.

2006-10-26  Marco Baringer  <mb@bese.it>

	* slime.el (slime-global-variable-name-p): Use a custom 'parser'
	instead of string-match to avoid regexp overflow errors on very
	long strings.

2006-10-21  Helmut Eller  <heller@common-lisp.net>

	* swank-lispworks.lisp (initialize-multiprocessing): Don't init
	MP if it is already running.

	* test.sh: Run Emacs in Screen.

2006-10-20  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp, swank-cmucl.lisp:
	(startup-idle-and-top-level-loops): Deleted. Merged into
	initialize-multiprocessing.

2006-10-20  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el (slime-fuzzy-choices-buffer): Added kill-buffer-hook to
	the completion buffer to slime-fuzzy-abort, so we get out from the
	completion mode and key maps when the completion buffer is closed.

2006-10-20  Marco Baringer  <mb@bese.it>

	* slime.el (slime-target-buffer-fuzzy-completions-map): Fix a bug
	I introduced when applying levente's patch.

2006-10-20  Martin Simmons  <martin@lispworks.com>

	* swank-backend.lisp (initialize-multiprocessing): New API to
	support lisps where initialize-multiprocessing may not return
	(lispworks).

	* swank.lisp (start-server): initialize-multiprocessing's API has
	changed.

	* swank-lispworks.lisp (initialize-multiprocessing): Update for
	new API.

	* swank-cmucl.lisp (initialize-multiprocessing): Update for new API.

	* swank-allegro.lisp (initialize-multiprocessing): Update for new api.

2006-10-20  Levente Mészáros  <levente.meszaros@gmail.com>

	Added "in-place" fuzzy completion GUI. See
	slime-fuzzy-completions-map and
	slime-target-buffer-fuzzy-completions-map for details.

	* slime.el (slime-fuzzy-completion-in-place): New variable.
	(slime-target-buffer-fuzzy-completions-mode): New keymap for
	in-place fuzzy completions.
	(slime-fuzzy-target-buffer-completions-mode): New minor mode for
	in-place fuzzy completions.
	(slime-fuzzy-current-completion-overlay): New overlay for
	highlighting currently selected completion.
	(slime-fuzzy-completions-map): Added new fuzzy completon keys
	(slime-fuzzy-indent-and-complete-symbol): New function.
	(slime-fuzzy-complete-symbol): Use new in-place fuzzy completion.
	(slime-fuzzy-choices-buffer): Support in-place completion editing.
	(slime-fuzzy-fill-completions-buffer): Highlight completions,
	don't automatically jump to completion buffer.
	(slime-fuzzy-enable-target-buffer-completions-mode,
	slime-fuzzy-disable-target-buffer-completions-mode): New modes for
	moving in/out of in-place fuzzy completion mode
	(slime-fuzzy-next, slime-fuzzy-prev): Don't assume point is in the
	completion buffer.
	(slime-fuzzy-dehighlight-current-completion,
	slime-fuzzy-highlight-current-completion): Manage completion
	selection highlighting.
	(slime-fuzzy-select-or-update-completions): New function.
	(slime-fuzzy-process-event-in-completions-buffer): New function.
	(slime-fuzzy-select-and-process-event-in-target-buffer): New function.
	(slime-fuzzy-done): Changed to deal with in-place completion.

2006-10-19  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (ignored-xref-function-names): Deleted.

	* swank.lisp (guess-package-from-string): Remove special case for
	"#.". parse-package will handle that just fine.
	(find-definitions-for-emacs): Don't filter errors out.
	(sanitize-xrefs): Moved to swank-sbcl.  The backend is supposed to
	return sane values.

	* swank-sbcl.lisp: See above.

	* slime.el (slime-find-buffer-package): Simplify.

2006-10-17  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-accept-process-output): The timeout arg can be
	nil. Handle that case.

2006-10-17  Attila Lendvai  <attila.lendvai@gmail.com>

	* slime.el (slime-find-buffer-package): Handle #. forms.

	* swank.lisp (guess-package-from-string): Handle #. forms.
	(inspect-for-emacs standard-class): Handle non-string
	:documentation slot contents.

	* swank-sbcl.lisp (inspect-for-emacs weak-pointer ...): Added
	method.

2006-10-16  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-activate): Get debug-info from the correct
	thread. Fixes bug reported by Dan Weinreb <dlw@itasoftware.com>.
	(unwind-to-previous-sldb-level): New test.
	(slime-init-command): Send a single form.
	(slime-insert-presentation): Honor slime-repl-enable-presentations.
	Presentations kill SLDB and the inspector in Emacs 20 (besides
	being troublesome GC-wise).

	* swank.lisp: Clean up global IO redirection.
	(setup-stream-indirection): Turn macro into a
	function and delay initialization after user init files are
	loaded, so that we do nothing if *globally-redirect-io* is nil.
	(*after-init-hook*, run-after-init-hook)
	(init-global-stream-redirection): New.

	(parse-symbol-or-lose): Lose loudly and early (instead of failing
	silently).

	* swank-loader.lisp: Abort on compile-time or load-time errors.
	Don't try to load the source-file if COMPILE-FILE's 3rd return
	value is true (it's true even for warnings).
	(handle-loadtime-error): New function.

	Run the after-init-hook.

	* swank-cmucl.lisp (inspect-for-emacs): Don't break for
	simple-strings.

2006-10-11  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-presentation-syntax-table): New.
	(slime-add-presentation-properties): Install it in a syntax-table
	text property, so that #<...> is balanced in a presentation.
	(slime-remove-presentation-properties): Remove the text property.
	(slime-repl-mode): Respect the syntax text properties of
	presentations in REPL buffers.

2006-10-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (completions-for-keyword): Look up the operator names
	in the right package.  Return nil (rather than signalling an
	error) when no valid operator name is present.

2006-10-08  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank-loader.lisp (lisp-version-string) [allegro]: Distinguish
	between 32-bit and 64-bit version on the SPARC architecture.

2006-10-03  Marco Baringer  <mb@bese.it>

	Change license statement to say that all files without an explicit
	copyright notice are public domain. This change will allow SLIME
	to moved out of debian's nonfree tree.

	* README: Update license statement.

2006-10-02  Marco Baringer  <mb@bese.it>

	* slime.el (slime-highlight-compiler-notes): New variable.
	(slime-compilation-finished): Only highlight notes when
	slime-highlight-compiler-notes is non-NIL.

2006-09-28  Marco Baringer  <mb@bese.it>

	* swank-loader.lisp (compile-files-if-needed-serially): Don't
	ignore compile-time errors but drop into a debugger (it's not a
	slime debugger but it's certainly better than ignoring the error).

2006-09-27  Marco Baringer  <mb@bese.it>

	* swank.lisp (*globally-redirect-io*): Change default value to T.

2006-09-25  Juho Snellman  <jsnell@iki.fi>

	Fix Slime on SBCL 0.9.17.

	* swank-backend.lisp (ignored-xref-function-names): New interface

	* swank.lisp (sanitize-xrefs): Use ignored-xref-function-names
	instead of having a #+sbcl special case.

	* swank-sbcl.lisp (ignored-xref-function-names): Implement.
	Filter out SB-C::STEP-VALUES, not just SB-C::STEP-FORM, as done by
	the old sanitize-xrefs.	Don't implement the interface at all if
	SBCL is sufficiently new (those symbols don't exist any more, and
	there's nothing in their place to be ignored).

2006-09-21  Marco Baringer  <mb@bese.it>

	* swank.lisp (find-definitions-for-emacs): Don't return locations
	whose CAR is :error.
	(xref): Process whatever is returned by the various xref functions
	with the new sanitize-xrefs functions.
	(sanitize-xrefs): Clean up the list of xrefs to remove duplicates.
	Patch by Dan Weinreb <dlw@itasoftware.com>

	* slime.el (slime-goto-first-note-after-compilation): New
	variable. This controls the behaviour of (next|prev)-note
	immediatly after a slime-compile-and-load-file.
	(slime-compilation-just-finished): New variable.
	(slime-compilation-finished): Update slime-compilation-finished.
	(slime-next-note, slime-previous-note): Respect
	slime-compilation-just-finished.
	(slime-autodoc-use-multiline-p): Specify the type.
	(slime-repl-grab-old-input): Typo in docstring.
	(slime-cheat-sheet): Deal with multiple-bindings
	(slime-cheat-sheet-table): Update as per #lisp's suggestions.

2006-09-20  Marco Baringer  <mb@bese.it>

	* slime.el (slime-cheat-sheet): New function.
	(slime-cheat-sheet-table): New variable which specifies what the
	cheat sheet should list.
	(slime-read-package-name): Set require to T in the call to
	completing read, it doesn't make any sense to switch to an
	inexistent package.

	* doc/slime.texi: Added "Tips and Tricks" chapter (need a better
	name for this).

	* swank-sbcl.lisp (fallback-source-location): Use abort-request
	instead of error.
	(locate-compiler-note): Say, in the error message, what data
	caused the error.

2006-09-20  Juho Snellman  <jsnell@iki.fi>

	* swank-sbcl.lisp (call-with-debugger-hook): use INVOKE-STEPPER
	instead of calling the stepper hook manually

2006-09-19  Juho Snellman  <jsnell@iki.fi>

	* swank-sbcl.lisp (call-with-debugger-hook): make the stepper
	also work with a threaded SBCL, by binding a handler for
	sb-ext:stepper-condition instead of relying on the one that SBCL
	establishes on the toplevel

2006-09-19  Juho Snellman  <jsnell@iki.fi>

	Extend the stepper protocol to work nicely with the SBCL stepper.

	If sldb is invoked on a condition that's sldb-stepper-condition-p,
	the sldb functions sldb-step, sldb-next and sldb-out will invoke
	the matching backend functions for stepping into the stepped form,
	to the next form, or out of the current function. Otherwise the
	functions will behave like sldb-step used to (call active-stepping and
	select the continue restart).

	* swank-backend.lisp (sldb-stepper-condition-p, sldb-step-into,
	sldb-step-next, sldb-step-out): New interface functions

	* swank-sbcl.lisp (activate-stepper, condition-extras,
	sldb-stepper-condition-p, sldb-step-into, sldb-step-next,
	sldb-step-out): Implemented (conditional on CVS SBCL)
	(call-with-debugger-hook): bind sb-ext:*stepper-hook* to
	a function that binds *stack-top-hint* and invokes the debugger
	(conditional on CVS SBCL)

	* swank.lisp (define-stepper-function): new macro for defining
	stepper-related functions, since they all follow the same form
	(sldb-step): redefine with define-stepper-function
	(sldb-next, sldb-out): new functions
	(*sldb-stepping-p*): typo in docstring

	* slime.el (sldb-next, sldb-out): New commands
        (sldb-mode-map): bind sldb-next to "x" and sldb-out to "o"

2006-09-18  Dan Weinreb  <dlw@itasoftware.com>

	For those cases where SLIME can't complete a user request (like
	loading an asdf system without asdf or describing an inexistent
	symbol) instead of signaling an error SWANK should politely inform
	the user and return normally.

	* swank.lisp (eval-for-emacs): Handle request-abort conditions.
	(decode-keyword-arg, get-repl-result, parse-symbol-or-lose): Use
	abort-request instead of error.

	* swank-backend.lisp (request-abort): New condition.
	(abort-request): Convenience function for signaling request-abort
	conditions.
	(operate-on-system): Use abort-request instead of error
	(:swank-backend): Export the symbols abort-request and
	request-abort.

	* slime.el (slime-rex): Update docstring.
	(slime-eval, slime-eval-async): Added new REASON parameter sent
	along with :abort message.

2006-09-14  Douglas Crosher  <dcrosher@common-lisp.net>

	* swank-scl (arglist, function-arglist, spawn): update for the SCL.

2006-09-13  Brandon Bergren  <bdragon@mailsnare.net>

	* slime.el (slime-filename-translations): Fix docstring

2006-09-13  Bob Halley  <halley@play-bow.us>

	* swank.lisp (format-iso8601-time): Properly handle non integer
	time zones.

2006-09-13  Taylor R. Campbell  <campbell@mumble.net>

	* slime.el (slime-init-output-buffer): Initial directory and
	package stacks should be empty.
	(slime-repl-push-package): Push the current package, as opposed to
	the new package, and set the new package to whatever the user
	specified.
	(slime-repl-pop-package): Set the current package to the top of
	the package stack, unless it's empty.

2006-09-13  Daniel Koning  <dkoning@seas.smu.edu>

	* slime.el (slime-repl-disconnect): New repl shortcut.

2006-09-13  Marco Baringer  <mb@bese.it>

	* slime.el (slime-open-inspector): Added a slime-part-number
	property to the topline so that you can slime-inspector-copy-down
	the object being inspected. There are some cases where we have an
	object in the inspector and we'd like to dump it to the repl but
	we can't get at it through other means (like in back-traces).
	(slime-insert-xrefs): Specify which file the item is in (when that
	information is available).

	* swank.lisp (format-arglist-for-echo-area): Instead of using
	let+first+rest to destructure a form use destructuring-bind.
	(lookup-presented-object): Added (declare (special
	*inspectee-parts*)) to silence openmcl's compiler.
	(inspect-object): Generate, and send to emacs, an ID for the
	object being inspected.

2006-09-01  Nikodemus Siivola  <nikodemus@random-state.net>

	* slime.el (slime-repl-matching-input-regexp): Use the portion
	between slime-repl-input-mark and point for history search, not
	the entire input. Patch by Ivan Shvedunov.

	* swank-sbcl.lisp: Declaim SB-C:INSERT-STEP-CONDITIONS 0 for to
	hide Swank while stepping and avoid endless mutex-acquisition
	loops.

2006-08-27  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (input-available-p, process-available-input): Use
	READ-CHAR-NO-HANG instead of LISTEN because LISTEN suddenly
	returns false in SBCL 0.9.?? even if we are called from a
	fd-handler and the OPEN-STREAM-P returns true.

2006-08-26  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-repl-return-behaviour): Fix the defcustom type,
	so Emacs 21.3 does not signal an error when creating a
	customization buffer containing this variable.

2006-08-25  Kai Kaminski  <kai.kaminski@gmx.de>

	* swank.lisp (lookup-presented-object): Fix for OpenMCL 1.0
	[ppc32], which requires that the :NO-ERROR clause is last in
	HANDLER-CASE.

2006-08-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-ensure-presentation-overlay): Provide a
	help-echo for presentations, showing the mouse bindings.
	(slime-presentation-around-click): New function.
	(slime-copy-or-inspect-presentation-at-mouse)
	(slime-inspect-presentation-at-mouse)
	(slime-copy-presentation-at-mouse)
	(slime-describe-presentation-at-mouse)
	(slime-pretty-print-presentation-at-mouse): New commands.
	(slime-copy-presentation-at-point): Removed (misnomer).
	(slime-presentation-map): Bind mouse-2 to
	slime-copy-or-inspect-presentation-at-mouse, so the right thing is
	done in REPL buffers and in Inspector and Debugger buffers.
	(slime-menu-choices-for-presentation): Use the new commands here
	instead of inline lambdas.
	(sldb-inspect-in-frame): Use slime-read-object here, so if point
	is in a presentation in the debugger buffer, inspect it
	immediately just like slime-inspect does.
	(slime-inspect-presented-object): Removed.
	(slime-inspect): Don't expect that "swank:init-inspector" is
	already part of the form.  Accept an optional arg "no-reset".
	(slime-read-object): Don't add "swank:init-inspector" to the read
	form; slime-inspect now adds it.

2006-08-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Make the values of local variables in debugger frames and values
	of parts in the inspector accessible as presentations.  In
	particular, this allows to copy #<unreadable> values to the REPL
	for further investigation.  It also provides a context menu for
	the values, offering to inspect, pretty-print, and describe them.

	Note that the presentations are only valid as long as the
	corresponding Inspector or Debugger buffer is open.

	* swank.lisp (lookup-presented-object): Handle presentation ids
	(:frame-var frame index), (:inspected-part part-index).
	(init-inspector): New optional argument, reset.

	* slime.el (slime-inspector-insert-ispec): Mark up all values of
	inspected parts as presentations.
	(sldb-insert-locals): Mark up the values of local variables as
	presentations.
	(slime-remove-presentation-properties): Fix for read-only buffers.
	(slime-copy-presentation-at-point): Make it work when the current
	buffer is not the REPL buffer.
	(slime-menu-choices-for-presentation): Describe into a separate
	buffer, not the REPL.  New menu item, pretty-print.
	(slime-presentation-expression): Handle presentation ids that are
	not numbers.
	(slime-inspect-presented-object): Don't reset the inspector if
	already in the inspector buffer.

2006-08-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (*nil-surrogate*): New.
	(save-presented-object, lookup-presented-object): Distinguish
	between a saved NIL and a garbage-collected object that was
	replaced by NIL in the weak hash table.
	(compute-enriched-decoded-arglist with-open-file): Add an IGNORE
	declaration.

2006-08-19  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-parse-extended-operator-name/apply): New.
	(slime-extended-operator-name-parser-alist): Add it to the alist.

	* swank.lisp (compute-enriched-decoded-arglist): Add method for
	handling APPLY.

2006-08-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-accept-process-output): Use brute-force to
	detect whether accept-process-output can be called with a float as
	timeout arg.

	* swank-openmcl.lisp: Fix some breakage caused by the new
	defimplementation.

2006-08-11  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (close-connection, swank-error): Include backtraces
	in our own errors.
	(simple-serve-requests): Don't try to enter the
	debugger if the connection is closed.

	* slime.el (disconnect): Test disconnecting.

	* swank-cmucl.lisp (startup-idle-and-top-level-loops): Initialize
	MP only once.

2006-08-10  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (fspec-definition-locations): Improve
	handling of (:internal ... n) like fspecs.

	* slime.el (slime-restart-inferior-lisp-aux): Remove the
	interactive spec.

	* swank-backend.lisp (definterface): Drop that incredibly
	unportable CLOS stuff. Use plists and plain functions instead.
	Update backends accordingly.

2006-08-09  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-find-filename-translators): CL:MACHINE-INSTANCE
	can return nil.  Silently accept that case for now.

	* swank.lisp (test-print-arglist): Print a message instead of
	signalling an error. This should avoid startup problems, in
	particular with CormanLisp.
	(setup-stream-indirection): Disable it for now.  We should fix it,
	if there is a need for this functionality or just remove it.

	* swank-backend.lisp (definterface): Bring the old implementation
	based on NO-APPLICABLE-METHOD back.  It avoids lots of redefintion
	warnings (but it creates more "noise" in backtraces).

	* swank-*.lisp (inspect-for-emacs): Don't use defimplementation
	for real generics.

2006-07-28  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-thread-quit): Call swank:quit-thread-browser.
	Reported by Taylor R. Campbell.

2006-07-28  Willem Broekema  <metawilm@gmail.com>

	* swank-allegro.lisp: Profiling functions on Allegro (except for
	profile-package).

2006-07-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Add support for destructuring macro arglists in arglist display,
	form completion, and keyword completion; in particular for
	with-open-file.

	* swank.lisp (find-valid-operator-name): New, factored out from
	arglist-for-echo-area.
	(arglist-for-echo-area): Use it here.
	(print-arglist): New, factored out from decoded-arglist-to-string.
	Handle recursive arglist structures that arise in destructuring
	macro arglists.
	(decode-required-arg, encode-required-arg): New, handle
	destructuring patterns.
	(decode-keyword-arg, encode-keyword-arg, decode-optional-arg)
	(encode-optional-arg, decode-arglist, encode-arglist): Use them
	here to handle destructuring patterns.
	(print-decoded-arglist-as-template): Change interface, handle
	destructuring patterns.
	(decoded-arglist-to-template-string): Use it here.
	(enrich-decoded-arglist-with-keywords): New, factored out from
	enrich-decoded-arglist-with-extra-keywords.
	(enrich-decoded-arglist-with-extra-keywords): Use it here.
	(compute-enriched-decoded-arglist): New generic function, factored
	out from arglist-for-insertion, form-completion.  Add specialized
	method for with-open-file.
	(arglist-for-insertion, form-completion): Use it here.
	(arglist-ref): New.
	(completions-for-keyword): Change interface, handle destructuring
	macro arglists.

	* slime.el (slime-enclosing-operator-names): For nesting levels
	without operator, record nil.
	(slime-completions-for-keyword): New argument arg-indices.
	(slime-contextual-completions): Pass all enclosing operators and
	arg-indices to slime-completions-for-keyword.

2006-07-16  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-edit-definition): Invoke the
	slime-edit-definition-fall-back-function also in the case where
	find-definitions-for-emacs returns an error message.
	(slime-edit-definition-fallback-function): Fix typo (find-tag
	rather than find-tags).

2006-07-15  Juho Snellman  <jsnell@iki.fi>

	* swank-sbcl.lisp (preferred-communication-style): Remove use of
	  linux_no_threads_p alien variable (the value has been hardcoded to
	  false for about a year), so that we can also remove it from from SBCL
	  in the future.
	  (*definition-types*): defcondition -> define-condition,
	  to make slime-show-definitions display condition FOO as
	  (DEFINE-CONDITION FOO) instead of (SWANK-BACKEND::DEFCONDITION FOO).

2006-07-15  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-shared-lisp-mode-hook): New function, factored
	out from slime-lisp-mode-hook.
	(slime-lisp-mode-hook): Use it here.
	(slime-scheme-mode-hook): New function, use
	slime-shared-lisp-mode-hook.
	(slime-setup): If scheme-mode is one of the slime-lisp-modes,
	install our hook.

2006-07-13  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (keywords-of-operator): New support function for
	writing user-defined `extra-keywords' methods.

2006-07-11  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (make-weak-key-hash-table): Use ACL's weak
	hashtables.

	* swank.asd: Set *source-directory* to the asdf component dir.

2006-07-01  Luís Oliveira  <loliveira@common-lisp.net>

	* swank-sbcl.lisp (locate-compiler-note): Change first branch to
	handle the changes introduced by the previous patch to
	swank-compile-string.

2006-06-26  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (find-definitions): Remove backward
	compatibility code.

2006-06-26  Luís Oliveira  <loliveira@common-lisp.net>

	* swank-sbcl.lisp (tmpnam, temp-file-name): New functions.
	(swank-compile-string): Create temporary file with the string and
	compile-file it instead of compiling an anonymous lambda, as
	before, in order to better handle eval-when forms.

2006-06-25  Helmut Eller  <heller@common-lisp.net>

	* swank-source-path-parser.lisp (suppress-sharp-dot): Return a
	unique symbol to avoid multiple entries for nil at toplevel in the
	source-map.

	* slime.el (test compile-defun): Add a test for #. reader macro at
	toplevel.
	(slime-run-one-test): New command.
	(sldb-activate): Recreate the sldb buffer if it doesn't
	exist. (Can happen if someone kills the buffer manually.)
	(slime-wait-condition): Add a dummy to slime-stack-eval-tags while
	waiting so that the SLDB enters a recursive edit.

2006-06-18  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-echo-arglist): Simplify, just use slime-autodoc.

	* swank.lisp (arglist): Distinguish between provided actual args
	and required formal args using the new slot provided-args.
	(form-completion): Likewise.
	(decoded-arglist-to-string): Use it here to display the argument
	list (make-instance 'CLASS-NAME ...) rather
	than (make-instance (quote CLASS-NAME) ...).

	* swank.lisp (extra-keywords change-class): Don't drop the first
	argument.

	* slime.el (slime-parse-extended-operator-name): Don't move
	point; fixes infinite loop.

2006-06-17  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-parse-extended-operator-name/cerror): Handle
	cerror and change-class with :make-instance.
	(slime-extended-operator-name-parser-alist): Handle change-class.
	(slime-parse-extended-operator-name)
	(slime-enclosing-operator-names): Fix the case when point is
	within the operator.

	* swank.lisp (operator-designator-to-form): Handle cerror and
	change-class with :make-instance.

2006-06-16  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (operator-designator-to-form): Handle :cerror.
	(extra-keywords cerror): Make it work.

	* slime.el (slime-parse-extended-operator-name)
	(slime-parse-extended-operator-name/make-instance)
	(slime-parse-extended-operator-name/defmethod): New functions,
	factored out from slime-enclosing-operator-names.
	(slime-parse-extended-operator-name/cerror): New function.
	(slime-extended-operator-name-parser-alist): New variable.
	(slime-enclosing-operator-names): Use them here.

2006-06-14  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-goto-definition): If all definitions of a name
	have the same location, go there directly rather than presenting
	an xref buffer.

2006-06-11  Douglas Crosher  <dcrosher@common-lisp.net>

	* swank-scl (ext:stream-write-chars): update for SCL 1.3.

2006-06-09  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-abcl: Update to cvs version of abcl and warnings errors
	when compiling in a buffer will now be properly caught by slime vs
	current behavior of always saying 0 errors 0 warnings and printing
	them in the repl instead

2006-05-31  Nathan Bird  <nathan@acceleration.net>

	* swank.lisp (*sldb-quit-restart*): New variable.
	(throw-to-toplevel): Use the restart named by *sldb-quit-restart*
	as opposed to hard coding abort-request.

2006-05-30  Tobias Rittweiler  <tcr@freebits.de>

	* slime.el (slime-get-temp-buffer-create): New keyword REUSEP
	which indicates whether an already-existing buffer named like the
	buffer to be created should be reused, i.e. not killed, then
	freshly created. Update docstring accordingly.
	(slime-with-output-to-temp-buffer): Make &optional arg MODE an
	&key keyword arg. Add REUSEP keyword.
	(slime-macroexpansion-minor-mode-map): Make remapped `undo' update
	highlighted edits in the macroexpansion buffer.
	(slime-eval-macroexpand-in-place): Update highlighted edits when
	macroexpanding in-place.
	(slime-eval-macroexpand): Reuse macroexpansion buffer if it exists
	already to preserve `undo' functionality.

2006-05-30  Tobias Rittweiler  <tcr@freebits.de>

	* slime.el (slime-use-autodoc-mode): Fix typo in docstring.
	(slime-use-highlight-edits-mode): New variable, analogous to
	SLIME-USE-AUTODOC-MODE.
	(slime-setup, slime-lisp-mode-hook): Make above variable
	work. Also, activates the HIGHLIGHT-EDITS-MODE in proper way (thus
	avoiding the nasty "Toggling ... off; better pass an explicit
	argument." message.)

	* slime.el: Fix typo in comment about communication protocol.

2006-05-27  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-abcl: slot-boundp-using-class slot-value-using-class so
	you can inspect instances.

2006-05-26  Tobias C. Rittweiler  <tcr@freebits.de>

	* slime.el (slime-eval-macroexpand-inplace): Fix out-of-range
	error on in-place macroexpand when point is placed at a closing
	parenthesis. In this case the sexp closed by that paren is
	expanded.
	Also make expanding of expressions work that are quoted like, for
	instance, "'(FOO BAR)" if point is placed at the opening paren.

2006-05-24  Brian Downing  <bdowning@lavos.net>

	* swank.lisp (recursively-compute-most-completions & friends):
	Micro-optimize the fuzzy completion engine, improving performace
	by a factor of about 4 on SBCL.  However, it will only work on
	simple-strings now, and CHAR= is burned in instead of being an
	option.  I don't think this is too much of a limitation.  At this
	point rendering the results on the emacs side takes much longer
	than finding them for long result lists.

2006-05-24  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-abcl: Add some more mop functions to you can inspect
	classes, generic functions, methods, slots.

2006-05-16  Marco Baringer  <mb@bese.it>

	* slime.el (slime-repl-return-behaviour): New variable which
	controls slime-repl-return's heaviour.
	(slime-repl-return): Respect slime-repl-return-behaviour.

2006-05-14  Marco Baringer  <mb@bese.it>

	* slime.el (slime-macroexpansion-minor-mode-map): Rebind 'undo' to
	set buffer-read-only temporarily to t.
	(slime-repl-return): Only send repl input if point is past a
	complete form.

2006-05-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (update-indentation-information): Fix for problem
	with Allegro CL 8.0: If I type M-x slime-update-indentation,
	Allegro CL starts growing until it hits a STORAGE-CONDITION or
	even segfaults.

2006-05-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank-allegro.lisp (fspec-definition-locations): Handle
	:top-level-form entries that appear in backtraces.

2006-04-20  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp (toggle-trace): Implemented. Currently only
	provides 'best effort' support, :labels and :flet are ignored,
	:defmethod and :call are treated like a normal trace of the
	operator.

2006-04-20  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*use-dedicated-output-stream*): Make it nil by
	default to avoid race conditions.

2006-04-19  Christophe Rhodes  <csr21@cam.ac.uk>

	* doc/Makefile (contributors.texi): use texinfo macros for
	accented characters.

	* ChangeLog: canonize Gábor Melis' spelling, otherwise he appears
	twice in the "Hackers of the good Hack table"

	* doc/slime.texi (nyorsko): delete
	(EDITION): make it say 2.0

2006-04-19  Christophe Rhodes  <csr21@cam.ac.uk>

	* swank.lisp (decoded-arglist-to-string): if the keyword and the
	variable are different, print the keyword name with escapes.
	(encode-keyword-arg): get the keyword and the arg-name the same
	way round as in lambda lists.
	(appliable-methods-keywords): use
	swank-mop:compute-applicable-methods-using-classes and
	compute-applicable-methods in the AMOP-friendly way, to get EQL
	specializers right.
	(class-from-class-name-form, extra-keywords/slots): new.
	(extra-keywords/make-instance): use new functions.  Also get
	keywords from SHARED-INITIALIZE (after Dan Barlow) and
	ALLOCATE-INSTANCE.
	(extra-keywords/change-class): new.
	(extra-keywords (eql 'change-class)): new.  Won't work at present,
	just as the CERROR case doesn't work.

2006-04-19  Christophe Rhodes  <csr21@cam.ac.uk>

	* swank-sbcl.lisp (preferred-communication-style): Make it nil
	under win32, for now.

	* doc/slime.texi: document nil *communication-style*

2006-04-18  Espen Wiborg  <espenhw@grumblesmurf.org>

	* swank-corman.lisp: Define a class file-stream to let swank.lisp
	load.

2005-04-17  Andras Simon  <andras@renyi.hu>

	* swank-abcl.lisp: (accept-connection): New argument: timeout.

2006-04-14  Gerd Flaig  <gefla@pond.sub.org>

	* slime.el (slime-autodoc): Fix reference to unbound variable.

2006-04-13  Martin Simmons  <martin@lispworks.com>

	* swank-loader.lisp (load-site-init-file, swank-source-files): Fix
	pathname construction to take all unspecified components from the
	directory pathname, in particular the drive letter on Windows.

2006-04-13  Helmut Eller  <helmut@common-lisp.net>

	* slime.el (slime-find-filename-translators): Use assoc-if instead
	of assoc-default for XEmacs compatibility.
	(slime-show-note-counts): Don't show the highlighting bit as it
	spills of the screen.
	(slime-highlight-notes): Use with-temp-message.
	(with-temp-message): Define it for XEmacs.
	(slime-beginning-of-symbol): Use eq instead of char-equal as
	char-equal signals an error at the beginning of a buffer.

2006-04-13  Douglas Crosher  <dcrosher@common-lisp.net>

	* swank-scl (make-socket-io-stream): set the stream to ignore
	character conversion errors, and to substitute the character #\?.
	Without this the communication channel is prone to lockup when a
	conversion error occurs.

	* swank-scl (inspect-for-emacs function): correct the index into the
	closure environment; it was reading off the end of the closure
	environment and picking up a corrupting value.

	* swank-scl (mailbox): rework the mailbox implementation to better
	handle interruption.  Use a polling loop rather than condition
	variables because interrupting a condition variable wait leaves the
	thread with the condition variable lock held and leads to a deadlock
	error.

2006-04-12  Robert Macomber  <slime@rojoma.com>

	* swank-backend.lisp (make-recursive-lock): New interface
	function.
	(call-with-recursive-lock-held): New interface function.

	* swank-grey.lisp (class slime-output-stream): Added recursive
	locking to class and generic functions specialized on it.
	(clss slime-input-stream): Added recursive locking to class and
	generic functions specialized on it.

	* swank-sbcl.lisp (make-recursive-lock): Implement the new interface.
	(call-with-recursive-lock): Implement the new interface.

2006-04-01  Matthew D. Swank  <akopa@charter.net>

	* slime.el (slime-fontify-string): Use set-text-properties, not
	propertize, for Emacs 20 compatibility.

2006-03-30  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-init-command): Don't translate filenames since
	the new scheme doesn't work without a connection.
	(slime-to-lisp-filename,slime-from-lisp-filename): Remove some
	redundancy.
	(slime-macroexpansion-minor-mode): Make it Emacs 20 compatible.

2006-03-29  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-repl-mode): Enable autodoc-mode if
	slime-use-autodoc-mode is true.

2006-03-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (multiple-value-or): New macro.

	* slime.el (slime-recently-visited-buffer): Ignore internal
	buffers (starting with a space), to avoid selecting the
	*slime-fontify* buffer.  Reported by Andreas Fuchs.

	* slime.el (slime-enclosing-operator-names): Handle forms similar
	to make-instance (make-condition, error, etc.), to get extra
	keywords based on the condition class.

	* swank.lisp (operator-designator-to-form): Handle forms similar
	to make-instance (make-condition, error, etc.)
	(extra-keywords/make-instance): New function.
	(extra-keywords): Specialize on operators make-condition, error,
	signal, warn, cerror.  Use multiple-value-or.

2006-03-27  Marco Baringer  <mb@bese.it>

	* slime.el (slime-make-tramp-file-name): If emcas' tramp has
	tramp-multi-methods then pass the method parameter to
	tramp-make-tramp-file-name, otherwise don't.
	(slime-create-filename-translator): Use
	slime-make-tramp-file-name.

2006-03-27  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* hyperspec.el (common-lisp-hyperspec-strip-cl-package): New
	function.
	(common-lisp-hyperspec): Don't get confused by a cl: or
	common-lisp: package prefix.

	* slime.el (slime-hyperspec-lookup): Don't get confused by a cl:
	or common-lisp: package prefix.

2006-03-26  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-enclosing-operator-names): Fix for situation
	when point is at end of buffer, as it happens often in the REPL.

2006-03-25  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (arglist-for-echo-area): New keyword arg,
	print-lines.
	(decoded-arglist-to-string): New function, implement argument
	highlighting also for &optional and &rest/&body arguments.
	(arglist-to-string): Use decoded-arglist-to-string.
	(arglist): New slots aux-args, known-junk, unknown-junk.
	(nreversef): New macro.
	(decode-arglist, encode-arglist): Refine to handle more structure
	in argument lists, including implementation-defined stuff like
	&parse-body.
	(format-arglist-for-echo-area): New keyword arg, print-lines.
	Simplify the code as there is no need to fall back to the unparsed
	arglist any more.

	* slime.el (slime-fontify-string): Fix for arguments spanning
	multiple lines.
	(slime-autodoc-message-dimensions): New.
	(slime-autodoc-thing-at-point): Use it here to either ask for a
	one-line or a nicely formatted multi-line arglist.
	(slime-enclosing-operator-names): Handle linebreaks.

2006-03-24  Mikel Bancroft  <mutandiz@yahoo.com>

	* swank-allegro.lisp (set-default-directory): Fix for pathnames
	without a trailing slash.

2006-03-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-background-activities-enabled-p): Allow
	"background activities" in sldb-mode.
	(slime-autodoc-message-ok-p): Allow autodoc in sldb-mode.
	(sldb-mode-syntax-table): New variable.
	(sldb-mode): Enable autodoc-mode when slime-use-autodoc-mode is
	true.  Use sldb-mode-syntax-table to make #<...> balance like
	parentheses.  This enables autodoc-mode to match #<unreadable>
	actual arguments in the backtraces with formal arguments of the
	function.
	(slime-beginning-of-symbol, slime-end-of-symbol): Handle
	es::|caped| symbols.
	(slime-enclosing-operator-names): Use syntax table to check
	whether we are at the beginning of a balanced expression.

2006-03-23  Christophe Rhodes  <csr21@cam.ac.uk>

	* swank.lisp (ed-in-emacs): Allow conses as function names.
	Ensure that there is a connection to emacs before sending the
	:ed message.

	* slime.el (slime-edit-definition): read names, not symbols.
	(slime-ed): handle conses whose car is not a string as function
	names.

2006-03-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-qualify-cl-symbol-name): Strip leading colon
	from package names for qualifying symbols.
	(slime-call-defun): New command.
	(slime-keys): Bind it to C-c C-y.
	(slime-easy-menu): Show it in the menu.

	* slime.el (slime-autodoc-use-multiline-p): New defcustom.
	(slime-autodoc-message): Use it here.  Fix bug that autodoc
	messages exceeding one line could not be overwritten by later
	autodoc messages.
	(slime-autodoc-pre-command-refresh-echo-area): Use message
	rather than slime-background-message.

	* swank.lisp (casify): Removed.
	(casify-char, tokenize-symbol-thoroughly): New functions.
	(parse-symbol): Use tokenize-symbol-thoroughly, so as to handle
	|escaped symbols|.  This fixes arglist display for operators with
	strange symbol names.

2006-03-23  Douglas Crosher <dcrosher@common-lisp.net>

	* swank-backend (accept-connection): add a 'timeout argument to
	this function.

	* swank-backend (set-stream-timeout): new implementation specific
	function.  Used to set the timeout for stream operations, which
	can help make the network connection establishment more robust.

	* swank (setup-server): ignore errors from the function 'serve to
	allow another connection to be made.

	* swank (serve-connection): ensure the listener socket is closed
	when 'dont-close is false, even if the connection attempt fails.

	* swank (accept-authenticated-connection): ensure the new
	connection is closed if the connection establishment fails.  Set a
	short stream timeout to prevent denial of survice.

	* swank (open-dedicated-output-stream): ensure the listener socket
	is closed, even if unable to open the dedicated stream.  Implement
	a timeout while waiting for a connection for the dedicate stream
	to prevent denial of service.

	* swank (create-connection): ensure the new connection is closed
	if not successful.

2006-03-22  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (arglist-for-echo-area): Fix when arg-indices are
	not given.

	* slime.el (slime-ed): Handle (FILENAME :charpos CHARPOS).

	* swank.lisp (inspect-for-emacs): Specialize on FILE-STREAM and
	STREAM-ERROR, offering to visit the file at the current stream
	position as an inspector action.  Useful for dealing with reader
	errors.

2006-03-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-autodoc-pre-command-refresh-echo-area):
	Show the last autodoc message again (movement commands clear it);
	technique to avoid flickering, taken from eldoc.
	(slime-autodoc-mode): Install it as a pre-command-hook.
	(slime-autodoc-last-message): New variable.
	(slime-autodoc-message): New function.
	(slime-autodoc): Use them here.
	(slime-autodoc-message-ok-p): OK to overwrite an autodoc message.

	* slime.el (slime-handle-indentation-update): Also update
	scheme-indent-function if slime-lisp-modes contains scheme-mode.

2006-03-19  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Highlight the formal argument corresponding to the actual
	argument around point in the echo-area arg-list display.
	Works most impressively when slime-autodoc-mode is enabled
	and when one has to deal with extremely long argument lists.

	* slime.el (slime-space): First insert the space, then obtain
	information.
	(slime-fontify-string): Also handle argument highlights.
	(slime-enclosing-operator-names): As a secondary value, return a
	list of the indices of the arguments to the nested operator.
	(slime-contextual-completions): Use changed interface of
	slime-enclosing-operator-names.
	(slime-function-called-at-point): Removed.
	(slime-function-called-at-point/line): Removed.
	(slime-autodoc-thing-at-point): New.
	(slime-autodoc): Re-implement with slime-enclosing-operator-names
	instead of slime-function-called-at-point.
	(slime-echo-arglist): Pass the argument indices to
	arglist-for-echo-area.
	(slime-autodoc-message-ok-p): Autodoc is also OK in REPL buffers.

	* swank.lisp (arglist-for-echo-area): New keyword argument
	arg-indices.
	(arglist-to-string): New keyword argument highlight.
	(format-arglist-for-echo-area): Likewise.

2006-03-18  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-goto-location-buffer): Avoid calling the
	expensive function find-file-noselect when we are already in the
	right buffer.

	* swank.lisp (arglist-for-echo-area): Add keyword argument
	print-right-margin.
	(arglist-to-string, format-arglist-for-echo-area): Likewise.
	* slime.el (slime-autodoc): Use it here to make use of the whole
	width of the echo area for arglist display.

2006-03-16  Gábor Melis  <mega@hotpop.com>

	* swank-allegro.lisp (inspect-for-emacs): Fix typo.

2006-03-16  Gary King  <gwking@metabang.com>

	* swank-loader.lisp (lisp-version-string): Modified swank-loader
	so that Allegro's alisp and mlisp programs get different
	locations. Otherwise mlisp complains about alisp's files.

2006-03-16  Marco Baringer  <mb@bese.it>

	* slime.el (slime-to-lisp-filename): Call expand-file-name before
	passing the filename to the to-lisp function.

2006-03-14  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-system-history): New variable.
	(slime-read-system-name): Use a separate history list for ASDF
	system names.
	(slime-note-counts-message): New variable.
	(slime-show-note-counts): Store the note counts message for later use.
	(slime-highlight-notes, slime-list-compiler-notes): Show a
	progress message, keeping note counts visible.
	(slime-find-buffer-package): Handle IN-PACKAGE forms that appear
	in SWIG/Allegro CL wrappers.

	* swank-allegro.lisp (compile-from-temp-file): Suppress Allegro's
	redefinition warnings; they are pointless when we are compiling
	via a temporary file.
	(profile-report): Implement.

2006-03-06   Nathan Bird  <nathan@acceleration.net>

	* slime.el (slime-create-filename-translator): use the tramp
	methods for dissecting and building filenames.

2006-03-04  Wojciech Kaczmarek  <wojtekk@kofeina.net>

	* slime.el (slime-filename-translations): Typo in example.
	(slime-create-filename-translator): Typo in generated lambdas.

2006-03-03  Marco Baringer  <mb@bese.it>

	Allow per-host (per machine-instance actually) filename
	translation functions.

	* slime.el (slime-translate-to-lisp-filename-function): removed.
	(slime-translate-from-lisp-filename-function): removed.
	(slime-filename-translations): New variable.
	(slime-to-lisp-filename): Rewrote to search through available
	transalations.
	(slime-from-lisp-filename): idem.
	(slime-create-filename-translator): New function.
	(slime-add-filename-translation): New function.

2006-02-27  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-eval-macroexpand-inplace): Indent the inserted
	macroexpansion.

2006-02-27  Marco Baringer  <mb@bese.it>

	Provide functions for performing macroexpansion inplace, use these
	functions in the *SLIME macroexpansion* buffer.

	* slime.el (slime-macroexpansion-minor-mode): Attempt to map
	-inplace functions to the same keys as their regular contureparts
	in slime-mode-map.
	(slime-eval-macroexpand-inplace): New function.
	(slime-macroexpand-1-inplace): New function.
	(slime-macroexpand-all-inplace): New function.
	* doc/slime.texi: Document new macroexpansion mode.

2006-02-26  Douglas Crosher <dcrosher@common-lisp.net>
	* swank-scl.lisp: (ext:stream-read-chars):  Correct the updating of
	the buffer index.  Fixes slime input stream problems.

2006-02-25  Helmut Eller  <heller@common-lisp.net>

	* swank-loader.lisp (default-fasl-directory): Previously we return
	only the directory-namestring which breaks SCL, because it loses
	the host and device components.  Return the complete pathname
	instead.  Patch by Douglas Crosher.

	* slime.el (slime-lisp-host): New variable. Replace all references
	to "127.0.0.1" with the variable.

2006-02-25  Douglas Crosher <dcrosher@common-lisp.net>

	* swank-backend.lisp (operate-on-system): symbol case fix for
	SCL's lowercase mode.

	* swak.lisp (setup-stream-indirection)
	(globally-redirect-io-to-connection)
	(revert-global-io-redirection): symbol case fixes.

	* swank-scl.lisp: (inspect-for-emacs):  Fixes for the inspect
	standard-objects, and inspect array.  Plus misc symbol case fixes.

2006-02-22  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-repl-send-input): Don't include the final
	newline in the slime-repl-input-face overlay, thus avoid showing the
	"Evaluation aborted" message in boldface.  Don't set non-existent
	"rear-nonsticky" overlay property; overlay stickiness is
	controlled by make-overlay arguments.

2006-02-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Use argument list information to complete keywords contextually.
	Example:  (find 1 '(1 2 3) :s <M-TAB> --completes--> :start
	rather than suggesting all ever-interned keywords starting with ":s".

	* slime.el (slime-complete-keywords-contextually): New
	customizable variable.
	(slime-enclosing-operator-names): New optional argument
	max-levels.
	(slime-completions-for-keyword): New.
	(slime-contextual-completions): New.
	(slime-expand-abbreviations-and-complete): Use it instead of
	slime-completions.

	* swank.lisp (operator-designator-to-form): New, factored out from
	arglist-for-echo-area.
	(arglist-for-echo-area): Use it here.
	(completions-for-keyword): New.
	(find-matching-symbols-in-list): New.

2006-02-19  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-expand-abbreviations-and-complete): Scroll the
	completions buffer if the TAB key is pressed another time, like
	Emacs minibuffer completion does.

2006-02-18  Marco Baringer  <mb@bese.it>

	* slime.el (slime-macroexpansion-minor-mode): New minor mode for
	macroexpansion buffer. Exactly like slime-temp-buffer-mode but
	with slime-macroexpand-again bound to "g".
	(*slime-eval-macroexpand-expression*): New variable. introduced
	for slime-macroexpand-again, used by slime-eval-macroexpand as
	well.
	(slime-eval-macroexpand): Added optional string argument which
	defaults to (slime-sexp-at-point-or-error).
	(slime-macroexpand-again): New function, redoes the last
	macroexpansion.
	(slime-sexp-at-point-or-error): New function. Like
	slime-sexp-at-point but signals an error when slime-sexp-at-point
	would return nil.
	* swank-openmcl.lisp
	(swank-mop:compute-applicable-methods-using-classes): Implement.

2006-02-16  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* sbcl-pprint-patch.lisp: New file, adds the annotations feature
	to the SBCL pretty printer.  This is needed for sending
	presentations through pretty-printing streams.
	* present.lisp [sbcl]: Load it here.
	(slime-stream-p, write-annotation) [sbcl]: Handle pretty-streams.

2006-02-10  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp, swank-lispworks.lisp (inspect-for-emacs):
	Use the backend specific method to inspect standard-objects
	because {slot-boundp,slot-value}-using-class don't conform to the
	MOP spec in LW and ACL.

	* swank.lisp (macro-indentation): Don't count '&optional as
	argument.

	* swank-loader.lisp (default-fasl-directory): Include the SLIME
	version.
	(slime-version-string): New.

2006-02-06  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Show enriched arglists for DEFMETHOD in the echo area when the
	user types SPC after the generic function name.

	* swank.lisp (arglist-to-template-string): Unused, removed.
	(extra-keywords): Indicate which part of the actual arglist was
	used to determine the extra keywords.  For MAKE-INSTANCE, don't
	signal an error if the class does not exist.
	(enrich-decoded-arglist-with-extra-keywords): Indicate which part
	of the actual arglist was used to determine the extra keywords,
	and whether any extra keywords were added.
	(form-completion): Generalize to handle display of enriched formal
	arglists.
	(read-incomplete-form-from-string): New, factored out from
	complete-form.  Handle end-of-file.
	(complete-form): Use it here.
	(format-arglist-for-echo-area): Use form-completion, so as to
	show enriched formal arglists for MAKE-INSTANCE and DEFMETHOD
	calls.
	(arglist-for-echo-area): Handle MAKE-INSTANCE and DEFMETHOD
	calls.

	* slime.el (slime-enclosing-operator-names): Represent
	MAKE-INSTANCE calls by (:make-instance "CLASS-NAME"), handle
	DEFMETHOD too.

2006-02-05  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-complete-form): Indent the inserted template.

2006-02-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-fontify-string): New.
	(slime-echo-arglist, slime-arglist, slime-autodoc): Use it here to
	fontify echo-area arglists.

2006-02-02  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp: Added imports for slot-boundp-using-class,
	slot-value-using-class and finalize-inheritance.

2006-02-01  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-abcl.lisp: define with-compilation-hooks (= funcall for
	now), so that you can do slime-oos

2006-01-30  Ian Eslick  <eslick@csail.mit.edu>

        Show slot values for metaclasses that override the default storage
	locations for objects slots (i.e. where the default slot-boundp
	returns nil) in the inspector.

	* swank.lisp (inspect-for-emacs standard-object): Use
	slot-value-using-class and slot-boundp-using-class.

	* swank-backend.lisp: Add slot-value-using-class and
	slot-boundp-using-class to the swank-mop package.

2006-01-26  Luís Oliveira  <loliveira@common-lisp.net>

	* slime.el (slime-enclosing-operator-names): detect make-instance
	forms and collect the class-name argument if it exists and is a
	quoted symbol.

	* swank.lisp (arglist-for-echo-area): handle pairs of of the form
	("make-instance" . "<class-name>") by passing them to
	format-initargs-and-initforms-for-echo-area.
	(class-initargs-and-iniforms): New function.
	(format-initargs-and-initforms-for-echo-area): New function.

2006-01-20 Mészáros Levente  <melevy@freemail.hu>

	* swank-sbcl.lisp (restart-frame): Provide an implementation even
	if it doesn't quite do what it's supposed to do.

2006-01-19  Helmut Eller  <heller@common-lisp.net>

	Return to the previous loading strategy: load everything when
	swank-loader is loaded.  It's just to convenient to give that up.
	To customize the fasl directories, the new variable
	swank-loader:*fasl-directory* can be set before loading
	swank-loader.

	* swank-loader.lisp (*fasl-directory*, *source-directory*): New
	variables.
	(load-swank): Call it during loading.

2006-01-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-compile-defun): If point was at the opening
	paren we wrongly used the preceding toplevel form.  Fix it.
	Reported by Chisheng Huang and Liam M. Healy.

	* swank.lisp (spawn-threads-for-connection): Fix a race condition:
	Don't accept input before all threads are ready.

	Make the fasl directory customizable: load-swank must now be
	called explicitly so that we can supply the fasl dir as argument.

	* swank-loader.lisp (load-swank): New entry point.

2006-01-14  Andreas Fuchs  <asf@boinkor.net>

	* slime.el (slime-selector ?r): Call slime instead of slime-start
	to pick up the usual defaults.

2005-12-31  Harald Hanche-Olsen  <hanche@math.ntnu.no>

	* slime.el (slime-open-stream-to-lisp): Inherit the
	process-coding-system from the current connection.

2005-12-27  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-abcl. (backtrace-as-list-ignoring-swank-calls): remove the
	swank calls from the backtrace to make it easier to use.
	(frame-locals): Fix a typo that caused entry into the debugger if
	you tried to look at frame locals. Now you don't error out, but
	you still don't see frame locals because I don't know how to get
	them :(

2005-12-27  Helmut Eller  <heller@common-lisp.net>

	Keep a history of protocol events for better bug reports.

	* swank.lisp (log-event): Record the event in the history buffer.
	(*event-history*): Buffer for events.
	(dump-event-history): New function.
	(close-connection): Escape non-ascii strings and include the event
	history in the error message.

2005-12-22  Helmut Eller  <heller@common-lisp.net>

	Make highlighting of modified text a minor mode. Also use
	after-change-functions instead of rebinding all self-inserting
	keys.

	* slime.el (slime-highlight-edits-mode): New minor mode.
	(slime-self-insert-command): Deleted.
	(slime-before-compile-functions): New hook to decouple edit
	highlighting from compilation.
	(slime-highlight-edits-face): Renamed from slime-display-edit-face.

2005-12-20  Marco Baringer  <mb@bese.it>

	When inspecting classes, methods and generic functions show all
	the slots in the case that what we're inspecting is a subclass of
	the standard class and has extra user defined slots.

	* swank.lisp (all-slots-for-inspector): New function.
	(inspect-for-emacs): Use all-slots-for-inspector.

2005-12-19  Peter Seibel  <peter@gigamonkeys.com>

	* slime.el (slime-self-insert-command): Got rid of message about
	setting up face and skipping edit-hilights when in a comment.

2005-12-18  Nikodemus Siivola  <nikodemus@random-state.net>

	* slime.el (slime-mode-hook): Bind simple characters to
	slime-self-insert-command only if there was no previous local
	binding, and the major mode is _not_ slime-repl-mode. This
	restores keybindings of slime-xref-mode and prevents us from
	stomping on user bindings. The hilighting also makes no sense in
	the REPL.

2005-12-16  Nikodemus Siivola  <nikodemus@random-state.net>

	* slime.el (slime-selector-method: ?r): If no connection offer to
	start Slime.

	* swank.lisp (to-string): Handle errors from printing objects.
	Among other things makes the inspector more robust in the face of
	objects with unbound slots and print-methods that fail to cope.

2005-12-16  William Bland  <doctorbill.news@gmail.com>

	Added hilighting of tetx which has been edited but not yet
	compilied.

	* slime.el (slime-display-edit-hilights): New variable.
	(slime-display-edit-face): New face.
	(slime-compile-file, slime-compile-defun, slime-compile-region):
	Remove edits overlay.
	(slime-remove-edits): New function.
	(slime-self-insert-command): New function.
	(slime-mode-hook): Rebind simple characters to
	slime-self-insert-command.

2005-12-07  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank-allegro.lisp (find-definition-in-file)
	(find-fspec-location, fspec-definition-locations): Allegro CL
	properly records all definitions made by arbitrary macros whose
	names start with "def".  Use excl::find-source-file and
	scm:find-definition-in-definition-group (rather than
	scm:find-definition-in-file) to find them.

	* slime.el (slime-load-file): Change the default to be the buffer
	file name with extension.  This is more convenient for files like
	.asd files that do not have the default source file extension.
	(slime-save-some-lisp-buffers, slime-update-modeline-package):
	Handle all files with major mode in slime-lisp-modes, not just
	lisp-mode.

2005-12-06  Juho Snellman  <jsnell@iki.fi>

	* swank-sbcl.lisp (function-source-location,
	safe-function-source-location): Oops, define these functions also
	for the >0.9.6 case. Fixes broken sldb-show-source on SBCL 0.9.7.

2005-12-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-find-coding-system): Use check-coding-system
	only if it's actually fbound.

2005-11-22  Marco Monteiro  <masmxx@gmail.com>

	* slime.el (slime-connect): Use slime-net-coding system if the
	optional arg coding-system was not supplied.

2005-11-22  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-compile-file): Call 'check-parens before
	compiling.
	(slime-compile-file): Call 'check-parens before compiling.
	(slime-find-coding-system): Return nil if the coding system
	isn'tvalid instead of singalling an error.
	(slime-repl-history-file-coding-system): Use
	slime-find-coding-system to find the default.

	* swank-cmucl.lisp (accept-connection): Remove fd-handlers if the
	encoding isn't iso-latin-1.

2005-11-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-start): Don't set slime-net-coding-system ..
	(slime-read-port-and-connect): .. read it from the inferior lisp args.
	(slime-connect): Take the coding-system as third argument.
	(slime-repl-history-file-coding-system): New user option.
	(slime-repl-safe-save-merged-history): New function.  Use it in
	hooks so that bad coding systems don't stop us from exiting.
	(slime-repl-save-history): Include the coding-system which was
	used to save the buffer.
	(repl-shoctut change-package): Add alias ,in and ,in-package.
	(slime-eval-macroexpand): Error out early if there's no sexp at
	point.
	(slime-compiler-macroexpand): New command.
	(slime-inspector-pprint): New command.

	* swank-cmucl.lisp (inspect-for-emacs): Add support for
	funcallable instances.

	* swank.lisp (pprint-inspector-part, swank-compiler-macroexpand): New.

	* swank-backend.lisp (compiler-macroexpand)
	(compiler-macroexpand-1): New functions.

2005-11-14  Douglas Crosher  <dcrosher@common-lisp.net>

	* swank-scl.lisp (accept-connection): handle the :buffering argument.

2005-11-13  Andras Simon  <andras@renyi.hu>

	* swank-abcl.lisp: (accept-connection): New argument: buffering.

2005-11-13  Andras Simon  <andras@renyi.hu>

	* swank-abcl.lisp: Steal auto-flush stuff from swank-sbcl.lisp

2005-11-11  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*dedicated-output-stream-buffering*): New variable
	to customize the buffering scheme.  For single-threaded Lisps we
	disable buffering because lazy programmers forget to call
	finish-output.
	(open-dedicated-output-stream): Use it.

	* swank-backend.lisp, swank-allegro.lisp, swank-lispworks.lisp,
	swank-openmcl.lisp, swank-cmucl.lisp, swank-sbcl.lisp,
	swank-clisp.lisp, swank-abcl.lisp, swank-corman.lisp,
	swank-ecl.lisp (accept-connection): New argument: buffering.

	* slime.el (slime-repl-save-history): When the history exceeds
	slime-repl-history-size remove the old not the new entries.
	Some renaming:
	slime-repl-read-history -> slime-repl-load-history,
	slime-repl-read-history-internal -> slime-repl-read-history.
	(slime-eval-macroexpand): Call font-lock-fontify-buffer
	explicitly, because with certain Emacs versions the buffer doesn't
	get fontified immediately.

2005-11-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-eval-macroexpand): Use lisp-mode (and
	font-lock-mode) when dispaying the expansion.  Suggested by Jan
	Rychter.

	* swank-source-path-parser.lisp (make-source-recording-readtable):
	Suppress the #. reader-macro.

2005-11-06  Juho Snellman  <jsnell@iki.fi>

	* swank-sbcl.lisp (find-definitions, make-source-location-specification
          make-definition-source-location, source-hint-snippet): As of
          SBCL 0.9.6.25 SB-INTROSPECT has better support for finding
          source locations. Use as much of it in swank-sbcl as possible.
          (Original version left reader-conditionalized for older SBCLs).

2005-11-04  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (connection-info): Docfix.

	* slime.el (slime-set-connection-info): Generate a new connection
	name only if the implementation-name and the inferior-lisp-name
	are different.

2005-10-31  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-start, slime-lookup-lisp-implementation)
	(slime-set-connection-info): Add a :name property for the
	implementation and use it to derive the connection-name.
	(slime-lisp-implementation-name): Renamed from
	slime-lisp-implementation-type-name.

	* swank.lisp (simple-serve-requests): Add an extra abort restart.
	(connection-info): Rename :type-name to :name.

2005-10-30  Andras Simon  <andras@renyi.hu>

	* swank-abcl.lisp (inspect-for-emacs): Track mop changes in ABCL.

2005-10-30  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-eval): Ensure that the connection is open before
	waiting for input.

	* swank.lisp (simple-serve-requests): Close the connection at the
	end.

2005-10-23  Harald Hanche-Olsen  <hanche@math.ntnu.no>

	* slime.el (slime-init-keymaps): Use vectors when defining keys,
	because e.g. (define-key (string ?\C-c) ...) doesn't work in the
	emacs-unicode-2 branch.

2005-10-23  Stefan Kamphausen  <skampi@gmx.net>

	* slime.el (slime-repl-history-size, slime-repl-history-file): Use
	defcustom to declare the variables.

2005-10-23  Gábor Melis  <mega@hotpop.com>

	* swank-backend.lisp (install-debugger-globally): new interface
	function

	* swank.lisp (install-debugger): call install-debugger-globally

	* swank-sbcl.lisp (install-debugger-globally): set
	sb-ext:*invoke-debugger-hook* too

2005-10-23  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (make-stream-interactive): Spawn a thread to
	flush interactive streams in reasonably short intervals.
	Remove the old backward-compatible threading implementation.

	* swank.lisp (package-string-for-prompt): Respect *print-case*.

2005-10-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-start-swank-server): Avoid comint-send-input
	here as it seems to trigger a bug in ansi-color-for-commit-mode.

2005-10-18  Douglas Crosher  <dcrosher@common-lisp.net>

	* swank.lisp (canonical-package-nickname): always return the
	package name as a STRING if found.  This restores the printing of
	package names as strings.

2005-10-17  Marco Baringer  <mb@bese.it>

	* swank.lisp (eval-in-emacs): Instead of taking a string and
	attempting to parse it emacs side the function now takes a form
	and converts it to a string internally. This should allow users of
	the function to not have to worry about quoting issues and emacs'
	different printed represenation for, among other things,
	characters.
	(process-form-for-emacs): New function. Converts a list into a
	string for passing to emacs.

	* slime.el (slime-eval-for-lisp): New API. This function now takes
	a single string, representing the form to evaluate, and uses
	emacs' read function to convert it into a form before eval'ing it.
	(slime-dispatch-event): The :eval event now passes a single
	string (instead of a string and something looking kind of like a
	form).

2005-10-15  Douglas Crosher  <dcrosher@common-lisp.net>

	* swank-scl.lisp: Support for Scieneer Common Lisp.

	* swank-backend.lisp (*gray-stream-symbols*) Scieneer Common Lisp
	implements stream-line-length.

	* swank-loader.lisp: Support for Scieneer Common Lisp:
	(*sysdep-pathnames*) use swank-scl.
	(*impl ementation-features*) add :scl.
	(*os-features*) add :hpux.
	(*architecture-features*) add :amd64, :i686, :i486, :sparc64, :sparc,
	   :hppa64, and :hppa.

	* swank.lisp: (*canonical-package-nicknames*) use lowercase
	symbols to name the packages.  This supports CL implementations
	with lowercase default symbol names, such as Scieneer Common Lisp,
	while still being compatible with ANSI-CL.

2005-10-11  Stefan Kamphausen  <skampi@gmx.net>

	* slime.el: Persistent REPL history.  The history from REPL
	buffers is now saved to the file ~/.slime-history.eld.  The file
	is read on startup and saved when a REPL buffer gets killed or
	when Emacs exits.  There are also commands to save or read the
	history file.
	(slime-repl-save-merged-history, slime-repl-merge-histories)
	(slime-repl-read-history, slime-repl-save-history): New functions.
	(slime-repl-history-file, slime-repl-history-size): New vars.
	(slime-repl-mode): Add hooks to load and save the history.

2005-10-11  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-read-interactive-args): Split the string
	inferior-lisp-program to get the values for :program and
	:program-args.  Also let slime-lisp-implementations take
	precedence if non-nil.
	(slime-lisp-implementations): Renamed from
	slime-registered-lisp-implementations.

	* swank.lisp (force-user-output): There seems to be a bug in
	Allegro's two-way-streams. As a workaround we use force-output for
	the user-io stream.  (finish-output *debug-io*) still triggers the
	bug.

2005-10-10  Svein Ove Aas  <svein.ove@aas.no>

	* swank-allegro.lisp (find-external-format): Translate :utf-8-unix
	to :utf8, which Allegro 7.0 understands.

2005-10-09  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime, slime-start): Introduce a separate function for
	the non-interactive case.  `slime-start' takes lots of keyword
	arguments and `slime' is reserved for interactive use.
	(slime-read-interactive-args): New function.
	(slime-maybe-start-lisp, slime-inferior-lisp)
	(slime-start-swank-server): Pass all arguments needed to start
	the subprocess as a property list.  Also store this list in a
	buffer-local var in the inferior-lisp buffer, so that we can
	cleanly restart the process.
	(slime-registered-lisp-implementations): Change the format and
	document it.  M-- M-x slime can now be used select a registered
	implementation.
	(slime-symbolic-lisp-name): Deleted. And updated all the functions
	which passed it along.
	(slime-set-connection-info): Use the new format.
	(slime-output-buffer): Don't re-initialize buffer-local variables
	if the buffer already exists.  This saves the history. From Juho
	Snellman.

	* swank-cmucl.lisp (sis/in): Use finish-output instead of
	force-output.

	* swank.lisp (connection-info): Include the initial package and
	a more self-descriptive format.

2005-10-01  Juho Snellman  <jsnell@iki.fi>

	* swank-backend (*gray-stream-symbols*): Add :STREAM-LINE-LENGTH
        to *GRAY-STREAM-SYMBOLS* on implementations that support this
        extension to gray streams. Reported by Matthew D Swank.

2005-09-29  Luke Gorrie  <luke@synap.se>

	* swank-scheme48: Removed due to excessive whining.

2005-09-28  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-multiprocessing): Deleted. No longer needed.
	(slime-init-command): Updated accordingly.
	(slime-current-package): Add a special case for Scheme.
	(slime-simple-completions, slime-apropos): Quote the package,
	because in can be a plain symbol in Scheme.
	(slime-inspector-reinspect): Use a proper defslimefun.

	* swank.lisp (inspector-reinspect): New function.
	(start-server): Call initialize-multiprocessing before starting
	the server and startup-idle-and-top-level-loops afterwards.
	Calling startup-idle-and-top-level-loops here shouldn't be a
	problem because start-server is only invoked at startup via stdin.

	* swank-scheme48/source-location.scm: New file. For M-.
	* swank-scheme48/module.scm (list-all-package): New function.
	* swank-scheme48/interfaces.scm (module-control-interface): Export it.
	* swank-scheme48/inspector.scm: Add methods for records and hashtables.
	(swank:arglist-for-echo-area): Implement it.  Only works for
	functions with enough debug-data (ie. only user-defined functions).
	* swank-scheme48/completion.scm: New file.
	(swank:simple-completions, swank:apropos-list-for-emacs): Implemented.
	* swank-scheme48/load.scm, swank-scheme48/defrectypeX.scm: Renamed
	the file from defrectype*.scm
	* swank-scheme48/packages.scm (swank-general-rpc): Don't use
	posix-process because it doesn't work on Windows, and we don't need
	it for a mulithreaded server.

2005-09-22  Helmut Eller  <heller@common-lisp.net>

	* swank-backend.lisp (*gray-stream-symbols*): Collect the needed
	symbols here, so that we don't need to mention them in every
	backend.
	(import-from). New function.

	* swank-sbcl.lisp, swank-allegro.lisp, swank-lispworks.lisp,
	swank-openmcl.lisp, swank-ecl.lisp: Use *gray-stream-symbols* when
	importing the needed symbols.

	* swank-gray.lisp (stream-fresh-line): Define a method, so that
	Allegro passes our tests.

2005-09-21  Aleksandar Bakic  <a_bakic@yahoo.com>

	* swank.lisp (accept-authenticated-connection): Minor fix. Ensure
	that the decoded message is a string before calling string= on it.

2005-09-21  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-setup-command-hooks): Make
	after-change-functions a buffer-local variable; it's by default
	global in XEmacs.

	* swank.lisp (throw-to-toplevel): Invoke the `abort-restart'
	request instead of throwing to the `slime-toplevel' catch tag.
	(handle-request): Rename the restart from abort to abort-request.
	(call-with-connection): Remove the slime-toplevel catch tag
	because with-connection is used in far to many places which aren't
	at "toplevel".

	* present.lisp (presentation-start, presentation-end): Use
	finish-output instead of force-output.

	* swank-gray.lisp, swank-cmucl.lisp: Improve stream efficiency by
	buffering more output. stream-force-output simply does nothing, if
	the output buffer was flushed less than 200 millisecons before.
	stream-finish-output can still be used to really flush the buffer.
	(slime-output-stream): New slot last-flush-time.
	(stream-finish-output): New function. Do what stream-force-output
	did previously.
	(stream-force-output): Buffer more output.

	* slime.el (slime-process-available-input): Oops, don't start a
	timer for every event.
	(slime-write-string): Renamed from slime-output-string.
	(slime-dispatch-event): Rename :read-output to :write-string.
	(slime-io-speed-test): New command.
	(slime-open-stream-to-lisp): Fix parens. The coding system should
	also be set if presentations are disabled.

	* swank.lisp (make-output-function): Rename :read-output to
	:write-string.
	(eval-for-emacs, interactive-eval, eval-region): Use finish-output
	not force-output.

	* swank-sbcl.lisp, swank-openmcl.lisp, swank-allegro.lisp,
	swank-lispworks: Import `stream-finish-output'.

	* swank-scheme48/io.scm (empty-swank-output-buffer): Rename
	:read-output to :write-string.

	* swank-scheme48/load.scm (slime48-start): Fix '() vs. #f bug.

2005-09-19  Luke Gorrie  <luke@synap.se>

	* nregex.lisp: Released into the public domain by Lawrence E. Freil.

2005-09-19  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime48): New command.

2005-09-19  Taylor R. Campbell  <campbell@mumble.net>

	* swank-scheme48/: New backend.

2005-09-18  Wolfgang Jenkner  <wjenkner@inode.at>

	* bridge.el: cl is required at macro expansion time (because of
	`block').  Reported by Matthew D Swank.

2005-09-18  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp: Move presentation menu protocol here from present.lisp.

2005-09-15  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el (slime-repl-return) don't copy presentation to input if
	already in input area.

2005-09-15  Helmut Eller  <heller@common-lisp.net>

	* swank-clisp.lisp (compute-backtrace): Include only "function
	frames" in the backtrace.  I hope that makes some sense.
	(sldb-backtrace, function-frame-p): New functions.
	(*sldb-backtrace*, call-with-debugging-environment, nth-frame):
	Compute and remember the backtrace when entering the debugger.
	(arglist): If the function has a function-lambda-expression, fetch
	the arglist from there.
	(find-encoding): Use strings instead of 'charset:foo symbols to
	avoid compile time problems if the charset is not available.
	Suggested by Vaucher Laurent.

	* swank.lisp (eval-in-emacs): Fix a race condition which occurred
	with sigio.
	(*echo-area-prefix*): New variable.

	* slime.el (slime-process-available-input): Simplify it a bit and
	make it easier to debug read errors.
	(slime-net-close): Don't kill the buffer if the new optional arg
	`debug' is true.
	(slime-run-when-idle): Accept arguments for the function.
	(slime-init-connection-state): Close over the proc variable. It
	was lost when the async evaluation returned.
	(slime-output-buffer, slime-connection-output-buffer): Make
	slime-output-buffer faster by keeping the buffer in a connection
	variable.
	(slime-restart-inferior-lisp-aux, slime-quit-lisp): Disable the
	process filter to avoid errors in XEmacs.

2005-09-14  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el (slime-menu-choices-for-presentation),
	(slime-presentation-menu) Fix loss after refactoring. xemacs can't
	handle lambda forms in the menu spec given to x-popup-menu, only
	symbols, so save the actions in a hash table keyed by a gensym,
	give x-popup-menu the gensym and then call the gensym. Haven't
	checked that it actually works in xemacs because my xemacs is
	hosed in os x Tiger. Could someone let me know...

	* swank.lisp (inspect-factor-more-action)
	rename (inspect-show-more-action) Prompt before reading how many
	more. Would be nicer to prompt in the minibuffer...

2005-09-14  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-presentation-expression): Remove handling of
	cons presentation-ids.

2005-09-13  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el (defcustom slime-ed-use-dedicated-frame ... vs defvar

	(defcustom slime-when-complete-filename-expand: Use
	comint-replace-by-expanded-filename instead of
	comint-dynamic-complete-as-filename to complete file names

	* swank.lisp (run-repl-eval-hooks .. finally (return vs no return

	inspector-call-nth-action Allow second value :replace for
	inspector actions

	(defvar *slime-inspect-contents-limit* default nil. How many
	elements of a hash table or array to show by default. If table has
	more than this then offer actions to view more. Set to nil for no
	limit. Probably should set default to reasonable value - I like
	200.

	(inspect-for-emacs ((ht hash-table) inspector)) - banner line is
	hash table object.  Respect *slime-inspect-contents-limit*

	(defmethod inspect-for-emacs ((array array) inspector)
	Respect *slime-inspect-contents-limit*

	* swank-openmcl.lisp inspector for closures shows closed-over
	values. To be fixed: inspector-princ needs to be loaded earlier
	since swank package not available when compiling

2005-09-13  Helmut Eller  <heller@common-lisp.net>

	* present.lisp (menu-choices-for-presentation-id): Use
	lookup-presented-object secondary return value instead of
	*not-present*.
	(execute-menu-choice-for-presentation-id, presenting-object-1):
	Remove references to *can-print-presentation*.

	* slime.el (slime-current-output-id): Remove this ugly klugde.
	(slime-repl-insert-result): New function. Handle the presentations
	and other special cases cleaner.
	(slime-repl-insert-prompt): Use it. The `result' arg is now a
	structured list; update callers accordingly.
	(slime-repl-return): Make the prefix arg work again.
	(package-updating): The result of swank::listener-eval changed a
	bit. Update the test.

	Remove some unnecessary uses of `defun*' and reindent it to 80
	columns.

	* swank.lisp: Simplify the object <-> presentation-id mapping.
	(save-presented-object): Remove the optional `id' arg.
	(lookup-presented-object): Id should be a fixnum not some cons
	with fuzzy/non-documented meaning.  Use the secondary return value
	to test for absence of the id.  Update callers accordingly.
	(*not-present*): Deleted.

	Remove the repl result special cases, let the general presentation
	machinery handle it.
	(*last-repl-result-id*, add-repl-result, *current-id*)
	(clear-last-repl-result): Deleted.
	(listener-eval): Don't *current-id* to tag result values.

	(*can-print-presentation*): Deleted. Nobody quite knows whether
	it's still needed so let just try without it.  Updated referrers
	accordingly.

	(eval-region, run-repl-eval-hooks): Move the eval hook stuff to
	a separate function.

	* swank-loader.lisp (lisp-version-string)[cmu]: Replace spaces
	with underscores.

2005-09-12  NIIMI Satoshi  <sa2c@sa2c.net>

	* swank.lisp, slime.el, swank-clisp.lisp, swank-sbcl.lisp: add
	EUC-JP as coding system.  This patch eliminates the requirement of
	Mule-UCS to use Japanese characters.  (Nice for pre-22 Emacs
	users.)

2005-09-10  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-enable-evaluate-in-emacs): Resurrected.
	(slime-dispatch-event): Respect slime-enable-evaluate-in-emacs for
	messages :eval-no-wait and :eval.

2005-09-09  Alan Ruttenberg  <alanr-l@mumble.net>
	* slime.el (slime-choose-overlay-region). Don't try to overlay a
	note if location is nil.

2005-09-08  Alan Ruttenberg  <alanr-l@mumble.net>

	* bridge.el Fix bug in bridge filter where a bridge message which
	straddled a packet would be mishandled. Sometimes this would
	result in spurious bridge message text being inserted with the
	presentation and the presentation not being sensitive. In other
	cases there would be an actual error. Introduce bridge-leftovers
	to save the last, unfinished bit for the next call, and prepend it
	before processing a chuunk. Also, fix the parentheses so that the
	unwind protect cleanup forms are actually in the cleanup section.
	In openmcl, where apparently communication with slime is done in
	2k chunks, you can trigger the bug with something like this:
	(swank::presenting-object 'foo t
	  (dotimes (i 2040) (write-char	#\:)))

	* swank-openmcl.lisp (handle-compiler-warning). Don't create a
	location if the condition doesn't have a filename. If it does,
	make sure you pass a string rather than a pathname object
	otherwise you get a net-read error

2005-09-07  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* present.lisp (menu-choices-for-presentation): The
	Inspect/Describe/Copy items are now provided from the Emacs side.
	Implement all pathname menu items without having Emacs evaluate a
	form.  Fix for Lisps where ".lisp" is parsed as :name ".lisp".

	* slime.el (slime-menu-choices-for-presentation): New function,
	return a menu with Inspect/Describe/Copy plus the items that come
	from the menu protocol.
	(slime-presentation-menu): Security improvement for the
	presentation menu protocol: Don't eval arbitrary forms coming from
	the Lisp.  Minor cleanup: Use x-popup-menu in the normal Emacs way,
	associating a command with each menu item.

2005-09-05  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (background-message): New function. Forward the
	call to the front end.
	(pre-gc-hook, post-gc-hook): Use it.
	(swank-sym, sending-safe-p): Deleted.

	* swank.lisp (y-or-n-p-in-emacs): Simplify arglist.
	(evaluate-in-emacs, dispatch-event, send-to-socket-io): Remove
	evaluate-in-emacs stuff.
	(to-string): Undo last change. to-string is not to supposed to
	ignore errors.  Bind *print-readably* instead.
	(background-message): New function.
	(symbol-external-p): Simplify it a little.

	* slime.el (slime-setup-command-hooks): Add after-change-functions
	only if presentations are enabled.
	(slime-dispatch-event, slime-enable-evaluate-in-emacs)
	(evaluate-in-emacs): Remove evaluate-in-emacs stuff.  It was not
	used and redundant.
	(slime-save-some-lisp-buffers): Renamed from
	save-some-lisp-buffers.
	(slime-choose-overlay-region): Ignore :source-form locations.
	(slime-choose-overlay-for-sexp): Ignore errors when stepping over
	forms.
	(slime-search-method-location, slime-goto-location-position): Move
	all this regexpery to its own function.
	(slime-recenter-if-needed, slime-repl-return): Factor some
	duplicated code into its own function.
	(slime-presentation-bounds, slime-presentation-around-point)
	(slime-presentation-around-or-before-point): Minor cleanups.

2005-09-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-ensure-presentation-overlay): New.
	(slime-add-presentation-properties): Don't add face, mouse-face,
	keymap text properties.  Call slime-ensure-presentation-overlay to
	implement them via overlays.
	(slime-remove-presentation-properties): Don't remove these text
	properties.  Delete the right overlay.
	(slime-after-change-function): Add overlays for presentations if
	necessary.
	(slime-copy-presentation-at-point): Don't add face text property.
	(slime-repl-grab-old-output): Likewise.

2005-08-31  Marco Baringer  <mb@bese.it>

	* swank.lisp (to-string): Handle errors during printing of objects.

2005-08-30  Alan Ruttenberg  <alanr-l@mumble.net>
	* slime.el (slime-mark-presentation-start/end-handler) modify
	regexp to recognize negative presentation ids to make
	presenting-object work with bridge mode.

2005-08-30  Luke Gorrie  <luke@synap.se>

	* present.lisp: Added public domain dedication (OK'd by Alanr and
	Matthias on the list).

2005-08-29  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank-lispworks.lisp (env-internals:confirm-p): Use new function
	y-or-n-p-in-emacs rather than eval-in-emacs.

	* swank-cmucl.lisp (eval-in-emacs): Removed.
	(send-to-emacs): New.
	(pre-gc-hook, post-gc-hook): Use new protocol message
	:background-message rather than eval-in-emacs.

	* swank.lisp (dispatch-event, send-to-socket-io): Handle new
	messages :y-or-n-p, :background-message.
	(y-or-n-p-in-emacs): New function.

	* slime.el (slime-dispatch-event): Handle new messages :y-or-n-p,
	:background-message.
	(slime-y-or-n-p): New.

2005-08-29  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el (sldb-insert-condition) - Add tooltip for long
	condition string which otherwise falls off the right of the screen
	* swank.lisp (list-threads) - thread name might be a symbol - pass
	the symbol name when that happens

2005-08-29  Juho Snellman  <jsnell@iki.fi>

	* swank-sbcl.lisp (make-weak-key-hash-table): Remove the
        implementation; SBCL doesn't actually support weak hash-tables.

2005-08-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-repl-kill-input): New command.
	(slime-repl-mode-map): Bind it to C-c C-u, like in comint.
	(slime-repl-easy-menu): Include it in the REPL menu.
	(slime-repl-mode-hook): Show the SLIME menu in the REPL too.

	* swank-backend.lisp (make-weak-key-hash-table)
	(make-weak-value-hash-table): New interfaces.
	* swank-cmucl.lisp (make-weak-key-hash-table): Implement it.
	* swank-sbcl.lisp (make-weak-key-hash-table): Implement it.
	* swank-openmcl.lisp (make-weak-key-hash-table)
	(make-weak-value-hash-table): Implement it.

	* swank.lisp (*object-to-presentation-id*)
	(*presentation-id-to-object*): Use new functions
	make-weak-key-hash-table, make-weak-value-hash-table.

	* slime.el (slime-enable-evaluate-in-emacs): New variable.
	(evaluate-in-emacs): Security improvement: If
	slime-enable-evaluate-in-emacs is nil (the default), don't
	evaluate forms sent by the Lisp.

	* swank.lisp (send-to-socket-io): Handle :evaluate-in-emacs.

2005-08-27  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-presentation-menu): When an object is no longer
	recorded, remove text properties from the presentation.

2005-08-15  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-openmcl.lisp (condition-source-position)
	ccl::compiler-warning-stream-position is sometimes nil, so placate
	this function by making it (or .. 0). Wrong but I don't have
	enough time now to figure out what the right thing is.


2005-08-24  Marco Baringer  <mb@bese.it>

	* swank.lisp (fuzzy-find-matching-symbols): When completing the
	string "package:" present a list of all the external symbols in
	package (completing "package::" lists internal symbols as well).
	(inspect-for-emacs standard-class): List all the slots in the
	class (as per standard-object). The previous method of hard coding
	the slots in the inspector's code made inspecting custom
	meta-classes useless.

2005-08-24  Christophe Rhodes  <csr21@cam.ac.uk>

	* swank-sbcl.lisp (method-definitions): present qualifiers (if
	any).

2005-08-23  Taylor R. Campbell  <campbell@bloodandcoffee.net>

	* slime.el (slime-goto-location-position): Added a second regexp
	for the :function-name case which matches "(def... ((function-name
	..." (with N opening parens preceding the function name). This is
	to allow scheme48 style function names and definitions.

2005-08-22  Wolfgang Jenkner  <wjenkner@inode.at>

	* swank-clisp.lisp (fspec-pathname): Cope with CVS CLISP's
	(documentation symbol 'sys::file) returning a list.  Return either
	a list of start and end line positions or nil as second value.
	(fspec-location): Use it.  Also, if we have to guess the name of a
	source file make sure that it actually exists.

	(with-blocked-signals, call-without-interrupts): Don't add
	:linux to *features* since this changes the return value of
	unique-directory-name in swank-loader.lisp.
	Comment out with-blocked-signals.

	Update some comments at the top of the file.
	State the licence in the same terms as slime.el does.

2005-08-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* present.lisp (menu-choices-for-presentation-id): Check against
	the gensym in *not-present* instead of :non-present.

2005-08-20  Christophe Rhodes  <csr21@cam.ac.uk>

	* swank-sbcl.lisp (preferred-communication-style): guard against
	non-Linux non-linkage-table platforms (and assume that they won't
	have dodgy threads) with #+linux.

2005-08-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Enable nested presentations.

	* slime.el (slime-presentation): Remove slots start-p, stop-p.
	(slime-add-presentation-properties): Use a new text property
	layout.  Also add an overlay to enable nested highlighting.
	(slime-remove-presentation-properties): New.
	(slime-presentation-whole-p): Changed interface.
	(slime-presentations-around-point): New.
	(slime-same-presentation-p): Removed.
	(slime-presentation-start-p, slime-presentation-stop-p): New.
	(slime-presentation-start, slime-presentation-end): Changed to use
	new text property layout.
	(slime-presentation-bounds): New.
	(slime-presentation-around-point): Reimplemented to handle nested
	presentations.
	(slime-for-each-presentation-in-region): New.
	(slime-after-change-function): Use
	slime-remove-presentation-properties and
	slime-for-each-presentation-in-region.
	(slime-copy-presentation-at-point): Complain if no presentation.
	(slime-repl-insert-prompt): Don't put rear-nonsticky text property.
	(slime-reify-old-output): Handle nested presentations.
	(slime-repl-return): Use slime-presentation-around-or-before-point.

	Enable reification of presentations in non-REPL buffers.

	* slime.el (slime-buffer-substring-with-reified-output): New,
	factored out from slime-repl-current-input.
	(slime-repl-current-input): Use it here.
	(slime-last-expression): Use it here.

	(slime-add-presentation-properties): Add text properties
	modification-hooks et al. to enable self-destruction of incomplete
	or edited presentations in non-REPL buffers.

2005-08-15  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el (slime-goto-location-position) fix so the :method locator
	regexp so that it can find eql specializers, (setf foo) methods, and to
	allow (a single) newline between arguments in the arglist.

	* swank-openmcl.lisp (specializer-name) patch from Gary Byers and
	Bryan O'Conner to fix complaint about certain classes slipping
	through the etypecase

2005-08-14  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-mark-presentation-end): Really remove the
	presentation-start entry from the hash table.

	Merge some code from present.lisp, removing code duplication.
	Minor code clean-up.

	* swank.lisp (*object-to-presentation-id*)
	(*presentation-id-to-object*, clear-presentation-tables)
	(*presentation-counter*, lookup-presented-object): Move here from
	present.lisp.
	(save-presented-object): Likewise.  Assign negative numbers only,
	so as not to clash with continuation ids.

	* swank.lisp (*repl-results*): Removed.

	* swank.lisp (get-repl-result, clear-repl-results): Use new
	implementations from present.lisp.
	(add-repl-result): Likewise, don't take the negative of the id.
	(*last-repl-result-id*): New variable.
	(clear-last-repl-result): Use it here.

	* slime.el (slime-repl-insert-prompt): Don't take the negative of
	the id.
	(slime-presentation-expression): New, take care to handle
	arbitrary *read-base* settings.
	(reify-old-output): Use it here.
	(slime-read-object): Use it here.

2005-08-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (substring-no-properties): Fix to handle non-zero start
	argument correctly.

	Patch to remove use of the slime-repl-old-output text property in
	favor of the slime-repl-presentation text property, in order to
	simplify the code.

	* slime.el (slime-presentation-whole-p): Generalize to work with
	strings too.
	(slime-presentation-start, slime-presentation-end): Likewise.
	(slime-presentation-around-point): Likewise.
	(slime-presentation-around-or-before-point): New.

	* slime.el (reify-old-output): Use slime-repl-presentation
	property and slime-presentation-around-point function rather than
	slime-repl-old-output property.
	(slime-repl-return): Use slime-repl-presentation rather than
	slime-repl-old-output.
	(slime-repl-grab-old-output): Use
	slime-presentation-around-or-before-point.
	(slime-read-object): Use slime-presentation-around-point.

	* slime.el (toplevel): Don't handle slime-repl-old-output text
	property.
	(slime-add-presentation-properties): Likewise.
	(slime-after-change-function): Likewise.

2005-08-12  Yaroslav Kavenchuk  <kavenchuk@jenty.by>

	* swank-clisp.lisp (fspec-pathname): Use the documentation
	function instead of accessing clisp internals.

2005-08-11  Edi Weitz  <edi@agharta.de>

	* swank.lisp (transpose-lists): Fixed it.

2005-08-10  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el move slime-repl-add-to-input-history to
	slime-repl-send-input so we can see the presentations we copied to
	input when we reuse history rather than #.(blah...)
	[Thanks Matthias! - was very busy and just returned to see your
	changes merged. Most excellent.]

2005-08-10  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-presentation-around-point): Change interface,
	return presentation as primary return value.
	(slime-copy-presentation-at-point): Use
	slime-presentation-around-point.  Copying now also works when the
	first character is clicked and when the REPL buffer is not current.
	(slime-presentation-menu): Use slime-presentation-around-point.

2005-08-10  Martin Simmons  <martin@lispworks.com>

	* swank-lispworks.lisp (defadvice compile-file): Return all values
	from the real compile-file.

2005-08-10  Edi Weitz  <edi@agharta.de>

	* swank.lisp (transpose-lists): Replaced with much nicer function
	by Helmut Eller.

2005-08-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-read-object): Handle ids that are conses.
	Patch by "Thas" on #lisp.

2005-08-09  Edi Weitz  <edi@agharta.de>

	* swank.lisp (transpose-lists): Reimplemented without APPLY so we
	don't have problems with CALL-ARGUMENTS-LIMIT.

2005-08-08  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (undo-in-progress): Define for XEmacs compatibility.
	Reported by Friedrich Dominicus.

2005-08-07  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Fix for the presentations menu.  Reported by Aleksandar Bakic.

	* present.lisp (lookup-presented-object): Handle ids that are
	conses.
	(execute-menu-choice-for-presentation-id): Use equal for comparing
	ids, to handle the cons case.
	(menu-choices-for-presentation): Quote the presentation id, as it
	can be a cons.
	* slime.el (slime-presentation-menu, slime-presentation-menu)
	(slime-inspect-presented-object): Quote the presentation id.

2005-08-06  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (form-completion): New generic function, factored out
	from complete-form.
	(complete-form): Factor out form-completion.
	(form-completion): Specialize on defmethod forms to insert arglist
	of generic function.

	* doc/slime.texi (Programming Helpers): Document C-c C-s,
	slime-complete-form.

2005-08-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Improvements to the presentations feature.  Parts of presentations
	can be copied reliably using all available Emacs facilities (not
	just kill-ring-save), and they are no longer "semi-readonly" (in
	the sense that keypresses are silently ignored).  Whenever a user
	attempts to edit a presentation, it now simply turns into plain
	text (which is indicated by changing the face); this can be
	undone.  Presentations are now also supported if
	*use-dedicated-output-stream* is nil.  It is now possible to
	access the individual values of multiple-value results.  For some
	systems (Allegro CL and upcoming CMUCL snapshots), presentations
	can be reliably printed through pretty-printing streams.

	* present.lisp (slime-stream-p) [allegro]: Allow printing
	presentations through pretty printing streams.
	[cmu]: Allow printing presentations through pretty printing
	streams, if CMUCL has annotations support and we are using the
	bridge-less protocol.
	[sbcl]: Allow printing presentations through indenting streams.

	* present.lisp (write-annotation): New function.
	(presentation-record): New structure.
	(presentation-start, presentation-end): New functions, supporting
	both bridge protocol and bridge-less protocol.
	(presenting-object-1): Use them here.

	* present.lisp [sbcl, allegro]: Add printer hooks for unreadable
	objects and pathnames.

	* swank.lisp (*can-print-presentation*): New variable, moved here
	from present.lisp.
	* swank.lisp (interactive-eval, listener-eval, backtrace)
	(swank-compiler, compile-file-for-emacs, load-file)
	(init-inspector): Bind *can-print-presentation* to an appropriate
	value.
	* present.lisp: Remove code duplication with swank.lisp for the
	functions above.

	* swank.lisp (encode-message): Don't use the pretty printer for
	printing the message length.

	* slime.el (slime-dispatch-event): New events :presentation-start,
	:presentation-end for bridge-less presentation markup.
	* swank.lisp (dispatch-event, send-to-socket-io): Likewise.

	* swank.lisp (listener-eval): Store the whole values-list with
	add-repl-result.
	* slime.el (slime-repl-insert-prompt): Accept a list of strings,
	representing individual values of a multiple-value result.  Mark
	them up as separate presentations.
	(reify-old-output): Support reifying individual values of a
	multiple-value result.

	* slime.el (slime-pre-command-hook): Don't call
	slime-presentation-command-hook.
	(slime-post-command-hook): Don't call
	slime-presentation-post-command-hook.
	(slime-presentation-command-hook): Removed.
	(slime-presentation-post-command-hook): Removed.

	* slime.el (slime-presentation-whole-p): New.
	(slime-same-presentation-p): New.
	(slime-presentation-start, slime-presentation-end): New.
	(slime-presentation-around-point): New.
	(slime-after-change-function): New.
	(slime-setup-command-hooks): Install slime-after-change-function
	as an after-change-function.

	* slime.el (slime-repl-enable-presentations): Make
	slime-repl-presentation nonsticky.
	(slime-mark-presentation-start, slime-mark-presentation-end): New
	functions.
	(slime-mark-presentation-start-handler): Renamed from
	slime-mark-presentation-start.
	(slime-mark-presentation-end-handler): Renamed from
	slime-mark-presentation-end.
	(slime-presentation): New structure.
	(slime-add-presentation-properties): New function.
	(slime-insert-presentation): New function.

2005-08-03  Zach Beane  <xach@gwi.net>

	* swank-sbcl.lisp (swank-compile-string): Restore honoring of
	*trap-load-time-warnings*.

2005-08-03  Juho Snellman  <jsnell@iki.fi>

	* swank-sbcl.lisp: Remove SBCL 0.9.1 support.
        (swank-compile-string): Funcall the compiled function outside
        with-compilation-hooks to prevent runtime warnings from
        popping up a *compiler-notes* buffer.

2005-07-29  Marco Baringer  <mb@bese.it>

	* doc/slime.texi (Other configurables): Document
	*dedicated-output-stream-port*.

	* swank.lisp (*dedicated-output-stream-port*): New variable.
	(open-dedicated-output-stream): Open the stream on the port
	*dedicated-output-stream-port*.

	* slime.el (slime-set-default-directory): Fix typo in doc string.

2005-07-26  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* swank.lisp (inspect-for-emacs): Don't make whitespace
	surrounding :action buttons part of the highlighted region.

	* slime.el (slime-goto-location-buffer): Put "SLIME Source Form"
	buffer into Lisp mode.

2005-07-26  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (compile-file-for-emacs): Accept optional
	external-format arg.  I frogot to commit this file on 2005-07-05.

	* slime.el (slime-input-complete-p): Skip over strings too.

2005-07-26  Zach Beane  <xach@xach.com>

	* swank-sbcl.lisp (swank-compile-string): Revert to old string
	compilation behavior to fix compiler note annotations. Code from
	Juho Snellman.

2005-07-24  Tom Pierce  <tlpierce@gmail.com>

	* swank.lisp (format-iso8601-time): New functions. Properly
	formats a universal-time as an iso8601 string.
	(inspect-for-emacs integer): Use the new
	format-iso8601 function when printing an integer as a date.

2005-07-22  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp (frame-catch-tags): Remove some debugging
	forms which were "polluting" the repl buffer when viewing an sldb
	buffer.
	(function-source-location): Make :error messages have the proper
	form (exactly one string argument). This fix also removes the
	issues with sending unreadble lists (containing #<...> to emacs).

2005-07-14  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (find-external-format): Fix typo.

2005-07-06  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-send-sigint): Use the symbol SIGINT stead of the
	signal number.  Suggested by Joerg Hoehle.
	(slime-compile-file): XEmacs needs the buffer as argument to
	local-variable-p.  Reported by Andy Sloane.

2005-07-05  Helmut Eller  <heller@common-lisp.net>

	The file variable slime-coding can now be used to specify the
	coding system to use for C-c C-k.  E.g., if the file contains
	-*- slime-coding: utf-8-unix -*- Emacs will tell the Lisp side
	to call COMPILE-FILE with an external-format argument.

	* slime.el (slime-compile-file): Send the coding system if
	the buffer local variable `slime-coding' is bound.

	* swank-backend.lisp, swank-sbcl.lisp, swank-clisp.lisp,
	swank-lispworks.lisp, swank-cmucl, swank-allegro.lisp,
	swank-abcl.lisp, swank-corman.lisp
	(swank-compile-file): New optional argument `external-format'.

	* swank-clisp.lisp (getpid): Undo the last change.

	* swank-corman.lisp (spawn, thread-alive-p): More thread tweaking.

2005-07-03  Joerg Hoehle  <hoehle@users.sourceforge.net>

	* swank-clisp (describe-symbol-for-emacs): Report :setf and :type
	where appropriate.

2005-07-03  Helmut Eller  <heller@common-lisp.net>

	* slime.el (next-single-char-property-change)
	(previous-single-char-property-change) [xemacs]: Only define them
	if not present.
	(next-char-property-change, previous-char-property-change): Define
	if needed.

	* README: Show examples for the filenames instead of the general
	"/the/path/to/this/directory".  Suggested by Brandon J. Van Every.

	* swank-corman.lisp (default-directory): Return a namestring
	instead of the pathname.
	(inspect-for-emacs, inspect-structure): Teach the inspector how to
	deal with structures.
	(spawn, send, receive): Implement rudimentary threading support.
	It's now possible to connect with the :spawn communication style
	and to bring up a listener.  Unfortunately, debugging the
	non-primary threads doesn't work at all.  Still no support for
	interrupt-thread.

	* slime.el (slime-start-swank-server): Send an extra newline
	before the "(swank:start-server ...".  I don't know why, but this
	seems to fix the problem when starting CLISP/Win32.  Interrupting
	CLISP/W32 is still horribly broken.

	* swank-loader.lisp (compile-files-if-needed-serially) [corman]:
	force-output after each file.

2005-07-02  Marco Baringer  <mb@bese.it>

	* slime.el (save-some-lisp-buffers): New Function.
	(slime-repl-only-save-lisp-buffers): New customizable variable.
	(slime-repl-compile-and-load): Use save-some-lisp-buffers.
	(slime-oos): Use save-some-lisp-buffers.

2005-07-01  Gábor Melis  <mega@hotpop.com>

	* swank-sbcl.lisp (threaded stuff): make SBCL 0.9.2.9+ work while
	retaining support for 0.9.2

2005-06-28  Gábor Melis  <mega@hotpop.com>

	* swank-sbcl.lisp (threaded stuff): horrible hack to make threaded
	SBCL 0.9.2 work.  (also, Happy Birthday Christophe!)

2005-06-21  Edi Weitz  <edi@agharta.de>

	* swank.lisp (find-matching-packages): Also use nicknames.

2005-06-13  Edi Weitz  <edi@agharta.de>

	* swank.lisp (list-all-systems-in-central-registry): Delete
	duplicates.

	* swank-lispworks.lisp (unmangle-unfun): If you rename a package
	you should rename it everywhere...

2005-06-12  Alexey Dejneka  <adejneka@comail.ru>

	* slime.el (slime-with-xref-buffer): fix "pgk" typo.

2005-06-12  Christophe Rhodes  <csr21@cam.ac.uk>

	* swank.lisp (ed-in-emacs): allow strings as well as pathnames;
	don't call emacs for things that the emacs editor doesn't know how
	to deal with.  Return T if we called emacs and NIL if not.

	* slime.el (slime-ed): Change a listp to consp, so that NIL
	arguments are correctly handled.

2005-06-11  Nikodemus Siivola  <nikodemus@random-state.net>

	* swank-sbcl.lisp: Patched for SBCL HEAD: utilize the new
	:source-plist functionality; maintain compatibility with 0.9.1
	till 0.9.2 is out. Removed cruft left over from previous
	excercises in supporting both HEAD and latest release.

	* doc/slime.texi: Document Slime as supporting the latest official
	release of SBCL, as opposed to a specific version number which
	would need to be updated monthly.

2005-06-10  Helmut Eller  <heller@common-lisp.net>

	* nregex.lisp (slime-nregex): Rename package to avoid name clashes
	with other version of this file.

	* swank.lisp (compiled-regex): Use the new package name.

	* slime.el (slime-with-xref-buffer): Gensym package too, to avoid
	problems when switching to buffers with -*- package: ... -*- file
	variables.  From Antonio Menezes Leitao.
	(slime-property-bounds): Use the prop argument instead of the
	hardcoded 'slime-repl-old-output.  From Andras Simon.

2005-06-07  Espen Wiborg  <espenhw@grumblesmurf.org>

	* swank-corman.lisp: Convert to Unix line-endings.
	(create-socket): Pass through the port argument unmodified,
	gettting a random port if 0.  Requires supporting change in
	<ccl>/modules/sockets.lisp.
	(inspect-for-emacs): defimplementation instead of defmethod.

2005-06-06  Espen Wiborg  <espenhw@grumblesmurf.org>

	* doc/slime.texi, PROBLEMS: Added notes about CCL.

2005-06-03  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-background-activities-enabled-p): Allow
	background stuff in repl-mode buffers too.

	* swank-cmucl.lisp (sis/misc): Return t for :interactive-p.

2005-06-01  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-load-system, slime-oos): Fix bug related to file
	locking.  Don't bind the variable system-name.  system-name is a
	predefined Emacs variable and is used among other things for lock
	filenames.

2005-06-01  Joerg Hoehle  <hoehle@users.sourceforge.net>

	* swank-clisp (getpid): Updates for current CLISP versions. Use
	defimplementation. Define always (slime needs it).

2005-06-01  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-background-activities-enabled-p): Return nil
	instead of signalling an error if there is a open but no default
	connection.
	(slime-current-connection): New helper function.
	(slime-connection): Use it.
	(slime-first-change-hook): Only run when
	slime-background-activities-enabled-p.

2005-06-01  Joerg Hoehle  <hoehle@users.sourceforge.net>

	* swank-cmucl.lisp, swank-sbcl.lisp, swank-clisp.lisp
	(describe-symbol-for-emacs): Distinguish macro and special
	operators from functions.

	* slime.el (slime-print-apropos): Must keep in sync with above,
	therefore added :macro and :special-operator properties.

	* swank.lisp (present-symbol-before-p): Make it conform to its
	specification -- sort first by package and then by symbol name.

	* swank-clisp.lisp (describe-symbol-for-emacs): Report :alien-type
	when the name is known as foreign type.

2005-06-01  Espen Wiborg  <espenhw@grumblesmurf.org>

	* swank-loader.lisp: Redefine compile-files-if-needed-serially for
	Corman Lisp to load everything from source.

2005-05-27  Espen Wiborg  <espenhw@grumblesmurf.org>

	* swank-corman.lisp: New file, swank for Corman Lisp.

	* swank.lisp (simple-announce-function): force-output after
	announcing.
	(symbol-external-p): Be extra paranoid about the symbol's package;
	find-symbol barfs on a nil package in Corman Lisp.

	* swank-loader.lisp: Add Corman Lisp support.

2005-05-24  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el text-property-default-nonsticky not defined in
	xemacs. oops.

2005-05-24  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el meta-w now removes properties before insertion if you
	cut just a portion of the presentation. Added xemacs
	support. Enabled in xemacs.

2005-05-23  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el slime-presentation-menu - use with-current-buffer, so
	that menus work even if you are not in the buffer with the
	presentation.

	* present.lisp More menu items for pathnames. Remember last
	slime-stream-p value. *can-print-presentation* t during
	swank-compiler and during presentation menu action.

2005-05-22  Alan Ruttenberg  <alanr-l@mumble.net>

	* present.lisp. (slime-stream-p) check if a stream is destined for
	output in a slime listener. (checks *connections* looks int
	o pretty-print streams in openmcl and cmucl)
	Don't present unless (slime-stream-p stream).

	Variable *enable-presenting-readable-objects* The only readable object
	which is presented are pathnames (e.g. pathnames printed when loading
	and *load-verbose* is t). Try the useful menu :)
	More to come if this doesn't cause problems.  (nil this if it does)

	*can-print-presentation* t around compile-string-for-emacs,
	load-file, interactive-eval.

	In cmucl, use fwrappers to modify behaviour rather than redefinition.

2005-05-22  Alan Ruttenberg  <alanr-l@mumble.net>

	* present.lisp. mouse-3 now gives a menu for actions on the
	presentation. See documentation in file for information about how
	to define menus. Also, disable presentations in inspector. Initial bits
	of dealing with the possibility of presenting readable objects.

	* slime.el support menu. Xemacs users beware this uses x-popup-menu,
	which may be fsf specific.

2005-05-20  Alan Ruttenberg  <alanr-l@mumble.net>
	* swank.lisp make repl output presentation work even if
	present.lisp not loaded

2005-05-20  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-repl-enable-presentations): Default is enabled
	in GNU Emacs but disabled in XEmacs. Feature is not portable yet.
	Brutally 80-column'ified alanr's latest changes :-)

2005-05-20  Alan Ruttenberg  <alanr-l@mumble.net>

	* bridge.el new file. from ilisp cvs distribution to collect
	in-band messages using process filter mechanisms. One edit which
	calls bridge-insert with process argument as well as output

	* present.lisp new file. Enough code to do the following:
	(swank::presenting-object object stream (print "This is really
	object")). This makes the string "This is really object" behave
	like old repl input for the object. Sample code for openmcl and
	cmucl that hooks this into the printing of unreadable objects This
	should be part of swank.lisp (and lisp specific files) but I am
	too chicken to merge yet. For now you have to load this file
	manually.

	* slime.el changes to support above:
	slime-repl-enable-presentations: customize to enable this stuff.
	Default value t. Set to nil to turn it off.
	slime-presentation-start-to-point: map object ids to the (point)
	where they start to print out. slime-mark-presentation-start,
	slime-mark-presentation-end. handlers for the bridge messages.
	slime-open-stream-to-lisp: When enabled start the bridge and
	define the handlers.

2005-05-19  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el slime-presentation-map

2005-05-20  Luke Gorrie  <luke@synap.se>

	* swank.lisp (clear-repl-results): Fixed unbalanced parens. Thanks
	Lawrence Mitchell.

2005-05-19  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el (slime-presentation-command-hook) new function for
          nicer behaviour for presentations.
	(slime-pre-command-hook) do slime-presentation-command-hook
	(slime-post-command-hook) put pre-command-hook back if goes away
	(slime-copy-presentation-at-point) mouse-2 copies previous output
	to point slime-repl-output-mouseover-face what the old output
	looks like when the mouse moves over it default: box around it
	like on lispm
	(slime-repl-insert-prompt) add mouseover face, mouse
	action. newline after output not propertized.
	(slime-property-bounds) adjust for lack of propertized newline to
	fix: presentation region behaviour should be attach to generic
	property like
	  (:acts-as-token t ) rather than tying to repl-output property

2005-05-19  Luke Gorrie  <luke@synap.se>

	* swank.lisp (*record-repl-results*): Variable to enable/disable
	recording of REPL results. True by default.
	(*repl-results*): Renamed from ****.

	* slime.el (slime-property-bounds): Factored out this common part
	of slime-repl-grab-old-{input,output}.
	(slime-read-object): Avoid inline CL code.

2005-05-18  António Menezes Leitão  <aml@gia.ist.utl.pt>

	* slime.el (slime-repl-inputed-output-face): new face.
	(slime-current-output-id): New variable.
	(slime-dispatch-event): Bind slime-current-output-id when
	neccessary.
	(slime-repl-insert-prompt): Add the neccessary text properties to
	the result.
	(reify-old-output): New function which makes sure swank sees
	\(swank::get-**** ...) while the user sees the printed
	representation of the object.
	(slime-repl-return): When called on a old output (as per the
	slime-repl-old-output text property, call
	slime-repl-grab-old-output.
	(slime-repl-send-input): Added the slime-repl-old-input text
	property.
	(slime-repl-grab-old-input): Keep the old input's text
	properties (unwanted text properties are removed later).
	(slime-repl-grab-old-output): New function.
	(slime-repl-clear-buffer): Added call to swank::clear-****
	(slime-repl-clear-output): Added call to swank::clear-**** and
	bind inhibit-read-only to nil.
	(slime-inspect): Call slime-read-object to get the value to
	inspect.
	(slime-read-object): New function which either reads an object
	from the minibuffer or returns the object at point if it has the
	slime-repl-old-output text property.

	* swank.lisp (*current-id*, ****): New variables.
	(add-****, get-****, clear-last-****, clear-****): New functions
	for manipulating the repl history.
	(listener-eval): Add * to ****.

2005-05-12  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank.lisp Add ability to customize behavior of the repl. To do
	so, add a function to the list swank::*slime-repl-eval-hooks*.
	This function is passed the form typed into the repl. The function
	should decide whether it wants to handle evaluation of the
	form. If not, call (repl-eval-hook-pass) and the next hook is
	tried. Otherwise the values the function returns are used instead
	of calling eval. Inside the body of the function you can also
	suppress having the repl print the result by calling
	(repl-suppress-output) and/or suppress the advancement of the
	history variables (*** ** * /// // /) by calling
	(repl-suppress-advance-history).


2005-05-11  Tim Daly Jr.  <tim@tenkan.org>

	* swank-source-path-parser.lisp (read-and-record-source-map):
	Ensure that at least the toplevel form is in the source-map.

2005-05-11  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-remove-old-overlays): Remove overlays in all
	slime buffers not only in the current buffer.
	(slime-filter-buffers): New helper.
	(slime-display-completion-list): Take the completed prefix as
	additional argument to initialize completion-base-size.  This is
	apparently needed to make mouse-selection working.
	(slime-maybe-complete-as-filename): Factor for common code in
	slime-complete-symbol* and slime-simple-complete-symbol.

2005-05-06  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-openmcl.lisp specializer-name didn't handle
	structure-class which caused meta-. of methods specialized on
	defstruct arguments to fail.

2005-05-06  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (post-gc-hook): Include the elapsed time and
	the size distribution.

2005-05-05  Edi Weitz  <edi@agharta.de>

	* swank-lispworks.lisp (unmangle-unfun): New function to convert
	strange symbols in SETF package to SETF function names.
	(signal-undefined-functions): Use it.

2005-05-04  Edi Weitz  <edi@agharta.de>

	* swank-lispworks.lisp (call-with-compilation-hooks): Provide
	better implementation.
	(compile-file-and-collect-notes): Advice for COMPILE-FILE so
	pathname information for undefined functions can be recorded.
	(*within-call-with-compilation-hooks*): New special variable used
	by CALL-WITH-COMPILATION-HOOKS.
	(*undefined-functions-hash*): New special variable to record
	pathname information for undefined functions.
	(signal-error-database): Make LOCATION parameter optional, use
	FILENAME info from error database if not provided.
	(signal-undefined-functions): Make LOCATION parameter optional,
	use info from *UNDEFINED-FUNCTIONS-HASH* if not provided.

2005-05-03  Luke Gorrie  <luke@synap.se>

	* swank.lisp (slime-secret): Removed #+unix conditional, suggested
	by Edi Weitz.

2005-05-02  Mark Wooding  <mdw@nsict.org>

	* swank.lisp: If ~/.slime-secret exists then insist that Emacs
	sends the contents (as a password) during initial handshaking.
	(announce-server-port): Use :IF-EXISTS :ERROR to prevent bad guys
	from slipping a symlink into /tmp and reading what port Lisp is
	listening on.

	* slime.el: If ~/.slime-secret exists then send it, as per above.

2005-05-01  Marco Baringer  <mb@bese.it>

	* slime.el (slime-inspector-reinspect): New function which
	reinspects the current object.
	(slime-inspector-mode-map): Bind slime-inspector-reinspect to g.

2005-04-29  Dan Pierson  <dlp@itasoftware.com>

	* slime.el (slime-parse-context): Fix method parsing so that
	pressing, say, C-c C-t when point is on a '-' in a symbol name
	won't break.
	(slime-browser-map): New variable. Add support for the common 'q'
	keystroke to quit out of the xref.
	(slime-fetch-browsable-xrefs): New function. Remove the (FLET ...)
	entries which appear on at least CMUCL.  I don't believe you can
	actually expand them on any current implementation and they just
	mess up the browse tree.  Use only the method name when looking
	up (METHOD ...) entries on CMUCL.  This really shouldn't be here,
	but I can't see how to avoid the error thrown by swank:xref.
	(slime-expand-xrefs): Use it.
	(slime-call-with-browser-setup): Initialize slime-buffer-package
	properly.  Previously, lisp-mode was called after setting it, but
	lisp-mode clears all local variables, use lisp-mode-variables
	instead.

	* swank-cmucl.lisp (toggle-trace): Be more carefully when tracing
	methods: try both (METHOD ...) and (PCL:FAST-METHOD ...).

2005-04-27  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (+header-type-symbols+): Drop the third arg to
	apropos-list; it's no longer supported in recent CMUCLs.

2005-04-21  Luke Gorrie  <luke@synap.se>

	* swank.lisp (arglist-to-string): Rolled back the previous change
	because it interferred with values appearing in parameter lists.

2005-04-20  Luke Gorrie  <luke@synap.se>

	* swank.lisp (arglist-to-string): Bind *PRINT-ESCAPE* to NIL. This
	way symbols in arglists are printed as with PRINC, i.e. without
	package qualifier.

	* swank-sbcl.lisp (preferred-communication-style): Use
	`linux_no_threads_p' alien variable to decide whether to use
	:SPAWN. From dan_b for compatibility with new SBCLs.

2005-04-19  Helmut Eller  <heller@common-lisp.net>

	* PROBLEMS: Warn about old kernels.

	* swank-backend.lisp: Fix some typos.

	* swank-sbcl.lisp (preferred-communication-style): Don't test for
	sb-futex, it has lost its meaning in 0.8.21.

2005-04-18  Helmut Eller  <heller@common-lisp.net>

	* slime.el (inferior-lisp-program): Defvar it here, in case it is
	not defined in loaddefs and inf-lisp is not loaded. (That's the
	case in XEmacs.)

	* mkdist.sh: update version number.

	* doc/slime.texi: Update version numbers for SBCL and ACL.

2005-04-17  Peter Seibel  <peter@gigamonkeys.com>

	* swank-loader.lisp (*implementation-features*): Added features
	for GCL and ECL ...
	(lisp-version-string): ... and code to compute version
	string. (Supplied by someone who's email I've misplaced.)

2005-04-14  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-selector): Discard input after sleeping.

2005-04-09  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-get-buffer): Create a fresh buffer if there's no
	buffer for the connection (and don't reuse an existing buffer even
	if it has a matching name).
	(slime-buffer-visible-p, slime-ir1-expand): Delete unused
	functions.  Mark some others as unused, but leave them there
	because they are potentially useful.

	* swank.lisp (with-io-redirection, with-connection)
	(with-buffer-syntax): Implement macros with `call-with' functions
	to avoid some code bloat.
	(call-with-connection, maybe-call-with-io-redirection)
	(call-with-buffer-syntax): New functions.
	(interactive-eval): Use from-string instead of read-from-string to
	avoid problems whit *read-suppress*.

	* swank-sbcl.lisp: Add a few comments.

	* swank-abcl.lisp (print-frame): Trim whitespace to make the
	backtrace look a bit terser.

2005-04-07  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-net-coding-system): More fixes for
	non-mule-XEmacsen.
	(slime-net-coding-system): Even more fixes to make it for
	mule-XEmacs.

2005-04-05  Juergen Gmeiner  <gj@gjdv.at>

	* swank-lisworks.lisp (find-top-frame): If we can't find an
	invoke-debugger frame we take any old frame at the top.

2005-04-04  James McIlree  <ovrskeek@mac.com>

	* slime.el (find-coding-system, check-coding-system)
	(process-coding-system, set-process-coding-system): Dummy
	functions for no-mule-XEmacsen.

2005-04-04  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-show-maximum-output): New
	function. Immitate the scrolling behavior of a terminal.
	(slime-with-output-end-mark, slime-repl-return)
	(slime-repl-send-input, slime-display-output-buffer): Use it
	(slime-lisp-implementation-version, slime-machine-instance): New
	connection variables.  Suggested by Eduardo Muñoz.
	(slime-set-connection-info): Initialize them.

	* swank.lisp (connection-info): Include version and hostname in
	the result.

	* swank-cmucl.lisp (breakpoint-values): Fixes for CMUCL-2005-03
	snapshot.

	* doc/slime.texi: Fix spelling errors.

	* cl-indent.el: Remove the file.  Let the Emacs developers
	maintain it.

2005-04-01  Helmut Eller  <heller@common-lisp.net>

	* slime.el (sldb-get-buffer): Initialize the buffer local
	variables slime-buffer-connection and slime-current-thread when
	creating a fresh buffer.

	* swank.lisp (spawn-repl-thread): Use
	*default-worker-thread-bindings* just like spawn-worker-thread.
	(wrap-sldb-vars): New function.  Rebind *sldb-level* to avoid
	confusion with recursive errors during eval-in-frame.
	(eval-string-in-frame, pprint-eval-string-in-frame): Use it.

	* swank-allegro.lisp (eval-in-frame): Allegro's
	eval-form-in-context does nothing special with lexical variables
	in the frame.  Wrap an explicit LET around the form to get similar
	behavior as in the other Lisps.
	(inspect-for-emacs (structure-object)): Remove structure related
	methods.  It's already covered by the general case with
	allegro-inspect.
	(common-seperated-spec): Deleted

2005-04-01  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-xref-mode): Summarise the most important
	bindings in the mode description.

	* metering.lisp: Now supports only CLISP and OpenMCL.
	Removed a lot of really ugly reader-conditionalized code, much of
	it for archaic lisps (#+cltl2, #+lcl3.0, #+mcl1.3.2, etc).

	* swank-source-path-parser.lisp (check-source-path): Signal an
	error if a source path is malformed. SBCL sometimes gives (NIL).
	(source-path-stream-position): Use it.

	* slime.el (slime-goto-definition): Handle :error locations here
	before any window/buffer changes are made.

2005-04-01  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-keys): Bind slime-edit-definition-other-window
	to `C-x 4 .' and slime-edit-definition-other-frame to `C-x 5 .',
	shadowing the equivalent find-tag... bindings.
	(slime-goto-definition): In the other-window and other-frame cases,
	make sure point does not move in the originating window, even when
	the definition is found in the same buffer.

2005-03-31  Luke Gorrie  <luke@synap.se>

	* doc/slime.texi (slime-selector): New section.
	(Inspector): Updated for the post-1.0 inspector.

	* slime.el (slime-selector): Removed unneeded "the" prefixes in
	descriptions of what the selector methods do.

2005-03-27  Helmut Eller  <heller@common-lisp.net>

	* PROBLEMS, NEWS, doc/slime.texi: Some updates for the upcoming
	release.

2005-03-27  Russell McManus  <russell_mcmanus@yahoo.com>

	* swank-clisp.lisp (getpid): Try sys::process-id if
	sys::program-id doesn't exist.

2005-03-23  Marco Baringer  <mb@bese.it>

	* swank.lisp (commit-edited-value): Read a backquated string,
	instead of quating the result of read. This allows one to put
	,(form) into edit-value buffers.

2005-03-22  Helmut Eller  <heller@common-lisp.net>

	* swank-lispworks.lisp (swank-compile-string): Bind *print-radix*
	to t, to avoid problems if somebody uses different values for
	*print-base* and *read-base*.  Reported by Alain Picard.
	(emacs-connected): Add default methods for
	environment-display-notifier and environment-display-debugger.

2005-03-21  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (locate-compiler-note): Handle errors in macros
	better.
	(source-file-source-location): Read the snippet at the right
	position.

	* swank-source-file-cache.lisp (read-snippet): Take the start
	position as optional argument.

2005-03-21  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (quit-lisp): If we are running multithreaded,
	terminate all other threads too.  (still broken in 0.8.20.27; used
	to work in ~0.8.20.2.)
	(with-debootstrapping, call-with-debootstrapping): Remove ugly
	backward compatibility code.
	(sbcl-source-file-p, guess-readtable-for-filename): New utilities.
	(function-source-location): Handle work off to helper functions.
	(find-function-source-location): New function.  Use the
	shebang-readtable for SBCL source files.
	(function-source-position, function-source-filename)
	(function-source-write-date, function-toplevel-form-number)
	(function-hint-snippet, function-has-start-location-p)
	(function-start-location): New helpers.
	(safe-source-location-for-emacs): Don't catch errors if
	*debug-definition-finding* is true.
	(inspect-for-emacs): Minor beautifications.

	* swank.lisp (commit-edited-value): Use buffer syntax.
	(compile-file-for-emacs, compile-string-for-emacs): Bind
	*compile-print* to nil.

	* swank-cmucl.lisp (call-with-debugging-environment): Rebind
	kernel:*current-level* 0.  Useful for debugging pretty printer
	code.
	(inspect-for-emacs): Show details of interpreted functions.

2005-03-21  Luke Gorrie  <luke@synap.se>

	* swank-sbcl.lisp (function-source-location): For definitions
	compiled in Emacs buffers, include the :emacs-string as a :snippet
	hint for search-based M-. lookup.

2005-03-21  Edi Weitz  <edi@agharta.de>

	* swank-loader-lisp (*implementation-features*, *os-features*,
	*architecture-features*): LispWorks was completely missing.

2005-03-18  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-complete-symbol*-fancy): Now nil by default.

2005-03-18  Helmut Eller  <heller@common-lisp.net>

	* swank-source-path-parser.lisp (make-source-recording-readtable):
	Ignore non-ascii chars.

	* swank-sbcl.lisp (swank-compile-string): Re-implemented.  This
	time with temp-files and proper source-location tracking.
	(install-debug-source-patch, debug-source-for-info-advice): Patch
	SBCL's debug-source-for-info so that we can dump our own bits of
	debug info.
	(function-source-location, code-location-source-path): Rewritten
	to handle C-c C-c functions.  Also use the source-path to locate
	the position.
	(locate-compiler-note): Renamed from resolve-note-location.
	(temp-file-name, call/temp-file): New utilities.
	(file-source-location, lisp-source-location)
	(temp-file-source-location, source-file-source-location)
	(string-source-position, code-location-debug-source-info)
	(code-location-debug-source-name, code-location-debug-source-created,)
	(code-location-debug-fun-fun, code-location-from-emacs-buffer-p)
	(function-from-emacs-buffer-p, function-debug-source-info)
	(info-from-emacs-buffer-p, code-location-has-debug-block-info-p)
	(stream-source-position): Lots of new helper functions.
	(with-debootstrapping): Moved upwards so that it can be used for
	source location searching.
	(source-location-for-emacs): Deleted

2005-03-16  Helmut Eller  <heller@common-lisp.net>

	* slime/swank.lisp (*macroexpand-printer-bindings*): New user
	variable.
	(apply-macro-expander): Use it.
	(call-with-bindings): Bind variables in reverse order. Thit makes
	it easer to cons or push a new binding at the front the list.
	(with-bindings): New macro.

	* slime.el (slime-run-when-idle): New function to hide
	Emacs/XEmacs differences.
	(slime-process-available-input): Use it.

	* swank-loader.lisp (unique-directory-name): Rewritten to avoid
	the rather irritating warning that (warn "Don't know ...") is
	unreachable.

2005-03-13  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-dispatch-event): Use `slime-busy-p' to control
	the "; pipelined request" message. This way it takes requests
	blocked in the debugger into account and avoids spurious messages.

	* swank.lisp (inspect-for-emacs symbol): Add an "unintern it"
	action for symbols.

	* swank-source-file-cache.lisp (read-snippet): Skip comments and
	whitespace in SBCL. The source-positions reported by SBCL are not
	adjusted to skip over whitespace before the definition.

	* swank-sbcl.lisp (function-source-location): Updated for revised
	sb-introspect patch:
	s/DEFINITION-SOURCE-CREATED/DEFINITION-SOURCE-WRITE-DATE/

	* swank-loader.lisp (*os-features*): Added :mswindows. Thanks Will
	Glozer.

2005-03-12  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-edit-value): New function on `C-c E'. Prompts
	for a Lisp expression, evaluates and displays the result in a new
	buffer for editing, and then setf's the edited value in Lisp after
	you press C-c C-c. Usage example: `C-c E asdf:*central-registry*'
	Minor docstring and pull-down-menu changes.

	* swank.lisp (value-for-editing, commit-edited-value): New
	functions for slime-edit-value.

	* swank-allegro.lisp (toggle-trace): Fix from Antonio Menezes
	Leitao.

	* swank-sbcl.lisp: Use swank-source-file-cache to find snippets of
	definitions. M-. is now much more robust to modifications in the
	source file.
	NOTE: To be effective requires a patch to sb-introspect that I
	have posted to sbcl-devel.

	* swank-source-file-cache.lisp: Factored this into its own file,
	from swank-cmucl.lisp.

	* swank-loader.lisp, swank-cmucl.lisp: Updated for the above.

2005-03-10  António Menezes Leitão  <aml@gia.ist.utl.pt>

	* slime.el (slime-toggle-trace-fdefinition): If there is no symbol
	at point then prompt for one.

2005-03-09  Peter Seibel  <peter@gigamonkeys.com>

	* swank-loader.lisp (*architecture-features*): Added :pc386 for CLISP.
	(unique-directory-name): Change ERROR to WARN.

	* slime.el (slime-register-lisp-implementation): Add facility for
	registering lisp implementations with symbolic names that can be
	passed to C-u M-x slime.

2005-03-08  Peter Seibel  <peter@gigamonkeys.com>

	* doc/Makefile (clean): added clean and really_clean targets.
	(all): and added slime.pdf to all prerequisites.

	* swank-loader.lisp (*implementation-features*): Whoops. Forgot
	CLISP.
	(*architecture-features*): Added :x86-64 for SBCL on AMD64 (thanks
	Vincent Arkesteijn)

2005-03-07  Peter Seibel  <peter@gigamonkeys.com>

	* swank-loader.lisp (unique-directory-name): Replaced *lisp-name*
	variable with more sophisticated version that accounts for impl,
	impl version, os, and hardware architecture.

2005-03-07  Edi Weitz  <edi@agharta.de>

	* swank.lisp: Fixed parenthesis-balancing problem.

2005-03-06  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-easy-menu): Add menu item for
	slime-complete-form.

	* swank.lisp (format-arglist-for-echo-area): Use extra-keywords to
	enrich the list of keywords.
	(arglist-to-string): Remove extraneous whitespace.
	(keyword-arg, optional-arg): New structures.
	(decode-keyword-arg, decode-optional-arg): Return structure
	objects rather than multiple values.
	(encode-keyword-arg, encode-optional-arg, encode-arglist): New
	functions.
	(arglist): New slot key-p.
	(decode-arglist): Handle &whole, &environment.  Store more
	information on optional and keyword args, set arglist.key-p.
	(values-equal?): Removed.
	(print-decoded-arglist-as-template): If keyword is
	not a keyword symbol, quote it in the template.
	(extra-keywords): Return a secondary value (allow-other-keys).
	For make-instance, try to finalize the class if it is not
	finalized yet (fix for Allegro CL 6.2).  If class is not
	finalizable, use direct slots instead of slots and indicate that
	the keywords are not complete.
	(enrich-decoded-arglist-with-extra-keywords): New function, use
	the secondary value of extra-keywords.
	(arglist-for-insertion, complete-form): Use it here.
	(remove-keywords-alist): New variable.
	(remove-actual-args): When the keyword :test is provided, don't
	suggest :test-not and vice versa.

	* swank-backend.lisp (:swank-mop package): Export
	finalize-inheritance.

2005-03-06  Luke Gorrie  <luke@synap.se>

	* swank.lisp: Export *LOG-OUTPUT*.

2005-03-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-net-sentinel): Always print a message when the
	lisp disconnects.
	(slime-inferior-lisp): Don't display the buffer.  Let callers do
	that.
	(slime): Display the inferior buffer here.
	(slime-quit-lisp, slime-quit-sentinel): Use set a special sentinel
	and do most of the cleanups there.
	(slime-repl-sayoonara): Use slime-quit-lisp.
	(slime-restart-inferior-lisp, slime-restart-inferior-lisp-aux)
	(slime-restart-sentinel): Use a special sentinel to restart
	processes.
	(slime-hide-inferior-lisp-buffer): Do the windows arrangement a
	bit differently. Related to restart-lisp.
	(slime-repl-buffer): Take the connection as second optional
	argument.  Useful for rearranging windows for dead processes.

	* swank-allegro.lisp (call-with-debugging-environment)
	(find-topframe): Hide the first 2 frames. Those are created
	by swank-internal functions.

2005-03-04  António Menezes Leitão <aml@gia.ist.utl.pt>

	* swank-allegro.lisp (process-fspec-for-allegro, toggle-trace):
	Handle setf functions.
	(tracedp): Fix free variable.

	* slime.el (slime-trace-query): The :defgeneric query was bogus.
	(slime-extract-context): Don't skip over the method name if we are
	already at the end of the name.

2005-03-03  Nikodemus Siivola  <tsiivola@cc.hut.fi>

	* swank-sbcl.lisp: Fixed for latest SBCL HEAD revision and
	temporarily backwards-compatible with the current release.

2005-03-02  Marco Baringer  <mb@bese.it>

	* swank-loader.lisp Look for a file in the same directory as
	swank-loader.lisp called site-init.lisp. If it exists we load that
	instead of attempting to load ~/.swank.lisp.
	(user-init-file): Superseded by load-user-init-file.
	(load-user-init-file): New function.
	(load-site-init-file): New function.

2005-03-01  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-who-bindings): Bind who-specializes to C-c W a.
	(slime-extract-context): Renamed from name-context-at-point.
	(slime-beginning-of-list): Renamed from out-first.
	(slime-slime-parse-toplevel-form): Renamed from definition-name.
	(slime-arglist-specializers): Renamed from parameter-specializers.
	(slime-toggle-trace-function, slime-toggle-trace-defgeneric)
	(slime-toggle-trace-defmethod, slime-toggle-trace-maybe-wherein)
	(slime-toggle-trace-within): Deleted. Everything is now handled
	by slime-trace-query.
	(slime-calls-who): For symmetry with silme-who-calls.
	(slime-edit-definition-with-etags): Better intergration with TAGS.
	(slime-edit-definition-fallback-function): Mention it in the
	docstring.

	* swank-backend (calls-who, toggle-trace): New functions.
	(toggle-trace-function, toggle-trace-generic-function-methods,
	(toggle-trace-method,  toggle-trace-fdefinition-wherein): Replaced
	by toggle-trace.

	* swank.lisp (*sldb-printer-bindings*, *swank-pprint-bindings*):
	New variables.  The alists replace the variables which where
	previously hidden with the define-printer-variables macro.
	(define-printer-variables, with-printer-settings): Deleted,
	because the variable names where not visible in the source code.
	(swank-toggle-trace): Renamed from toggle-trace-fdefinition.

	* swank-cmucl.lisp, swank-lispworks, swank-sbcl.lisp,
	swank-allegro.lisp (toggle-trace): Update tracing code for new
	interface.

2005-02-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-dispatch-event): Add :eval-no-wait and :eval
	events.
	(slime-eval-for-lisp): New function.
	(sldb-buffers): Delete the variable.  Use buffer-list instead.

	* swank.lisp: (eval-for-emacs): Use the new backend function
	call-with-debugger-hook.
	(eval-in-emacs): Cleaned up. Add support for synchronous RPCs.
	(receive-eval-result): New function.
	(dispatch-event, read-from-socket-io, send-to-socket-io): New
	:eval event. Rename :%apply to :eval-no-wait.
	(read-user-input-from-emacs, evaluate-in-emacs): Increment
	*read-input-catch-tag* instead of re-binding it. Reduces the
	danger of throwing to the wrong tag a bit.

	* swank-backend.lisp (call-with-debugger-hook): New function.
	Useful if the backend needs special incantations for BREAK.
	(toggle-trace-function): Add a default implementation for simple
	symbols.

	* swank-lispworks.lisp (slime-env): New class.
	(call-with-debugger-hook): Use env:with-environment to pop up our
	debugger on a BREAK.
	(toggle-trace-method, parse-fspec, tracedp, toggle-trace):
	Implement method tracing.

	* swank-sbcl.lisp (call-with-debugger-hook): Bind
	sb-ext:*invoke-debugger-hook* instead of setting it in
	emacs-connected.
	(emacs-connected): Deleted.

	* swank-loader.lisp (compile-files-if-needed-serially): Reduce
	verbosity by setting the :print argument for compile-file to nil.

2005-02-23  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-startup-animation, slime-repl-update-banner):
	Put the animation back in to keep the kids quiet.
	(slime-kill-without-query-p): Change default to nil.
	(slime-eval-describe, slime-eval-region)
	(slime-pprint-eval-last-expression): Fix typos in docstrings.
	(slime-eval/compile-defun-dwim): Deleted. We never had a key
	binding anyway.

2005-02-22  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-complete-form): Emacs 20 compatibility fix.
	(slime-repl-update-banner): Remove animation stuff.
	(slime-startup-animation): Deleted.

	* swank-lispworks.lisp (compute-applicable-methods-using-classes):
	Implement it.

2005-02-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Supersede the command slime-insert-arglist with the new command
	slime-complete-form and bind it to C-c C-s.  The command completes
	an incomplete form with a template for the missing arguments.
	There is special code for discovering extra keywords of generic
	functions and for handling make-instance. Examples:

	  (subseq "abc" <C-c C-s>
	    --inserts--> start [end])
	  (find 17 <C-c C-s>
	    --inserts--> sequence :from-end from-end :test test
	                 :test-not test-not :start start :end end :key key)
	  (find 17 '(17 18 19) :test #'= <C-c C-s>
	    --inserts--> :from-end from-end
	                 :test-not test-not :start start :end end :key key)
	  (defclass foo () ((bar :initarg :bar)))
	  (defmethod initialize-instance :after ((object foo) &key blub))
	  (make-instance 'foo <C-c C-s>
	    --inserts--> :bar bar :blub blub initargs...)

	* swank.lisp (arglist): New struct for storing decoded arglists.
	(decode-arglist): New function.
	(arglist-keywords, methods-keywords, generic-function-keywords,
	applicable-methods-keywords): New functions.
	(decoded-arglist-to-template-string,
	print-decoded-arglist-as-template): New functions.
	(arglist-to-template-string): Rewrite using above functions.
	(remove-actual-args): New function.
	(complete-form): New slimefun.

	* swank.lisp (extra-keywords): New generic function.

	* swank-backend.lisp (:swank-mop package):
	Export compute-applicable-methods-using-classes.

	* swank.lisp (arglist-for-insertion): Use extra-keywords to
	enrich the list of keywords.

	* swank.lisp (valid-operator-symbol-p): New function.
	(valid-operator-name-p): Use valid-operator-symbol-p.

	* slime.el (slime-complete-form): New command.
	(slime-keys): Bind C-c C-s to slime-complete-form rather than
	slime-insert-arglist.

2005-02-18  António Menezes Leitão  <aml@gia.ist.utl.pt>

	Improve the trace mechanism (on lisps that support it). SLIME is
	now able to trace/untrace flet/labels functions, methods and, of
	course, regular and generic functions.

	In the process support for sending code to emacs form the lisp was
	added. The code, elisp forms, is sent over the wire like normal
	lisp code, evaluated in emacs and the return value is returned
	back to the lisp.

	* slime.el (slime-dispatch-event): Added the :evaluale-in-emacs
	dispatch state which simply parses the message and class
	evaluate-in-emacs.
	(evaluate-in-emacs): New function.
	(complete-name-context-at-point, name-context-at-point, out-first,
	definition-name, parameter-specializers,
	slime-toggle-trace-fdefinition, slime-toggle-trace-function,
	slime-toggle-trace-defgeneric, slime-toggle-trace-defmethod,
	slime-toggle-trace-maybe-wherein, slime-toggle-trace-within): New
	functions implementing the new intelligent slime trace.

	* swank-backend.lisp (toggle-trace-function,
	toggle-trace-generic-function-methods, toggle-trace-method,
	toggle-trace-fdefinition-wherein,
	toggle-trace-fdefinition-within): New backend functions
	for the new trace facility.

	* swank.lisp (dispatch-event): Handle the :evaluate-in-emacs
	message type.
	(evaluate-in-emacs): New function.

	* swank-allegro.lisp (toggle-trace-generic-function-methods,
	toggle-trace, toggle-trace-function, toggle-trace-method,
	toggle-trace-fdefinition-wherein,
	toggle-trace-fdefinition-within): Implement.
	(process-fspec-for-allegro): New function.

	* swank-cmucl.lisp (toggle-trace-generic-function-methods,
	toggle-trace-function, toggle-trace-method,
	toggle-trace-fdefinition-wherein): Implement.
	(toggle-trace, process-fspec): New functions.

	* swank-sbcl.lisp (toggle-trace-generic-function-methods,
	toggle-trace-function, toggle-trace-method,
	toggle-trace-fdefinition-wherein): Implement.
	(toggle-trace, process-fspec): New functions.

2005-02-02  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Require the timer package explicitly.

2005-02-02  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-repl-send-input): Move some properties
	of old REPL input (e.g. read-only) from text properties into an
	overlay, so that kill/yank will leave them behind. Left
	`slime-repl-old-input' as a text properties because it's more
	convenient to lookup that way.
	(slime-repl-return): Ignore `slime-repl-old-input' property if the
	point is in front of the current REPL prompt, i.e. if the user has
	copy&pasted some old REPL input into the current input area.

2005-01-30  Bryan O'Connor  <bryan-slime@lunch.org>

	* slime.el (slime-goto-location-position): Changed the regexp to
	require the function-name to be followed by a
	non-symbol-constituent character \S_.  Previously, a function-name
	of "find" first matched find-if-not if it occured earlier in the
	file.

2005-01-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-busy-p): Ignore debugged continuations to enable
	arglist lookup while debugging.  Suggested by Lynn Quam.
	(sldb-continuations): New buffer local variable in sldb buffers to
	keep track of debugged continuations.
	(sldb-debugged-continuations): New function.
	(sldb-buffers): Renamed from sldb-remove-killed-buffers.
	(slime-eval-print): New function to insert the stream output and
	the result of an evaluation in the current buffer.
	(slime-eval-print-last-expression): Use it.
	(slime-interactive-eval): Use slime-eval-print when a prefix
	argument was given.

	* swank.lisp (*pending-continuations*, eval-in-emacs)
	(debugger-info-for-emacs): Keep track of debugged continuation the
	new variable *pending-continuations* and include the list of
	active continuations in the debugger info for Emacs.
	(eval-and-grab-output): New function.  Used by slime-eval-print.
	(*log-output*): Renamed from *log-io*.  Use *standard-error* as
	initial value instead of *terminal-io*.  CMUCL opens its own tty
	and that makes it hard to redirect to output with a shell.
	*standard-error* writes its output to file descriptor 2.
	(*canonical-package-nicknames*): Fix typo.

2005-01-20  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (parse-symbol): Don't break if the package doesn't
	exist.  Reported by Lynn Quam.

2005-01-20  Ian Eslick  <eslick@csail.mit.edu>

	* swank-allegro.lisp (restart-frame): Handle frames with arguments
	better.

2005-01-20  Edi Weitz  <edi@agharta.de>

	* swank-allegro.lisp (handle-undefined-functions-warning): Prevent
	breakage if the undefined function is called at multiple
	locations.

2005-01-19  Helmut Eller  <heller@common-lisp.net>

	* swank-gray.lisp (stream-unread-char): If the char argument
	doesn't match the contents in the buffer, ignore it and emit a
	warning instead.

2005-01-19  Utz-Uwe Haus  <haus+slime@merkur.math.uni-magdeburg.de>

	* swank-cmucl.lisp (breakpoint): Add a slot for return values to
	make return values inspectable in the debugger.
	(signal-breakpoint): Initialize the new slot.

2005-01-19  Matthias Koeppe  <mkoeppe@merkur.math.uni-magdeburg.de>

	* slime.el (slime-insert-arglist): Inserts a template for a
	function call instead of the plain arglist; this makes a
	difference for functions with optional and keyword arguments.

	* swank.lisp (arglist-to-template-string): New function.
	(arglist-for-insertion): Use it
	(decode-keyword-arg, decode-optional-arg): New functions.

2005-01-19  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	* slime.el (slime-header-line-p): Customize variable to
	enable/disable the header-line in the REPL.

2005-01-18  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-complete-symbol*-fancy): New variable to enable
	extra bells and whistles with slime-complete-symbol*. Currently
	controls whether to use arglists semantically. Default is t.
	(slime-complete-symbol*-fancy-bit): Factored out this function.
	Only do "semantic" completion when the symbol is in
	function-position, avoid interning argument names in Emacs, and
	don't display arglists if the minibuffer is active.

2005-01-14  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-repl-send-input): Make old input read-only using
	an overlay instead of a text property. This way if you copy&paste
	the input elsewhere it will become editable (overlay is associated
	with the buffer region and not the text).

2005-01-14  Edi Weitz  <edi@agharta.de>

        * slime.el (slime-complete-symbol*): Maybe insert closing
        parenthesis or space (depending on arglist) after symbol
        completion has finished.  Optionally also show arglist.

2005-01-13  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (create-socket): The byte-order of the :host
	argument for CREATE-INET-LISTENER was changed in the Jan 2005
	snapshot.  Test whether the symbol 'ext:socket-error exists to
	decide if we are in a older version.
	(resolve-hostname): Return the address in host byte-order.

2005-01-12  Robert Lehr  <bozzio@the-lehrs.com>

	* slime.el (slime-changelog-date): Return nil if the ChangLog file
	doesn't exits.
	(slime-repl-update-banner): Write "ChangeLog file not found" if
	the ChangeLog doesn't exist.

2005-01-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* slime.el (slime-inspector-operate-on-click): New command for
	inspecting the value value at the clicked-at position or invoking
	an inspector action.
	(slime-inspector-mode-map): Bind it to mouse-2.
	(slime-inspector-insert-ispec): Add mouse-face properties for
	clickable values and action buttons.

2005-01-12  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*default-worker-thread-bindings*): New variable to
	initialize dynamic variables in worker threads.
	(spawn-worker-thread, call-with-bindings): New helper functions.
	(thread-for-evaluation): Use them.

2005-01-10  Utz-Uwe Haus  <haus+slime@merkur.math.uni-magdeburg.de>

	* swank-sbcl.lisp (profile-package): Add implementation for SBCL.

2005-01-10  Eduardo Muñoz  <emufer@terra.es>

	* swank.lisp (inspect-for-emacs-list): LispWorks has a low args
	limit for apply: use reduce instead of apply.

2005-01-10  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-conservative-indentation): The default is now
	nil.  Suggested by Travis Cross.

2005-01-10  Matthias Koeppe  <mkoeppe@merkur.math.uni-magdeburg.de>

	* slime.el (slime-inspector-next-inspectable-object): Accept a
	prefix argument and make wrapping around more reliable.  The code
	is adapted from `widget-move'.
	(slime-inspector-previous-inspectable-object): New command.
	(slime-inspector-mode-map): Bind to S-TAB.

2004-12-16  Martin Simmons  <martin@xanalys.com>

	* swank-lispworks.lisp (create-socket): Work around bug in
	comm::create-tcp-socket-for-service on Mac OS LW 4.3.

2004-12-16  Edi Weitz  <edi@agharta.de>

	* slime.el (slime-complete-symbol*): Bind
	comint-completion-addsuffix so unambiguous or exact completion
	closes the string automatically.

2004-12-16  Matthias Koeppe <mkoeppe@merkur.math.uni-magdeburg.de>

	* slime.el (slime-keys): Bind M-* to
	slime-pop-find-definition-stack for compatibility with standard
	Emacs conventions.

2004-12-16  Helmut Eller  <heller@common-lisp.net>

	* swank-source-path-parser.lisp (read-source-form): New function
	which uses *read-suppress* properly.  Common code from
	source-path-stream-position and form-number-stream-position.
	(source-path-stream-position): Use it.

	* swank-cmucl.lisp (form-number-stream-position): Use
	read-source-form.

	* swank.lisp (frame-for-emacs): Print the frame number a little
	nicer with ~2D.

2004-12-15  Matthias Koeppe  <mkoeppe@merkur.math.uni-magdeburg.de>

	* slime.el (slime-lisp-modes): New variable to make C-c C-k
	customizable and usable in scheme-mode.
	(slime-compile-file): Use it.

2004-12-15  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp, swank-backend.lisp (frame-package): Delete it.
	Include the package name for local variables because it is utterly
	confusing if `eval-in-frame' doesn't work due to missing package
	prefixes.

	* swank-source-path-parser.lisp (source-path-stream-position):
	Bind *read-suppress* to nil before calling
	read-and-record-source-map.

	* swank-clisp.lisp (*buffer-name*, *buffer-offset*): Move
	definitions upward before the first use.

2004-12-15  Bryan O'Connor  <bryan-slime@lunch.org>

	* slime.el (slime-edit-definition): Switch to the other frame if
	the `where' is 'frame.
	(slime-edit-definition-other-frame): New function.

2004-12-15  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-send-input): Make the input read-only to
	avoid confusion.
	(slime-make-region-read-only): New function.

2004-12-13  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-mode-map): Bind <home> to slime-repl-bol.
	Suggested by Chris Capel.
	(slime-repl-grab-old-input): Remove the 'old-input text-property
	from the copied text.  Reported by Tim Oates.
	(slime-repl-grab-old-input): Append the old input to the current
	input by default.  If the new `replace' argument is true, replace
	the current input.  Suggested by Antonio Menezes Leitao.
	(slime-repl-return): Pass the prefix argument to
	slime-repl-grab-old-input.

2004-12-09  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (*sldb-print-pretty*, *sldb-print-circle*)
	(*sldb-print-length*, *sldb-print-level*, *sldb-print-lines*)
	(*sldb-print-pprint-dispatch*): Export those symbols.

2004-12-05  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-global-variable-name-p): Also return true for
	names of constants like +foo+.  Suggested by Christian Lynbech.

	* swank-allegro.lisp (handle-compiler-warning): Handle
	undefined-functions warnings by looking the fromat-arguments of
	the condition.
	(compiler-undefined-functions-called-warning-p)
	(location-for-warning, handle-undefined-functions-warning): New
	functions.

	* swank-cmucl.lisp (*install-gc-hooks*): New user variable.
	(sending-safe-p): New predicate.
	(pre-gc-hook, post-gc-hook): Use it.

	* swank.lisp (eval-region): Use a simple loop.

2004-12-02  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp: (inspect-for-emacs (symbol)): Handle non-interned
	symbols.

	* slime.el (slime-repl-clear-buffer, slime-repl-clear-output): Fix
	docstrings.

2004-11-29  Lynn Quam  <quam@ai.sri.com>

	* slime.el (slime-global-variable-name-p): Allow optional
	"<package-name>:" or "<package-name>::".

2004-11-29  Chris Capel  <pdf23ds@gmail.com>

	* swank.lisp (macro-indentation): Ignore &whole, &aux, and
	&environment args.

2004-11-29  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-repl-wrap-history): New user variable.
	(slime-repl-history-replace): Implement wrap around.
	(slime-repl-easy-menu): Fix binding for "Next Input".  Reported by
	Surendra Singhi.

	* swank-lispworks.lisp (list-callers-internal): Return the
	function if dspec:object-dspec returns nil.
	(xref-results): Previously, functions for which
	dspec:dspec-definition-locations returned nil were ignored.
	Include them with a unknown source-location.

	* swank-abcl.lisp, swank-allegro.lisp, swank-clisp.lisp,
	swank-cmucl.lisp, swank-openmcl.lisp, swank-sbcl.lisp,
	swank-lispworks (accept-connection): The :external-format argument
	defaults now to :iso-latin-1-unix.

2004-11-26  Helmut Eller  <heller@common-lisp.net>

	* swank-cmucl.lisp (read-into-simple-string): Use #-cmu19 instead
	of #+cmu18e.

2004-11-25  Chris Capel  <pdf23ds@gmail.com>

	* slime.el (slime-indent-and-complete-symbol): Echo the arglist if
	there's no symbol before point.  Don't complete after parens.
	(slime-echo-arglist): Factorized from slime-space.
	(slime-space): Use it.
	(slime-repl-history-replace): Clear the input at the end of the
	history.

	* swank.lisp (arglist-to-string): Don't show &whole, &aux and
	&environment args.
	(clean-arglist): New function.

2004-11-25  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-net-coding-system): Emacs does funky encoding
	for `raw-text-unix' use `binary' instead.
	(slime-safe-encoding-p): New function.
	(slime-net-send): Use it and don't try to send stuff which can't
	be decoded by Lisp.
	(slime-inferior-lisp-program-history): XEmacs compatibility:
	declare it as a variable.
	(slime-xref-mode): In Emacs 21, set delayed-mode-hooks to nil
	because we don't want to run the lisp-mode-hook.  Reported by
	Chris Capel.

	* swank.lisp (dispatch-loop): Catch errors and close the
	connection.  It's almost impossible to run the debugger inside the
	control-thread, so let it crash instead.  A backtrace would be
	nice, though.
	(cleanup-connection-threads): Can now be called in the
	control-thread.  Add a check to avoid thread suicide.
	(start-swank-server-in-thread): Fix the call to start-server.

	* swank-sbcl.lisp (%thread-state-slot, %thread-state): Refactored
	from thread-status.
	(thread-status): Use it.
	(all-threads): Exclude zombies.

2004-11-24  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-start-and-load): Use vanilla comint instead of
	inf-lisp.  Let's try that for a while.
	(slime): Ask for the coding system when invoked with C-u C-u.
	(slime-net-coding-system, slime-net-valid-coding-systems): Add
	some alternatives for older Emacsen.
	(slime-find-buffer-package): Skip quotes.  Old code looks
	sometimes like (in-package 'foo).
	(slime-repl-mode-map): Inhibit C-c C-z.  Avoids accidental loading
	inf-lisp.
	(slime-net-coding-system): Use find-coding-system in XEmacs.
	coding-system-p means something different here.
	(slime-repl-mode-map): XEmacs compatibility: use (kbd "C-<up>")
	instead of [C-up].

	* swank.lisp (inspect-for-emacs-list): subseq on improper lists
	breaks in Lispworks. Handle that case better.

	* swank-sbcl.lisp (inspect-for-emacs)[code-component]: Disassemble
	code-components too.

	* swank-backend.lisp (import-swank-mop-symbols): Better error
	message for the assertion.

	* swank-cmucl.lisp (debug-var-value): Return #:invalid or
	#:unknown instead of :<not-available>.
	(swank-compile-file): Load the fasl file only if load-p is true.
	(inspect-for-emacs, inspect-alien-record, inspect-alien-pointer):
	Add inspector support for some alien types.

	* swank-lispworks.lisp (emacs-connected): Set the sigint handler
	only for single threaded operation. I.e. when
	*communication-style* is nil.

	* swank-allegro.lisp (set-external-format): New function.  Use LF
	as eol mark.
	(call-with-compilation-hooks): Trap compiler-notes too.

2004-11-24  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-repl-mode-map): Add C-up and C-down to move
	through history. Consistent with comint-mode.
	(slime-repl-mode-map): Add slime-load-file on `C-c C-l' and
	slime-compile-file on `C-c C-k'. This is mostly to override
	unwanted inf-lisp bindings in lisp-mode-map.
	(slime-load-file): Handle (buffer-file-name) being nil.

2004-11-20  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (make-socket-io-stream): Add some #+sb-unicode.

2004-11-20  Travis Cross  <travis@crosswirecorp.com>

	* swank-sbcl.lisp (thread-status): Fix unbalanced parenthesis.

2004-11-20  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp (make-stream-interactive): Only add ouptut
	streams (subclasses of ccl:fundamental-output-stream) to
	ccl::*auto-flush-streams*.

2004-11-19  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-net-coding-system): New variable.  Specifies the
	coding system to use for network communication.  The default is
	iso-latin-1 and should work for all Lisps.  Only a small set of
	coding systems is currently supported.
	(slime-net-valid-coding-systems): New variable.  A list of coding
	systems which may be used.
	(slime-check-coding-system, slime-coding-system-mulibyte-p)
	(slime-coding-system-cl-name): New utility function for coding
	systems.
	(slime-net-connect, slime-make-net-buffer,
	slime-open-stream-to-lisp): Use it.
	(slime-net-decode-length, slime-net-encode-length): Renamed from
	slime-net-read3 and slime-net-enc3.  The length is now encoded as
	a 6 char hex string.

	* swank.lisp (*coding-system*): New variable.
	(start-server): Accept external-format as argument.
	(create-server, create-swank-server, setup-server)
	(serve-connection, open-dedicated-output-stream)
	(create-connection): Ditto.
	(defstruct connection): Add external-format slot.
	(decode-message-length): New function for new length encoding.
	(decode-message): Use it.
	(encode-message): Use new encoding.

	* swank-cmucl.lisp (accept-connection): Accept external-format
	argument.
	(inspect-for-emacs): Add CMUCL specific versions for array and
	vectors.

	* swank-sbcl.lisp, swank-openmcl.lisp, swank-lispworks.lisp,
	swank-clisp.lisp, swank-backend.lisp, swank-allegro.lisp,
	swank-abcl.lisp (accept-connection): Accept :external-format as
	argument.

2004-11-19  Matthew Danish  <mrd+nospam@cmu.edu>

	* swank-allegro.lisp: (count-cr): New function. Convert
	file-offsets to match Emacs' eol-conventions.
	(find-definition-in-file): Use it.

	* slime.el (slime-insert-xrefs): Display the multi-line label much
	more cleanly.

2004-11-19  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (thread-status): Decode the thread-state-slot
	instead of returning ???.

	* swank-allegro.lisp (swank-mop:slot-definition-documentation):
	ACL 7 says documentation should have 2 args. So, pass t as second
	argument.
	(fspec-primary-name): Recurse until we have a symbol.
	(allegro-inspect): New function.  Mostly reverse engineered from
	ACL's native inspector.
	(inspect-for-emacs (t), inspect-for-emacs (function)): Use it.

	* swank.lisp (inspect-for-emacs array): Use row-major-aref instead
	of a displaced array.  I hope that does the same.
	(inspect-for-emacs integer): Ignore errors in
	decode-universal-time.  Negative values and, in SBCL, also small
	values cannot be decoded.
	(list-threads): Include the thread-id. Useful for SLIME debugging.

	* slime.el (slime-list-threads, slime-thread-insert): Show the
	thread-id.
	(slime-thread-control-mode-map): Remove the binding for the
	no-longer-existent slime-thread-goahead command.

2004-11-18  Alexey Dejneka  <adejneka@comail.ru>

	* swank.lisp (inspect-for-emacs): Fix bug in handling of arrays
	with fill-pointers.

2004-11-15  Helmut Eller  <heller@common-lisp.net>

	* slime.el: The REPL commands ,quit and ,sayoonara are now
	distinct.  Previously Quit killed all Lisps an all buffers.  The
	new Quit command kills only the current Lisp.
	(slime-quit-lisp): New function.
	(repl-command quit): Use it. Don't delete all buffers.
	(repl-command sayoonara): No longer an alias for ,quit.
	(slime-connection-list-mode-map): Bind C-k to slime-quit-lisp.
	(slime-communication-style): New connection variable.
	(slime-use-sigint-for-interrupt): Is no longer a connection local
	variable.  It's derived from the new slime-communication-style.
	(slime-inhibit-pipelining): New user option.
	(slime-background-activities-enabled-p): New predicate to control
	various background activities like autodoc and arglist fetching.
	(slime-space, slime-autodoc-message-ok-p): Use it.
	(slime-search-call-site): Use hints provided to search a call-site
	in a defun.  Useful for the show-frame-source command.
	(slime-goto-source-location): Use it.
	(slime-quit): Deleted, as it was broken.  May come back later.
	(slime-inspector-label-face, slime-inspector-value-face)
	(slime-inspector-action-face, slime-reader-conditional-face):
	Provide better defaults for Emacsen which don't support :inherited
	faces.

	* swank-backend.lisp (emacs-connected): Don't pass the stream as
	argument.  make-stream-interactive is a better place for setting
	buffering options.

	* swank-cmucl.lisp (emacs-connected): Install GC hooks to display
	GC messages in the echo area.
	(sos/misc :flush-output): There seem to be funny signal safety
	issues if the dedicated output stream is not used.  So, lets first
	reset the buffer index before sending the buffer to the underlying
	stream.

	* swank-lispworks.lisp (frame-source-location-for-emacs): Pass the
	function name of the next (newer) frame as a hint to Emacs.  This
	way we can highlight the call site in some cases, instead of the
	entire defun.
	(frame-location): Renamed from function-name-location.  The
	argument is now a dspec, not only a name. Also include hints for
	Emacs.
	(lispworks-inspect): Simplified from old code.
	(inspect-for-emacs): Use it for also for simple functions.
	(emacs-connected, make-stream-interactive): Move the
	soft-force-output stuff to make-stream-interactive.

	* swank-abcl.lisp (emacs-connected): Deleted.  The default
	implementation should be good enough.

	* swank-sbcl.lisp (emacs-connected): Updated for new interface.

	* swank-openmcl.lisp (emacs-connected, make-stream-interactive):
	Move buffering stuff to make-stream-interactive.

	* swank.lisp (defstruct connection): Add new slot:
	communication-style for convenience.
	(create-connection): Initialize the new slot.
	(connection-info): Send the communication-style to Emacs.
	(install-fd-handler, simple-serve-requests): Sending
	:use-sigint-for-interrupt is no longer necessary.

2004-11-11  Raymond Toy  <raymond.toy@ericsson.com>

	* slime.el (slime-activate-font-lock-magic): Add XEmacs support.
	(slime-reader-conditional-face): New face.

2004-11-10  Marco Baringer  <mb@bese.it>

	* swank-backend.lisp (definterface): Eliminate unused variable
	received-args.
	(emacs-connected, make-stream-interactive, condition-references,
	condition-extras, buffer-first-change): Add (declare (ignore X))
	for unused arguments in default implementations.
	(inspect-for-emacs): Remove (declare (ignore)) for inexistent
	variable inspection-mode. Added T qualifiers in method arguments.

	* swank-openmcl.lisp (inspect-for-emacs): Use definterface so
	SLIME knows we implement this.
	(arglist function): Use ccl:arglist, not ccl::arglist-from-map.
	(inspect-for-emacs): Added support for inspecting the uvector
	objects under lisp datums.

2004-11-09  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (features-for-emacs): New function to avoid
	keyword/string confusion.  Case doesn't matter since Emacs will
	downcase them anyway.
	(connection-info, sync-features-to-emacs): Use it.  Should fix
	highlighting bug reported by Edi Weitz.

	* slime.el (slime-eval-feature-conditional): Convert AND, OR, and
	NOT to lowercase keywords.
	(slime-net-read3): Silly optimization: give char-after the offset
	as argument to avoid save-excursion and forward-char.

2004-11-07  Brian Downing  <bdowning@lavos.net>

	* slime.el (slime-fuzzy-explanation): Added line to describe
	flags (:boundp, :fboundp, :macro, etc), which are now reported in
	the fuzzy-completion output.
	(slime-fuzzy-insert-completion-choice): Added flags.
	(slime-fuzzy-choices-buffer): Added flags header.

	* swank.lisp (fuzzy-completions): Changed docstring to describe
	new flags in the completion results.
	(convert-fuzzy-completion-result): New function to marshall the
	results from the completion core into something Emacs is
	expecting.  Added flags.
	(fuzzy-completion-set): Use the above.
	(compute-completion): Removed.
	(score-completion): Cleaned up a little bit.
	(highlight-completion): Use destructive nstring-upcase.

2004-11-01  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-easy-menu): Add item for
	slime-update-indentation.  Suggested by Lynn Quam.
	(slime-severity-faceslime-show-note-counts)
	(slime-most-severe, slime-choose-overlay-region): Handle
	read-errors.
	(slime-show-buffer-position): New function.
	(slime-show-source-location): Use it.

	* swank-backend.lisp (deftype severity): Add read-errors.

	* swank-cmucl.lisp (severity-for-emacs): Special case read-errors.
	(read-error-location): Add the offset to the buffer start.

	* swank.lisp (assign-index): Avoid linear search.

2004-10-30  Helmut Eller  <heller@common-lisp.net>

	* swank-source-path-parser.lisp (source-path-stream-position):
	Bind *read-suppress* only as long as we skip over forms.  The last
	toplevel form in the path is read with *read-suppress* = nil
	because in newer versions of CMUCL and SBCL read will return nil
	if *read-suppress* is t.

2004-10-28  Helmut Eller  <heller@common-lisp.net>

	* swank-clisp.lisp: Ups. Undo previous change.

	* swank-clisp.lisp: Add workaround for CLISP's broken control
	string parser.

	* swank-cmucl.lisp (set-step-breakpoints): Handle breakpoints at
	single-return points in escaped frames better.  Previously we
	tried to set a breakpoint at the current position and consequently
	was only hit during the next call.
	(inspect-for-emacs)[function]: Call the next method only for
	funcallable instances.
	(profile-report, profile-reset, unprofile-all): We have to use
	eval because the macro expansion depends on the value of
	*timed-functions*.  Reported by Chisheng Huang.

	* slime.el (slime-space): Call slime-message in the right buffer,
	so that after-command hooks are added in the right buffer.
	Reported by Juho Snellman.
	(slime-dispatch-event): Accept stepping flag.
	(sldb-setup): Don't query when entering a recursive edit.
	(sldb-exit): Don't kill the buffer if we are in stepping mode.
	(slime-inspector-insert-ispec): New function.
	(slime-open-inspector): Use it.
	(slime-inspector-operate-on-point): Simplified.
	(test interactive-eval): Fix test case.
	(slime-kill-all-buffers): More regexp kludges.  From Bill Clementson.

	* swank-backend.lisp (activate-stepping): New function.

	* swank.lisp (*sldb-stepping-p*): New variable.  Used to tell
	emacs that the debugger buffer should not be closed even if we
	unwind.
	(debug-in-emacs): Use it.
	(sldb-step): Moved to the front end.
	(inspector-princ, method-specializers-for-inspect): Simplified.
	(methods-by-applicability): Use a simpler algorithm. I doubt there
	is much difference in practice.
	(inspect-for-emacs)[symbol, function, standard-generic-function]
	[standard-method]: Use less than 80 columns.
	(inspector-call-nth-action): Don't accept &rest args.  Was never
	used.
	(inspect-for-emacs) [integer]: Fix control string.  Thanks to CSR
	for pointing it out.

2004-10-27  Helmut Eller  <heller@common-lisp.net>

	* swank-sbcl.lisp (signal-compiler-condition): Actually delete one
	of the reader-conditionalized forms.

2004-10-26  Helmut Eller  <heller@common-lisp.net>

	* cl-indent.el: Add indentation specs for some missing CL symbols.
	(lisp-prefix-match-indentation): Change default to
	nil to avoid confusion for people who don't care about the issue.

	* swank-sbcl.lisp (signal-compiler-condition): Remove reader
	conditionals as the current code doesn't work in any SBCL before
	0.8.13 anyway.

	* swank-source-path-parser.lisp: Remove workarounds for SBCL bugs.
	The bugs are fixed in the versions we support.

	* swank-cmucl.lisp (read-error-location)
	(signal-compiler-condition): Handle read-errors.
	(swank-compile-file): Don't load the fasl file if there was an
	error.

	* swank.lisp (define-printer-variables): Handle doc strings
	properly.
	(*sldb-pprint-dispatch*): Initialize it with the default dispatch
	table.

	* slime.el (slime-init-command): New function to send the command
	to load swank.  Having a separate function for the task should
	make it easier to start a Lips with a preloaded swank.
	(slime-maybe-start-lisp): Use it.
	(slime-maybe-start-multiprocessing): Deleted.
	(slime-repl-buffer): Include the name of the implementation.
	(slime-set-default-directory)
	(slime-sync-package-and-default-directory): Translate filenames.

2004-10-25  Marco Baringer  <mb@bese.it>

	* swank.lisp (inspect-for-emacs array): Properly deal with arrays
	without fill pointers.
	(inspect-for-emacs function): Show function-lambda-expression
	when available.

	* swank-openmcl.lisp (specializer-name): New function.
	(who-specializes): Use it.
	(maybe-method-location): Use it.
	(function-source-location): Use it.

	* swank-cmucl.lisp (inspect-for-emacs function): Use next
	method's values and simply add cmucl specific details.

	* slime.el (slime-repl-defparameter): Change default value to "*".

2004-10-25  Thomas Schilling  <tjs_ng@yahoo.de>

	* swank-allegro.lisp (inspect-for-emacs): Use
	excl::external-fn_symdef to get the function documentation.

	* swank.lisp (inspect-for-emacs): Order generic function's methods
	and show abbreviated docs for methods.
	(abbrev-doc): New function.
	(methods-by-applicability): New function.
	(*gf-method-getter*): New variable.

2004-10-19  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-show-source-location): Call `push-mark' to push
	the source position onto the global mark ring.

2004-10-19  Helmut Eller  <heller@common-lisp.net>

	* swank.lisp (define-printer-variables): NIL is not a valid
	docstring.  Reported by Alain Picard.
	(printer-variables sldb-print): Include print-gensym,
	pprint-dispatch, base, radix, array, and lines.

2004-10-17  Luke Gorrie  <luke@synap.se>

	* slime.el (slime-message): Use slime-typeout-frame if available.

2004-10-17  Helmut Eller  <heller@common-lisp.net>

	* cl-indent.el: Our local copy.  Should eventually be merged the
	file with in the main distribution.

	* slime.el: (slime-find-buffer-package-function): New variable to
	allow customization for unusal syntax.
	(slime-maybe-rearrange-inferior-lisp): Removed unused function.
	(slime-set-inferior-process): Non-macro version to make
	byte-compiler happy.  Reported by Raymond Wiker.
	(slime-maybe-start-lisp): Use it.
	(slime-sync-package-and-default-directory): Synch the
	default-directory in the REPL buffer too.
	(slime-goto-connection): Close the connection list window.
	Suggested by Andras Simon.
	(slime-repl-clear-buffer): Place point after the prompt.
	(selector-method ?i): Use slime-process to switch to the right
	buffer.
	(slime-background-message): Do nothing if the minibuffer is
	active.
	(slime-indent-and-complete-symbol): Don't indent if we at the same
	line as the prompt.

	* swank.lisp (*sldb-pprint-frames*): Renamed to
	*sldb-print-pretty*.
	(*sldb-print-level*, *sldb-print-length*, *sldb-print-circle*)
	(*sldb-print-readbly): Group of new variables to customize
	printing in the debugger.  The default values should be safe.
	(define-printer-variables, with-printer-settings): New macros to
	make defining and binding groups of printer variables easier.
	(inspect-for-emacs-list): Fix bug with circular lists and only
	shows the first 40 elements.
	(inspect-for-emacs): Various cleanups.
	(all-qualified-readnames): Removed. It was not needed because
	common-lisp-indent-function strips of any package prefix and
	downcases the symbol anyway.
	(printer-variables sldb-print): Ooops. Better use sldb-print as prefix
	than sldb alone.  *sldb-level* was already defined.

	* swank-cmucl.lisp (inspect-for-emacs (code-component)):
	Disassemble the memory region if there's not enough debug info.

2004-10-17  Jan Rychter  <jan@rychter.com>

	* swank-cmucl.lisp (return-from-frame): Add it.

2004-10-11  Thomas F. Burdick  <tfb@OCF.Berkeley.EDU>

	* swank-sbcl.lisp (function-definitions): Find compiler macros, too.
	(find-defintions, compiler-definitions)
	(optimizer-definitions, transform-definitions): Add compiler
	transformers and optimizers to the list of definitions.

2004-10-07  Peter Seibel  <peter@javamonkey.com>

	* swank.lisp (spawn-threads-for-connection): Bind *debugger-hook*
	instead of SETF'ing it.

2004-10-06  Luke Gorrie  <luke@synap.se>

	* swank.lisp (update-indentation/delta-for-emacs): Configure Emacs
	indentation settings not just for the symbol name but for all
	package-qualified forms of it as well.

	* doc/slime.texi (Credits): Updated the credits list to include
	more Lisp implementors who're also SLIME hackers.

2004-10-05  Luke Gorrie  <luke@synap.se>

	* swank.lisp (arglist-for-echo-area): Handle errors and return a
	message.
	(parse-symbol): Recognise an empty package name as the KEYWORD
	package.

2004-10-03  Reini Urban  <rurban@x-ray.at>

	* swank-clisp.lisp (getpid)[win32]: Use
	win32:|GetCurrentProcessId|.

2004-10-03  Helmut Eller  <heller@common-lisp.net>

	* slime.el: Reduce dependency on inf-lisp internals. Make it
	possible to start the inferior lisp in a buffer different from
	"*inferior-lisp*".
	(slime): Parse the command argument explicitly and don't rely on
	`inferior-lisp'.  Don't close all connections, but only the one
	for the inferior lisp buffer we are using.
	(slime-maybe-start-lisp): Take the command and buffer as argument.
	Decide here whether we should start start a new processwe or just
	disconnect and reconnect .
	(slime-start-lisp): Load verbosely.
	(slime-inferior-lisp): New function.  Replaces call to
	`inferior-lisp'.
	(slime-inferior-connect, slime-start-swank-server): Take the
	inferior process as argument
	(slime-read-port-and-connect): Set the slime-inferior-process
	variable in the new connection.
	(slime-inferior-process): New connection local variable.
	(slime-process): Use it.
	(slime-restart-inferior-lisp): Don't use inferior lisp stuff.
	(slime-switch-to-output-buffer): Process interactive arguments
	properly.

	* swank-loader.lisp (compile-files-if-needed-serially): Load
	verbosely.

2004-10-01  Helmut Eller  <heller@common-lisp.net>

	* swank-allegro.lisp (find-fspec-location): excl:source-file can
	return stuff like (:operator ...); try to handle it.

	* swank-cmucl.lisp (code-component-entry-points): Only include
	entry points with "valid" functions names.  This excludes internal
	lambdas which have usually a string as name, like "defun foo".

	* swank.lisp (parse-symbol): Don't use the reader to avoid
	interning unknown symbols.  The downside is that we no longer
	handle escaped |symbols| correctly.

	* slime.el (slime-set-connection-info): Hide the *inferior-lisp*
	buffer after we know Lisp's pid.  Print the words of encouragement
	here, when all the other asynchronous initialization is completed.
	(slime-find-buffer-package): We need to preserve the case for
	things like (:in-package "foo"), so return "\"foo\"".

2004-09-27  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-process): New function intended to replace all
	those references to the *inferior-lisp* buffer.
	(slime-maybe-start-lisp): Split it up.
	(slime-start-lisp): New function.
	(slime-restart-inferior-lisp): Use the command from the existing
	process to start the new process.

2004-09-27  Christian Lynbech  <christian@defun.dk>

	* slime.el (define-slime-dialect): New macro to make starting
	Lisps with different command line options easier.

2004-09-27  Rui Patrocínio  <rui.patrocinio@netvisao.pt>

	* swank.lisp (mop, mop-helper): Support functions for the class
	browser.

	* slime.el (slime-browse-classes, slime-browse-xrefs): New
	commands to browse class hierarchies and xref graphs in a tree
	widget.

	* tree-widget.el: New file.  Only needed for older Emacsen.

2004-09-23  Helmut Eller  <heller@common-lisp.net>

	* slime.el (slime-start-and-load): Take arguments so that the
	function can be called non-interactively. Only start SLIME is if
	it is not running.
	(slime-recompile-bytecode): Don't warn about uses of cl-functions.
	(slime-reset): Kill all sldb buffers.
	(slime-goto-location-position): Fix syntax for Emacs 20.
	(sldb-mode-map): Add C-c C-d bindings.
	(slime-open-inspector): Insert the type in the second line so that
	we can make longer titles, e.g we should include the princed
	version of the inspected object.

	* swank-backend.lisp (frame-package, label-value-line)
	(label-value-line*): New functions.

	* swank.lisp (frame-locals-for-emacs): Bind *print-pretty* to
	*sldb-pprint-frames* to get more compact lines and bind *package*
	to frame-package to get shorter labels for variables.
	(format-values-for-echo-area): Include the hex and octal
	representation for integers.
	(apply-macro-expander, disassemble-symbol): Use the buffer-package
	for reading.
	(inspector-content-for-emacs): Use print-part-to-string so that we
	see cycles in the data structure.
	(inspect-for-emacs): Minor beautifications.
	(load-file-set-package): New function.

	* swank-cmucl.lisp (frame-package): Implemented.
	(inspect-for-emacs): Only include stuff that is actually stored in
	the object itself (see objdef.lisp for exact object layout).
	Include the disassembly for functions and code components.

2004-09-19  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-gray.lisp (stream-read-char): Treat empty strings as
	end-of-file.

	* swank-cmucl.lisp (sis/in): Treat empty strings as end-of-file.
	(map-allocated-code-components): Inhibit efficiency notes.
	(arglist)[symbol] Delete unreachable code.
	(sldb-break-on-return, sldb-break-at-start): Implement it
	(sldb-step): Some cleanups.

	* swank.lisp (thread-for-evaluation): Restart the listener thread
	if it was dead for some reason.
	(debugger-condition-for-emacs): Include "extra" stuff. Currenlty
	only used to pop up the source buffer at breakpoints.
	(sldb-break): New function.
	(interrupt-worker-thread): Interrupt the repl thread if there is
	no other active thread.

	* swank-backend.lisp (import-swank-mop-symbols): New
	function. Useful if the implementation has most of the mop symbols
	in the same package.
	(sldb-break-on-return, sldb-break-at-start, condition-extras): New
	functions.

	* slime.el (sldb-break-on-return, sldb-break): New commands.
	(slime-repl-return-string): Allow empty strings.  That's our way
	to send end-of-file.
	(sldb-insert-condition): Add "extra" slot for random thing that
	don't fit nicely somewhere else.
	(sldb-dispatch-extras): New function.
	(sldb-show-frame-source): New non-interactive version of
	sldb-show-source.
	(sldb-show-source): Use it.
	(slime-beginning-of-symbol, slime-end-of-symbol): New functions
	which don't include the character after a hash '#'.
	(slime-symbol-name-at-point): Use them.
	(slime-symbol-start-pos, slime-symbol-end-pos): Ditto.

2004-09-17  Marco Baringer  <mb@bese.it>

	* swank.lisp: Don't print "Documentation:" if none is available;
	add support for classes specializer-direct-methods; deal with
	eql-specializers in methods.
	(inspector-princ): New function.
	(method-specializers-for-inspect): New function.
	(method-for-inspect-value): New function.
	(inspect-for-emacs): Use inspector-princ instead of
	princ-to-string.

	* swank-backend.lisp (swank-mop): Require eql-specializer,
	eql-specializer-object and specializer-direct-methods in swank-mop
	package.

	* swank-allegro.lisp, swank-clisp.lisp, swank-cmucl.lisp,
	swank-openmcl.lisp, swank-sbcl.lisp (swank-mop): Export
	eql-specializer, eql-specializer-object and
	specializer-direct-methods from swank-mop.

	* swank-cmucl.lisp (inspect-for-emacs): Thinko fix.

	* swank-lispworks.lisp (swank-mop): Export
	specializer-direct-methods.
	(eql-specializer): Implement.
	(eql-specializer-object): Implement.

	* swank-sbcl.lisp (inspect-for-emacs): Fix broken ignore
	declaration.

	* doc/slime.texi: Update inspector documentation.

2004-09-16  Marco Baringer  <mb@bese.it>

	* swank-clisp.lisp (swank-mop, inspect-for-emacs): Only define the
	CLOS parts of the inspector if the underlying lisp provides the
	required functionality. If not enough MOP is present to implement
	the inspector then we define some very simple replacement methods.

2004-09-16  Marco Baringer  <mb@bese.it>

	* swank-clisp.lisp (swank-mop): Implement the MOP compatability
	package.
	(inspect-for-emacs): Update for new inspection API.

2004-09-15  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-openmcl: typo in who-references. Fix frame-var-value

2004-09-15  Marco Baringer  <mb@bese.it>

	* slime.el (slime-inspector-label-face,
	slime-inspector-value-face, slime-inspector-action-face,
	slime-inspector-type-face): These faces now inherit from similar
	font-lock-<whatever> faces.
	(slime-open-inspector): Use slime-inspector-value-face for values.

	* swank.lisp (inspect-for-emacs): Add function and compiler-macro
	documentation when inspecting symbols. View the truename of
	logical pathnames where they exist. Fix typos in package
	inspector (fix by Torsten Poulin <torsten@diku.dk>).

	* swank-sbcl.lisp, swank-cmucl.lisp (inspect-for-emacs): Insert
	function object's documentation when it's available.

2004-09-15  Eduardo Muñoz  <emufer@terra.es>

	* .cvsignore: Added *.elc

	* hyperspec.el: Fixed syntax error.

2004-09-15  Alan Caulkins  <fatman@maxint.net>

	* swank.lisp (cleanp-connection-threads): Kill all Swank threads
	for a connection when it terminates.

2004-09-14  Thomas Schilling  <tjs_ng@yahoo.de>

	* swank-allegro.lisp (inspect-for-emacs): Fixes to previous patch.

2004-09-14  Marco Baringer  <mb@bese.it>

	* swank-backend.lisp (inspector, make-default-inspector): Add an
	INSPECTOR object argument to the inspector protocol. This allows
	implementations to provide more information regarding cretain
	objects which can't be, or simply aren't, inspected using the
	generic inspector implementation. also export inspect-for-emacs
	and related symbols from the backend package.
	(make-default-inspector): New function.

	* swank.lisp (inspected-parts): Rename to inspect-for-emacs and
	add an inspector argument. Move inspect-for-emacs to
	swank-backend.lisp, leave only the default implementations.

	* swank-openml.lisp, swank-sbcl.lisp, swank-allegro.lisp,
	swank-cmucl.lisp, swank-lispworks.lisp (inspected-parts): Rename
	and change argument list. Many of the inspected-parts methods were
	being clobbered by the inspected-parts in swank.lisp, now that
	they're being used the return values have been updated for the new
	inspect-for-emacs API.

2004-09-14  Thomas Schilling  <tjs_ng@yahoo.de>

	* swank-allegro.lisp (inspected-parts): Implement inspector for
	structs.

2004-09-13  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (intern-catch-tag): New function.
	(read-user-input-from-emacs, take-input): Use it.

2004-09-13  John Paul Wallington  <jpw@gnu.org>

	* swank.lisp (define-special): Make the doc-type `variable'
	rather than `symbol'.  Don't quote `doc'.  Doc fix.

2004-09-09  Martin Simmons  <martin@xanalys.com>

	* swank-lispworks.lisp: Set up the swank-mop package.  Implement
	swank-mop:slot-definition-documentation and function-name.

2004-09-13  Marco Baringer  <mb@bese.it>

	* swank.lisp (inspected-parts): Added inspectors for pathnames,
	logical pathnames, standard-objects and numbers (float, ratio,
	integer and complex).

	* swank-backend.lisp: Define import-to-swank-mop.

	* swank-openmcl.lisp, swank-sbcl.lisp, swank-allegro.lisp: Don't
	define the import-to-swank-mop function (now defined in
	swank-backend.lisp).

	* swank-cmucl.lisp (swank-mop, function-name): Implement backend
	for inspector.
	(arglist): Add support for extracting arglists from function
	objects.
	(create-socket): Don't specify the host on PPC.

2004-09-13  Alan Ruttenberg  <alanr-l@mumble.net>

        * slime.el slime-goto-location-position: New location specifiers:
	(:method name specializers . qualifiers) all are strings. Looks
	for defxxx name then the qualifiers as words, in order then the
	specializers as words, in order (except for "T", which is
	optional). Pass the symbols names for specializers and qualifiers
	(no packages). Used by openmcl but might be useful for others
	(:text-anchored <position fixnum> <string> <delta fixnum>)
	Got to position, then search for string, then move delta. To
	support upcoming source recording for openmcl debugging.

	* swank-openmcl multiple changes: - fix support for *sldb-top*
	 (formerly *swank-debugger-stack-frame*) Was not thread safe. Now
	 (application-error), and (interrupt-thread) records the error
	 pointer in a table associated with thread and map-backtrace picks
	 up the appropriate pointer. *process-to-stack-top*,
	(grab-stack-top), (record-stack-top).

	 - Other adjustments for changes to multiprocessing: remove
	(force-break-in-listener) no longer necessary since we use
	process-interrupt instead of ccl::*interactive-abort-process*
	Adjust break-in-sldb to do so for swank repl connections
	(abstraction breaking reference to swank::*connections*, but
	nicely via intern)

	 - changes to (find-definitions) (function-source-location),
	 addition of (maybe-method-location) (remove-filename-quoting).

	To support editing definitions of methods. To fix bug with
	pathnames with quoted characters (like "\\.swank.lisp"). To remove
	bogus source recording of l1-boot-3 in functions that didn't have
	a source file noted.

	 - Implementation of xref functions: (xref-locations) uses xref
	implementation added to openmcl recently. Note that you have to
	(ccl::start-xref) for it to work for other than who-calls, and
	that xref information is not currently persisted in fasl files (I
	will release a patch for this soon) Backend functions (who-binds)
	(who-macroexpands) (who-references) (who-sets)
	(who-calls) (list-callees) (who-specializes)

	 - Lifted profile backend functions from swank-clisp which use
	 "metering.lisp"

	 - (openmcl-set-debug-switches) turns on the various variables I.
	know about that have the lisp record extra debugging
	information(including starting xref). I suggest you call
	it. Should it be called by default?

	- (frame-arguments) use builtin ccl::frame-supplied-args since the
	current version was sometimes missing the first argument to the
	function. (I think this was when it was passed by register. If you
	don't want to lose it in the frame locals in backtrace, call
	(openmcl-set-debug-switches) specifically, set
	ccl::*ppc2-compiler-register-save-label* to t

	- implement frame-var-value backend

	* metering.lisp: Minor changes to #+ #- to recognize openmcl

	* swank-loader.lisp: Load "metering.lisp"

2004-09-13  Marco Baringer  <mb@bese.it>

	* swank.lisp (inspected-parts): Deal with unfinalized classes in
	standard-class inspector. (Patch from Thomas Schilling)

2004-09-13  Marco Baringer  <mb@bese.it>

	* swank.lisp: New inspector protocol. The lisp side now returns a
	specially formated list of "things" to format which are then
	passed to emacs and rendered in the inspector buffer. Things can
	be either text, recursivly inspectable values, or functions to
	call.
	(inspected-parts): Redefine for new inspector protocol.
	(*inspectee-parts*): Redefine as array.
	(*inspectee-actions*): New array, similar to *inspectee-parts*.
	(reset-inspector): Update for new implementation of
	*inspectee-parts* and new variable *inspectee-actions*.
	(inspector-contents-for-emacs): New function.
	(inspect-object): Update for new inspector protocol.
	(inspector-nth-part): Update for new *inspectee-parts*
	implementation.
	(inspector-call-nth-action): New function.

	* slime.el (slime-inspector-action-face): New face.
	(slime-open-inspector): Adapt to new inspector protocol.
	(slime-inspector-operate-on-point): New function, subsumes
	slime-inspector-inspect-object-at-point.
	(slime-inspector-next-inspectable-object): Skip to next object,
	not just end of current object; wrap around buffer.
	(slime-inspector-mode-map): change bindings of [return] and "\C-m"

	* swank-bacend.lisp (swank-mop): New package. Simply defines all
	the MOP related symbols we need from an implementation.
	(arglist): Update doc string. Provide default implementation.
	(function-name): New backend function.

	* swank-allegro.lisp (swank-mop, slot-definition-documentation):
	Implement. (Patch from Thomas Schilling)

	* swank-sbcl.lisp (swank-mop, slot-definition-documentation,
	function-name): Implement.

	* swank-openmcl.lisp (swank-mop, function-name): Implement.
	(arglist): Implement for function objects.

2004-09-12  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (compile-file-for-emacs): Use with-buffer-syntax so
	that SBCL source files can be compiled.  From Christophe Rhodes.

2004-09-09  Martin Simmons <martin@xanalys.com>

	* swank-loader.lisp (make-swank-pathname): Preserve the host
	component (important for LispWorks on Windows).

2004-09-08  Martin Simmons <martin@xanalys.com>

	* swank-lispworks.lisp: Implement call-with-compilation-hooks.

2004-09-03  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* NEWS: Summarize changes since August.

	* slime.el: Add some docstrings.

	* mkdist.sh: Add PROBLEMS file. We're no longer alpha.

	* swank.lisp: Remove debugging code in comment.

	* swank-sbcl.lisp: Delete dead code.

	* swank-lispworks.lisp (defimplementation): define-dspec-alias
	seems to more apropriate than define-form-parser.

	* swank-cmucl.lisp (print-frame): Catch errors during printing.

	* README: Fix typo.

2004-09-02  Wolfgang Mederle <wolfgang.mederle@stud.uni-muenchen.de>

	* swank-loader.lisp (*lisp-name*): Replace / with - in CMUCL
	version strings.

2004-09-01  John Paul Wallington  <jpw@gnu.org>

	* slime.el (slime-oneliner): Don't use free variable.
	(slime-recenter-window, slime-set-connection-info)
	(slime-pprint-event, slime-compiler-notes-quit)
	(slime-apropos-summary): Likewise.
	(slime-connect): Tidy up handshake `message' call.

2004-09-01  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-repl-push-directory): Fix interactive spec.
	(sldb-reference-properties): Take a the reference object as
	argument instead of its parts. Fix callers accordingly.
	(slime-fuzzy-choices-buffer): Remove assignment to unused variable
	slime-fuzzy-target-mtime.
	(slime-ed): Replace call to new-frame with make-frame.
	(sldb-find-buffer): Cleanup.
	(sldb-highlight-sexp): Fix regexp. It's now almost a full line.

	* swank.lisp (completion-set, tokenize-symbol-designator)
	(tokenize-completion, fuzzy-completion-set)
	(briefly-describe-symbol-for-emacs): Remove simple-base-string
	declarations.

2004-08-30  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* PROBLEMS: We require SBCL 0.8.13.  0.8.12 is no longer
	supported.

	* swank-allegro.lisp (find-fspec-location): Catch errors in
	excl:source-file.

	* swank.lisp (send-to-socket-io): Add some ignore declarations.

	* slime.el (sldb-fetch-all-frames, sldb-end-of-backtrace)
	(sldb-beginning-of-backtrace): New commands.
	(slime-search-suppressed-forms): Change the start regexp so that
	reader conditionals in single line comments, like "; #+foo", are
	ignored.

2004-08-27  Peter Seibel  <peter@javamonkey.com>

	* swank-backend.lisp (swank-compile-string): Add directory
	argument which is used by Allegro backend to improve source
	recording for definitions compiled with C-c C-c.

2004-08-23  John Paul Wallington  <jpw@gnu.org>

	* slime.el (slime-pretty-package-name): Fix last cond clause.

2004-08-21  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (*global-debugger*): New configurable to globally
	install swank-debugger-hook as *debugger-hook*. True by default.

2004-08-19  Luke Gorrie  <luke@bluetail.com>

	* doc/slime.texi: C-c C-c C-a, C-c C-u C-e.
	Thanks Barry Fishman for reporting incorrect indexing.

2004-08-18  Matthew Danish <mrd+nospam@cmu.edu>

	* swank-allegro.lisp (swank-compile-string): Use #\; instead of
	#\: to separate the position from the buffer-name.  This avoids
	troubles on Windows.

2004-08-16  Luke Gorrie  <luke@bluetail.com>

	* doc/slime.texi: Random updates.

	* slime.el (slime-space): Use slime-message instead of
	slime-background-message. This displays multi-line arglists.
	(sldb-mode-map): Bind 'C' to sldb-inspect-condition.

2004-08-14  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-find-buffer-package): Use "%s", not "%S", to
	avoid ugly escape characters, if the package name contains dots.

2004-08-13  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-eval-in-frame): Print result to the REPL when a
	prefix argument is given.
	Added pull-down menus for SLDB and the REPL.

	* swank-source-path-parser.lisp: Removed caching of readtables and
	the source-map hashtable. Fresh creation is ultra-cheap (<1ms).
	The caching didn't handle modifications to readtables and
	generally made me feel uneasy while tracking down an obscure bug
	in a reader macro.
	The cached source-map hashtable also wasn't thread-safe (ho hum).

2004-08-13  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-merge-notes, slime-tree-for-note): Use the short
	note message for annotation in the source buffer and the long
	message in the tree widget.  Used to be the other way around.
	(sldb-insert-frames): Set the `start-open' property for XEmacs.
	Without `start-open', the `point-entered' property is inherited
	when we insert something before the "--more--" marker.  Reported
	by Sundar Narasimhan.

	* swank.lisp (variable-desc-for-echo-area): Bind some printer
	variables to limit the length of the output.

2004-08-05  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-setup): Added typeout-frame keyword argument.
	(slime-thread-attach): Fixed misnamed function call.

2004-08-04  Luke Gorrie  <luke@bluetail.com>

	* swank-allegro.lisp (find-fspec-location): Fixed to work for more
	types of definition than just functions. So M-. now works for e.g.
	classes in Allegro. From Matthew Danish.
	(find-fspec-location): Include the type of the definition in the
	designator sent to Emacs. From Matthew Danish.

2004-08-04  Martin Simmons <martin@xanalys.com>

	* swank-lispworks.lisp (frame-actual-args): Correct syntax for
	handler-case.

2004-08-04  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: (slime-mode-map, slime-repl-mode-map)
	(slime-repl-read-mode-map): Remove the binding for C-c C-g.  C-c
	C-b is now the default interrupt key.
	(slime-list-repl-short-cuts): Don't trash the shortcut-table: copy
	it before sorting.  (Thanks to Mark Simpson.)

2004-08-02  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-connect): Shorten the welcome message by leaving
	out the port number (which is displayed in the REPL anyway). This
	avoids line-wrapping some messages of encouragement.

	* swank.lisp (with-buffer-syntax): Don't bind *readtable* to
	*buffer-readtable* if they are already EQ. When we shadow this
	binding the user can't assign *readtable* from the REPL so it's
	best avoided when possible.

	* swank-allegro.lisp: Removed fwrapper-based code for inheriting
	"swankiness" to newly spawned threads. This was fighting the
	system and not the right thing.

	* slime.el (slime-choose-overlay-region): Tweaked the
	multiline-annotation-avoidance code to work with forms not
	starting with an open-paren, e.g. `(..) or #'(..).
	(slime-update-modeline-package): New configurable. Non-nil (the
	default) means update the Lisp package in the modeline using an
	idle timer.
	(slime-repl-send-input): Make the `slime-repl-old-input' property
	cover the whole input (including newline) so that pressing RET on
	the end of an input line works.
	Use a unique integer as the value of this property to distinguish
	adjacent inputs.
	(slime-current-package): Deal with narrowing.

2004-08-01  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-allegro.lisp (swank-compile-string): Use a temporary file
	and set excl::*source-pathname* manually.  This way we can find
	the source buffer of functions compiled with C-c C-c.
	(call-with-temp-file, compile-from-temp-file): New functions.
	(list-callers, function-callers, in-constants-p)
	(map-function-constants): Implements list callers by groveling
	through the constants pools of named functions.

	* swank-lispworks.lisp: Minor refactoring.

2004-07-30  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-connection): Say "No default connection
	selected" if there are open connections but no default connection.
	(slime-tree-indent-item): Point wasn't updated correctly if the
	last line was empty.  Use insert-before-markers instead of insert
	to do it properly.
	(slime-draw-connection-list): Don't break if there is no default
	connection.

	* swank-cmucl.lisp (call-with-debugging-environment): Only handle
	DI::UNHANDLED-CONDITION not all DI:DEBUG-CONDITIONs.

	* swank-backend.lisp (sldb-condition): Show the original condition
	in the message.

2004-07-28  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-eval-feature-conditional): Treat uppercase
	operators NOT, AND, OR correctly.
	(sldb-find-buffer): Remove killed buffers.
	(sldb-quit): Raise an error if the RPC returns.
	(slime-expected-failures): Delete unused function.
	(complete-symbol): Test completion of
	swank::compile-file. LispWorks has extra completions for
	cl::compile-file.
	(arglist): Test arglist of method cl:class-name.  Add enough
	regexpery to pass the test in most implementations.

	* swank-sbcl.lisp (list-callers, list-callees): Implemented.

2004-07-26  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-first-change-hook): Add `save-match-data' to
	avoid breaking e.g. query-replace. Also added `save-excursion'
	just to be safe.

	* README: s/setup-slime/slime-setup/ in the .emacs snippet.

2004-07-23  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-set-state): Show the message in the modeline in
	the case where we aren't connected. Otherwise the "not connected"
	status is ignored.
	(slime-net-sentinel): Close the connection before changing the
	status message. The old behaviour of this combined with the old
	behaviour of `slime-set-state' could generally cause spurious
	errors after a connection was closed.

2004-07-22  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (carefully-find-package): Return *BUFFER-PACKAGE* if
	no other package can be found. This is reverting a previous change
	that broke completion in buffers with no known package.

	* slime.el (slime-maybe-start-lisp): Check that *inferior-lisp*
	exists /and/ has a running process. Fixes a startup problem if
	your inferior-lisp has died and you want to restart SLIME.

2004-07-21  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-sync-package-and-default-directory): Sync
	`default-directory' in the REPL buffer too.
	(slime-set-state): Convenience function for setting a connection's
	state-name and updating the modeline if appropriate. This function
	is called in the right places.
	(slime-to-lisp-filename): Use `expand-file-name'.

2004-07-20  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-repl-update-banner): Restore old behaviour of
	using an asynchronous evaluation to setup the REPL. This works
	around a problem I'd reintroduced where the first REPL command
	uses the wrong keymap.

2004-07-20  Andreas Fuchs  <asf@boinkor.net>

	* swank-sbcl.lisp (call-with-compilation-hooks): Trap and report
	errors that cause compilation to fail, e.g. read errors.

2004-07-19  Luke Gorrie  <luke@bluetail.com>

	* HACKING: Updated. Some notes about Emacs features.

	* slime.el: More major refactoring.
	Restructured and documented the networking and protocol code.
	(slime-rex-continuations): Now connection-local.

2004-07-18  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Major refactoring.
	Mostly resectioning and reordering definitions to try and improve
	readability.
	(slime-get-temp-buffer-create): New utility function to popup a
	temporary buffer that automatically has a binding on `q' to
	intelligently restore window configuration. Handy, but currently
	not applicable to all of our temporary buffers.
	(slime-with-chosen-connection): Removed this macro. Consequently
	the compilation commands no longer prompt for which connection to
	use when given a prefix argument. `slime-switch-to-output-buffer'
	still works like that, but for other cases I think the
	connection-list buffer is sufficient.
	(slime-eval-async): New arglist: (form &optional cont pkg). If the
	continuation is unspecified then the evaluation result is ignored,
	and if the package is unspecified then (slime-buffer-package) is
	used.
	(slime-eval): Package arg now defaults to (slime-buffer-package).
	(slime-current-package): New name for (slime-buffer-package). No
	more caching: returns the buffer-local `slime-buffer-package' if
	set, otherwise searches for an `in-package' form.
	A consequence of non-caching is that the package name doesn't
	appear in the modeline anymore. The simplification is worthwhile
	in my opinion.

2004-07-17  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-autodoc): If there is a global variable name at
	point then show its value.
	(slime-autodoc-cache-type): Cache type 'full is no longer
	supported.
	(slime-background-message): Truncate messages to fit on a single
	echo area line.
	(slime-repl-update-banner-p, slime-dont-prompt)
	(slime-swank-connection-retries): Removed these unused or unuseful
	configuration variables.
	Rearranged organised "customize" groups.

	* swank.lisp (variable-desc-for-echo-area): New function.
	(arglist-for-echo-area): Return nil if symbol can't be found.
	(close-connection): Close connection before printing error
	message. This avoids it getting lost in closed I/O redirection.

	* README, doc/slime.texi: Updated setup instructions.

2004-07-16  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-conservative-indentation): New variable. When
	true (the default) don't auto-learn indentation of def* and with-*
	macros. Set to nil if you want to learn them.
	(slime-handle-indentation-update): Use it.

	* swank.lisp (known-to-emacs-p): Removed filtering of def* and
	with-*. Now handled by Emacs.

	* slime.el (slime-interactive-eval): Changed display of results.
	By default the result goes to `slime-message', which leads either
	to echo area, temporary buffer, or typeout frame.
	With a prefix argument the result is printed to the REPL.
	This goes for all commands based on slime-interactive-eval, e.g.
	`C-x C-e' and `C-c M-:'.

2004-07-16  Peter Seibel  <peter@javamonkey.com>

	* slime.el (package-updating): Fixing this and other tests I broke
	with my change to how emacs keeps track of the package prompt
	string.
	(arglist): Fix an test failure under Allegro due to a slight
	difference in the way EXCL:ARGLIST returns arglist (no default
	values of &optional parameters)

2004-07-16  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (print-connection): print-function for connection
	objects. Dumping the indentation-cache was damned ugly with
	non-truncated lines (e.g. bug reports on slime-devel).

	* slime.el (slime-setup): New function for installing a
	lisp-mode-hook. You can call this from ~/.emacs to setup SLIME.
	Takes a `autodoc' keyword argument to enable
	slime-autodoc-mode. We can add more keywords in future.
	(slime-keys): Moved `slime-reindent-defun' from C-M-q to
	C-cM-q. This avoids overriding the standard binding of C-M-q to
	index-sexp.
	(slime-typeout-frame-properties): Removed some properties:
	`name', because it interacts badly with X properties, `left' and
	`top' because they don't put the frame anywhere terribly
	convenient, and (width . 40) because it makes the frame narrower
	than the usual word-wrapping width.

2004-07-14  Peter Seibel  <peter@javamonkey.com>

	* slime.el (slime-lisp-package-prompt-string): Separate SLIME's
	notion of package into two parts, an actual package name and the
	name used in the prompt since the latter isn't necessarily an
	actual package nickname any more.

2004-07-13  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-restart-inferior-lisp): Renamed shortcut to
	"restart-inferior-lisp" from "restart-lisp". The name better
	suggests what it does: kill *inferior-lisp* and rerun SLIME.

2004-07-13  Eric Blood  <eblood@winkywooster.org>

	(slime-inspector-next-inspectable-object): New inspector command
	to goto the next inspectable object (slot). Bound to TAB.

2004-07-13  Christophe Rhodes  <csr21@cam.ac.uk>

	* slime.el: add support for actionable references in the
	*slime-compiler-notes* buffer.
	(slime-merge-notes): merge references if applicable.
	(slime-compiler-notes-mode-map): use new functions defaulting to
	show-details, but overrideable by text properties.
	(slime-tree-default-printer): destroy generality by assuming a
	tree of conditions, and insert references if applicable.
	(sldb-format-reference-source): add :amop

	* swank-sbcl.lisp (signal-compiler-condition,
	brief-compiler-message-for-emacs,
	long-compiler-message-for-emacs): handle references in compiler
	conditions.

	* swank.lisp (make-compiler-note): propagate references.

	* swank-backend.lisp (compiler-condition): add references slot.

2004-07-12  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-easy-menu): Added "Apropos all" menu item.
	(slime-restart-lisp): Added `restart-lisp' shortcut. Doesn't do
	the right thing if you have multiple Lisps up.

	* swank.lisp: Added some docstrings.
	Rearranged completion code and somewhat SLDB trying to layout
	functions above their subfunctions in a tree-like way.
	(slime-protocol-error): Renamed from slime-read-error.
	(carefully-find-package): Now returns NIL if package can't be
	determined, rather than *BUFFER-PACKAGE*. Correct? I didn't see
	why it should return *BUFFER-PACKAGE*.
	(xref): Find symbol in *BUFFER-PACKAGE*.

2004-07-09  Peter Seibel  <peter@javamonkey.com>

	* swank.lisp (package-string-for-prompt): Change the way package
	name in prompt is computed. N.B. after this change the name
	displayed will not necsarily be either an actual name or nickname
	of the package: if the name contains dots by default the prompt
	will only display the last element, i.e. COM.GIGAMONKEYS.SPAM will
	be shown as SPAM. This change also makes CL-USER the canonical
	name for COMMON-LISP-USER even in implementations that provide a
	shorter nickname such as USER.

2004-07-09  Christophe Rhodes  <csr21@cam.ac.uk>

	* slime.el (sldb-lookup-reference): substitute hyphens for spaces
	in the url.

2004-07-07  Thomas Schilling  <tjs_ng@yahoo.de>

	* swank.lisp (arglist-for-insertion): Changed formatting to use
	arglist-to-string. That results in proper cases for
	slime-insert-arglist.

2004-07-07  Luke Gorrie  <luke@bluetail.com>

	* swank-loader.lisp (*lisp-name*): Include the version number in
	ACL.

	* slime.el (slime-alistify): Preserve order. This keeps the
	*compiler-notes* right. Pointed out by Christophe Rhodes.
	(slime-repl-update-banner-p): Renamed from slime-reply-..
	(slime-changelog-date): Reintroduced for informational purposes.
	(slime-repl-update-banner): Show ChangeLog date in the animation.
	(slime-space): Do arglist lookup before inserting the
	space. Otherwise we get a funky race condition: entering the space
	may trigger `first-change-hook', which would send an async
	notification to Lisp, which would put us in the 'busy' state and
	thus we wouldn't lookup the arglist! Detective work by Edi Weitz.
	(sldb-prune-initial-frames): More regexp fudgery :-(.
	(read-directory-name): Use `file-name-as-directory' to ensure we
	have the trailing / on the directory name.
	(byte-compile-warnings): Bye-compile slime-alistify. Its inputs
	can be pretty big.

2004-07-04  Luke Gorrie  <luke@bluetail.com>

	* slime.el, swank-backend.lisp, swank.lisp: Added a new backend
	function `buffer-first-change' which is called via Emacs's
	`first-change-hook' in slime-mode buffers. This gives Lisp a
	chance to do something with source files before you change them on
	disk.

	* swank-cmucl.lisp (buffer-first-change): Suck the source file
	into the cache unless already present. This is for M-. to increase
	the chances of our having a copy of the sources corresponding with
	the loaded code. Should help with the case where a user edits and
	saves a file (without recompiling it) and then M-.'s for one of
	its definitions.

	* swank-allegro.lisp (make-process/inherit): Changed reader
	conditionals to use fwrappers for #+(version>= 6).

	* swank-backend.lisp (make-stream-interactive): This backend
	function is called with each stream that will be used for
	user-interaction, i.e. the redirected stdio streams. Can be used
	to setup special output-flushing or similar.

	* swank.lisp (open-streams): Call make-stream-interactive on the
	redirected io streams.

	* swank-allegro.lisp (make-stream-interactive): Set
	interactive-stream-p slot on the stream to make it auto-flush.
	(*swank-thread*, *inherited-bindings*): New variables.
	(spawn): Bind *swank-thread* to T.
	(make-process/inherit): Fwrapper (advice) for
	mp:make-process. When *swank-thread* is T then make the new thread
	inherit "sliminess": debugger hook, I/O streams, and also
	*swank-thread* so that its children will inherit too.

2004-07-03  Luke Gorrie  <luke@bluetail.com>

	* hyperspec.el (common-lisp-hyperspec-section-4.0): Bugfix from
	Lennart Staflin.

	* slime.el (slime-repl-clear-output): Avoid clearing the previous
	REPL expression too. Patch from Andras Simon.

	* swank-backend.lisp (definterface): Don't use
	NO-APPLICABLE-METHOD for default methods. Instead just define them
	as regular methods with all argument types being
	T. Defimplementation will then replace them by using the same
	signature. N-A-M was a stupid idea!

2004-07-02  Brian Downing  <bdowning@lavos.net>

	* slime.el (slime-reindent-defun): Added a check for (boundp
	'slime-repl-input-start-mark) before checking the variable, as
	XEmacs leaves variables unbound when `make-variable-buffer-local'
	is run, while GNU Emacs binds them to NIL.

2004-07-02  Martin Simmons <martin@xanalys.com>

	* swank-lispworks.lisp (dspec-stream-position,
	make-dspec-location): Fix typo in features for LW 4.1 and 4.2.

2004-07-01  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-lispworks.lisp (frame-actual-args): Bind
	*break-on-signals* to nil and special case &rest, &optional, and
	&key.

2004-07-01  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-lookup-reference): Preserve case in SBCL node
	names. Previously they were downcased, but the HTML manual's
	filenames seem to have changed.

	* NEWS: Added security note about the TCP server.
	Added notes for ACL and ABCL.

	* doc/slime.texi: General updatings for an alpha release.

2004-06-30  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-display-compilation-output): New customizable
	variable.

	* swank.lisp: Minor cleanups.
	(find-symbol-designator, find-symbol-or-lose)
	(case-convert-input): Deleted.  Replaced with calls to
	parse-symbol{-or-lose}.

	* swank-lispworks.lisp (describe-symbol-for-emacs): Include
	information about setf-functions.
	(emacs-connected): Add a default method to
	env-internals:environment-display-debugger.

2004-06-30  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-read-port-and-connect-to-running-swank)
	(slime-connect, slime-open-stream-to-lisp): Replace "localhost"
	with "127.0.0.1". This is believed to avoid unwanted DNS lookups
	on certain operating systems. The lookups can become crippling if
	the DNS server isn't available.
	(line-beginning-position, line-end-position): Simple bugfix
	suggested by Richard Klinda.

	* swank-sbcl.lisp (preferred-communication-style): Choose
	:fd-handler instead of :sigio when threads aren't available. A lot
	of people seem to have had problems with :sigio on SBCL.

2004-06-30  Luke Gorrie  <luke@bluetail.com>

	* NEWS: Wrote preliminary release notes for alpha-1.

2004-06-29  Luke Gorrie  <luke@bluetail.com>

	* mkdist.sh: New shell script for creating a tarball for
	distribution.

2004-06-29  Bill Clementson  <Bill_Clementson@peoplesoft.com>

	* slime.el (slime-who-map): Add extra bindings for the XREF
	commands as with the documentation commands. Now `C-c C-w C-c' is
	`slime-who-calls' in addition to `C-c C-w c', etc.

2004-06-29  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-prune-initial-frames): Tweaked regexp for
	matching SWANK's own stack frames for effectiveness in SBCL.
	(slime-keys): Shadow remaining inf-lisp keys (C-c C-a, C-c C-v)
	with a null `slime-nop' command until we put them to a real use.

	* swank.lisp (open-streams): Renamed the restart around reads from
	the user-input stream from ABORT to ABORT-READ. Invoking this
	restart seems kinda dangerous, so better for 'a' in SLDB not to do
	so.

2004-06-28  Thomas F. Burdick  <tfb@OCF.Berkeley.EDU>

	* swank.lisp (inspector-nth-part):
	* slime.el (slime-inspector-copy-down, slime-inspector-mode-map):
	Added copy-down command (M-RET) to easily move an object from the
	inspector to the repl.

2004-06-28  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-doc-map): New keymap for documentation
	commands. These all use the `C-c C-d' prefix, followed by:
	  a - apropos
	  p - apropos-package
	  z - apropos-all
	  d - describe-symbol
	  f - describe-function
	  h - hyperspec lookup
	  ~ - hyperspec lookup of a format character
	The final keystroke is bound both unmodified and with control, so
	both `C-c C-d a' and `C-c C-d C-a' will make an apropos
	search. The exception is hyperspec-lookup, because it's nice to
	leave C-h unbound so that `C-c C-d C-h' will summarise the
	documentation bindings.

2004-06-28  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-allegro.lisp (nth-frame): Skip frames where
	frame-visible-p is false.

	* slime.el (slime-buffer-package): Return the cached package if we
	can't find something more sensible; this reverts a previous
	change.  The Lisp side will now fall back to an existing package
	if the one supplied by Emacs doesn't exist.  Using the cached
	version is also necessary for some commands in the apropos buffer.
	(sldb-insert-frame): Set the default-action property; pressing RET
	on frame lines now shows/hides details.
	(sldb-toggle-details): Preserve the current column.
	(slime-inspector-buffer, slime-saved-window-config)
	(slime-inspector-quit): Save and restore the window configuration.
	(slime-highlight-suppressed-forms, slime-search-suppressed-forms):
	Display expressions with reader conditionals (#+/#-) in
	font-lock-comment-face if the test is false.  Not implemented for
	XEmacs.
	(repl-return): New test.

2004-06-28  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Events in the *slime-events* buffer are now exact
	on-the-wire messages, without including e.g. Elisp continuation
	functions. This is easier for debugging I think.

	* swank-allegro.lisp (compute-backtrace): Only include frames
	satisfying `debugger:frame-visible-p'. I did this as a lame
	workaround for a problem where `output-frame' was segfaulting on
	certain frames, and those frames happened not to be visible-p. I
	don't know if it really fixes anything.

	* hyperspec.el (common-lisp-hyperspec-format): This command now
	works at the end of the buffer, fixed `char-after' usage as
	suggested by Johan Bockgård.

2004-06-28  Christophe Rhodes  <csr21@cam.ac.uk>

	* hyperspec.el: add support for issue cross-reference lookups,
	strongly inspired by hyperspec symbol lookup.
	(common-lisp-hyperspec-issuex-table,
	common-lisp-hyperspec-issuex-symbols): new variables
	(common-lisp-issuex): new function

	* slime.el (sldb-format-reference-node, sldb-lookup-reference):
	(sldb-reference-properties): use new support for issue lookups
	to support :ansi-cl :issue reference types.

	* hyperspec.el: add support for glossary lookups.
	(common-lisp-glossary-fun): new variable
	(common-lisp-glossary-4.0, common-lisp-glossary-6.0): new functions

	* slime.el (sldb-format-reference-node, sldb-lookup-reference):
	(sldb-reference-properties): use new support for glossary lookupts
	to support :ansi-cl :glossary reference types.

2004-06-27  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* doc/slime.texi: Remove macros from chapter and section headings
	to avoid texi2pdf breakage.

	* swank-source-path-parser.lisp (cmucl-style-get-macro-character):
	Add tests for #\space and #\\.  Suggested by Christophe Rhodes.

	* swank-sbcl.lisp, swank-openmcl.lisp, swank-lispworks.lisp,
	swank-cmucl.lisp, swank-backend.lisp, swank-allegro.lisp,
	swank-abcl.lisp (thread-id, find-thread): New backend functions.

	* swank.lisp (dispatch-event): Quitting from the debugger was
	seriously broken.  Fix it.  Move generation of thread ids to the
	backends.
	(encode-message, send-to-socket-io): Use WITHOUT-INTERRUPTS in
	send-to-socket-io.  The multithreaded version of encode-message
	doesn't need it.
	(nth-thread): Renamed from lookup-thread-by-id.
	(debug-nth-thread): Renamed from debug-thread-by-id:
	(kill-nth-thread): Renamed from kill-thread-by-id.

	* slime.el (sldb-get-buffer): Add support for sldb buffers for
	multiple threads.

2004-06-25  Thomas F. Burdick  <tfb@OCF.Berkeley.EDU>

	* swank-sbcl.lisp (call-with-syntax-hooks, with-debootstrapping):
	Preserve compatability with fairly recent SBCLs by checking for
	the presense of the debootstrapping facilities at macroexpansion
	time.

	* slime.el (sldb-insert-condition): Initialize sldb-default-action
	so that pressing RET inspects the condition.

2004-06-25  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-repl-insert-prompt): Set defun-prompt-regexp.
	beginning-of-defun can be very slow in the repl buffer if the
	defun-prompt-regexp is not set.
	(sldb-insert-locals): Initialize sldb-default-action.
	(sldb-var-number-at-point, sldb-inspect-var): New function.

	* swank.lisp (inspect-frame-var): New function.

	* swank-backend, swank-cmucl.lisp, swank-sbcl.lisp,
	swank-allegro.lisp, swank-lispworks.lisp, swank-clisp.lisp
	(frame-var-value): New backend function.

2004-06-24  Christophe Rhodes  <csr21@cam.ac.uk>

	* slime.el (sldb-format-reference-node): fix for when `what' is a
	list.
	(sldb-lookup-reference,sldb-reference-properties): support
	:ansi-cl :section reference types.

	* hyperspec.el (common-lisp-hyperspec-6.0): generalize to work
	with section numbers lower than 10.

2004-06-24  Brian Downing  <bdowning@lavos.net>

	* slime.el (slime-repl-send-input): Fixed a subtle difference in
	sending input to the Lisp introduced in 1.316.  The newline was
	not getting sent, resulting in the Lisp constantly asking for more
	read data.  I believe the code has been adjusted to behave the
	same as 1.315 with regard to sending newlines.
	Also adjusted the `slime-repl-old-input' text property to end just
	before the newline, not just after.  This causes a gap between
	inputs even if no Lisp output appeared in between, so that putting
	point on an old line and hitting RET will only call up that line,
	and hitting RET in the middle of the current line will send it and
	not bring up a confusing combination of all previous input.
	Many thanks to Loyd Fueston for pinpointing the date and exact
	patch for when this problem was introduced.

2004-06-23  Brian Downing  <bdowning@lavos.net>

	* slime.el: Re-added most of Luke's patches from yesterday.  It
	has the shortened names, uses markers instead of stored `(point)'
	values, and `slime-fuzzy-complete-symbol' is an option for
	`slime-complete-symbol-function'.
	It still string compares the target buffer instead of using
	`(buffer-modified-tick)'.
	I left the `C-c M-i' keybinding in, as it allows use of the
	regular completion as well.  If there's an objection to this it
	can be removed.
	`window-configuration-change-hook' is used if the variable is
	present, and ignored it not.  This neatly sidesteps its absence in
	XEmacs while not killing the functionality for GNU Emacs.

	* doc/slime.texi: Added a command entry and short description for
	`C-c M-I, slime-fuzzy-complete-symbol', and added its existence to
	the `slime-complete-symbol-function' documentation.

2004-06-22  Luke Gorrie  <luke@bluetail.com>

	* doc/slime.texi: Noted ABCL support.

	* slime.el: Backed out all of my changes to fuzzy completion. I
	was too hasty and didn't do good things. Now it's back in pristine
	state from Brian's patch -- use `C-c M-i' to fuzzy-complete.

	* doc/Makefile (contributors.texi): The contributors list in the
	manual is now sorted by most number of ChangeLog entries. Patch
	from Michael Weber.

	* slime.el: Some minor hacking to fuzzy completion:
	Use the shorter `slime-fuzzy-' symbol prefix.
	Use markers instead of numbers to remember where the completion is
	being done. This way they are self-updating.
	Use `buffer-modified-tick' to detect modifications instead of text
	comparison.
	Always restore window configuration when a completion is
	chosen. For this completion style I think this will work okay
	[famous last words], and the existing code wasn't
	XEmacs-compatible for want of window-configuration-change-hook.
	Now there is no separate keybinding for fuzzy completion, but it's
	included as a customize option for `slime-complete-symbol-function'

2004-06-22  Brian Downing  <bdowning@lavos.net>

	* slime.el, swank.lisp: Added "fuzzy completion."

2004-06-22  Matthew Danish  <mdanish@andrew.cmu.edu>

	* swank-backend.lisp (unbound-slot-filler): New structure for
	representing an unbound slot in the inspector functions.

	* swank.lisp, swank-allegro.lisp: Use it.

2004-06-22  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-output-filter): Choose connection based on
	process-buffer, not current buffer. This fixes a bug where output
	from multiple Lisp sessions could get mixed up.
	(slime-kill-all-buffers): Include all *inferior-lisp*[<n>] buffers.
	Split the customize settings into more subgroups.

	* swank.lisp (prefixed-var): Intern *REAL-STANDARD-INPUT* etc in
	the SWANK package instead of the COMMON-LISP package.

2004-06-21  Luke Gorrie  <luke@bluetail.com>

	* swank-loader.lisp (*lisp-name*): Add version number to
	Lispwork's fasl directory. We should do this for ACL and OpenMCL
	too, but for some reason my ACL 5.0 gets an error when trying to
	create a directory with a version number in its name, and I don't
	have OpenMCL to test with.

	* swank-backend.lisp, swank.lisp (add-hook, run-hook): Moved the
	hook mechanism and all hooks to swank.lisp (from
	swank-backend.lisp). There is no compelling use for the hooks in
	backends yet and I want to pass swank.lisp-internal data
	structures in the existing hooks.
	(notify-backend-of-connection): Call `emacs-connected' with the
	user-io stream for its argument. Should fix previous breakage
	where the connection structure was passed instead.
	(*globally-redirect-io*): New configurable: when true the standard
	streams are globally redirected to Emacs. That way even
	e.g. SERVE-EVENT handlers will print to Emacs. Currently does not
	handle standard input -- that is trickier since the Lisp's native
	REPL can be trying to read from that.

	* slime.el (slime-complete-maybe-restore-window-configuration):
	Only restore the window configuration if the completions buffer is
	currently visible in the window that we popped it up in.
	(slime-complete-maybe-save-window-configuration): Don't save the
	window configuration if the completions buffer is already visible.
	(slime-repl-return): Make sure the newline goes at the end of the
	input, not at point.
	(slime-complete-restore-window-configuration): Wrap the
	`set-window-configuration' call in (run-at-time 0 ..). XEmacs does
	not allow us to set the window configuration from inside
	pre-command-hook.

2004-06-20  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-sbcl.lisp (emacs-connected): Set *invoke-debugger-hook* to
	our debugger hook.  Not optimal, but at least BREAK will then
	invoke our debugger.
	(*trap-load-time-warnings*): New variable.  If it is true,
	conditions, most notably redefinition warnings, signalled at load
	time are not trapped.
	(swank-compile-file, swank-compile-string): Use it.

	* swank.lisp (guess-buffer-package): Don't signal a continuable
	error if the package doesn't exists; that's too annoying.

	* slime.el: Fix outline structure.
        (slime-maybe-list-compiler-notes): Fix thinko.
	(break): New test.  Reorganize the test-suite a bit to support
	"expected failures".
	(slime-eval-feature-conditional, slime-to-feature-keyword): Add a
	?: to the symbol-name if needed.

2004-06-20  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (changelog-date): Removed unneeded function.
	(connection-info): No more version field in result.

	* slime.el: Audited to remove namespace slipups. Tracking a really
	horrible clashing-with-some-user-configuration bug and want to
	eliminate potential symbol conflicts.
	(sldb-get-buffer): Renamed from `get-sldb-buffer'.
	(slime-emacs-20-p): Renamed from `emacs-20-p'.
	(slime-defun-if-undefined): Renamed from `defun-if-undefined'.
	(slime-isearch): Small bugfix that could cause M-. to go to the
	wrong place in CMUCL.
	(slime-changelog-date, slime-check-protocol-version): Removed
	unneeded functions.

	* swank-backend.lisp (add-hook, run-hook): Added an Emacs-like
	hook mechanism.  The hope is that this will make some sections of
	the code more self-describing by showing where they hook in.
	(*new-connection-hook*): Hook run when a new connection is
	established. Initialized to '(swank-backend:emacs-connected).
	(*pre-reply-hook*): Hook run before sending a reply to Emacs.

	* swank.lisp: Added some comments and docstrings.
	(package-external-symbols): Removed unused function.
	(serve-connection): Call *new-connection-hook*.
	(eval-for-emacs): Call *pre-reply-hook*.
	(sync-features-to-emacs, sync-indentation-to-emacs): Added to
	*pre-reply-hook*.
	(cl-package, keyword-package): Now defconstant instead of
	defvar. Removed the *'s accordingly.

	* slime.el (slime-abort-connection): Renamed from
	`slime-connection-abort'. The new name is easier to find with
	completion.

	* swank-sbcl.lisp: Change sb-posix:: to sb-posix:

2004-06-19  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (known-to-emacs-p): Bugfix. Indentation-updates was
	broken.

2004-06-18  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-buffer-package): If DONT-CACHE is true and no
	package name can be found, then default to "COMMON-LISP-USER."
	Previously we just kept using the cached version, but that could
	lead to error-after-error if it was incorrect.

	* swank.lisp (throw-to-toplevel): If our top-level catcher isn't
	on the stack (i.e. we're using the debugger from outside an RPC)
	then ABORT instead. That makes 'q' DWIM in SLDB.

2004-06-18  Matthew Danish  <mdanish@andrew.cmu.edu>

	* swank-allegro.lisp (frame-source-location-for-emacs):
	Implemented.

2004-06-18  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-repl-return): If the user presses return on old
	REPL input then take it and insert it as the current input.
	Signal an error if the point is not on any input.
	(slime-preserve-zmacs-region): Function to ensure that the current
	command doesn't deactivate zmacs-region (XEmacs only).
	(slime-repl-bol, slime-repl-eol): Use it.
	(slime-kill-all-buffers): Changed buffer-name regexps for XEmacs
	compatibility. The ",quit" shortcut now works in XEmacs.
	(slime-display-message): Fixed call to `slime-typeout-message'
	to handle formatting characters. Avoids errors on certain messages.
	(slime-list-compiler-notes): Save the window configuration
	earlier. This fixes an error under XEmacs when dismissing the
	notes buffer.
	(slime-recenter-window): Avoid moving the point. This keeps the
	point in the right place when showing debugger-frame locations in
	Emacs 21.

2004-06-17  Luke Gorrie  <luke@bluetail.com>

	* swank-loader.lisp (binary-pathname): Place fasl files under
	~/.slime/fasl/ instead of the SLIME installation directory. The
	installation directory can now be read-only.
	(binary-pathname, user-init-file): Removed Win32
	conditionalization. The init file is now called ~/.swank.lisp
	instead of ~/_swank.lsp.

	* swank-lispworks.lisp (with-fairly-standard-io-syntax): New
	macro. Like with-standard-io-syntax, but keeps the existing values
	of *package* and *readtable*.
	(dspec-stream-position): Use it.
	(quit-lisp): Implemented.

2004-06-16  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-set-default-directory): Don't call
	slime-repl-update-banner in Emacs 20.
	(slime-show-source-location, slime-recenter-window): Use
	set-window-start instead of recenter; this avoids flickering.
	(sldb-list-locals): Don't forget about slime-current-thread in the
	temporary buffer.  (Fixes bug reported by Mike Beedle.)
	(sldb-step): Re-enabled.  The CMUCL backend has rudimentary support
	for stepping.

	* swank.lisp (*readtable-alist*): Call backend function for
	initialization.
	(eval-for-emacs, guess-buffer-package): Signal a continuable error
	if a package name was supplied but no such package exists.  Not
	sure if this is better than what we did before (i.e. silently use
	the current package).

	* swank-cmucl.lisp (default-directory): Add implementation.
	(sldb-step): Uncomment it and remove references to
	*swank-debugger-condition*.

	* swank-backend.lisp (sldb-step, default-readtable-alist): New
	backend functions.
	(emacs-connected): Pass the redirected stream as argument, so that
	the OpenMCL backend can add it to CCL::*AUTO-FLUSH-STREAMS*.

	* swank-sbcl.lisp (default-readtable-alist): Implement it.

	* swank-loader.lisp: Move readtable-alist initialization to
	swank-sbcl.lisp.

	* swank-allegro.lisp (default-directory, call-with-syntax-hooks):
	Add implementations as workarounds for ACL5 bugs.

2004-06-16  Lawrence Mitchell  <wence@gmx.li>

	* slime.el (slime-maybe-rearrange-inferior-lisp): Call
	`generate-new-buffer-name' manually, rather than relying on the
	UNIQUE argument to `rename-buffer' to do so.

2004-06-16  Frederic Brunel  <frederic.brunel@in-fusio.com>

	* slime.el (slime-startup-animation): Use defcustom to declare the
	variable.
	(slime-enable-startup-animation-p): Deleted.

2004-06-16  Robert Lehr  <bozzio@the-lehrs.com>

	* slime.el (slime-backend): This variable can now be set to an
	absolute filename.

2004-06-15  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-compile-file): Just prompt for saving the
	current file instead of calling `save-some-buffers'. Based on a
	patch from Brian Downing.

2004-06-12  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* wank-allegro.lisp (format-sldb-condition, condition-references):
	Add workarounds for buggy no-applicable-method.

	* swank.lisp (parse-symbol, parse-package): Handle reader errors.

	* swank-openmcl.lisp (send, receive): Ensure that messages are
	never nil.

2004-06-10  Christophe Rhodes <csr21@cam.ac.uk>

	* swank-sbcl.lisp (call-with-syntax-hooks): Add hooks to fix
	"SB!"-style package names.
	(shebang-readtable): Return a readtable with readermacros needed
	to parse SBCL sources.

	* swank.lisp (with-buffer-syntax): New macro.  This should be used
	for code which needs to READ code from Emacs buffers.  *package*
	and *readtable* are bound suitable values.
	(to-string, format-values-for-echo-area, interactive-eval)
	(eval-region, interactive-eval-region, re-evaluate-defvar)
	(swank-pprint, pprint-eval, listener-eval)
	(compile-string-for-emacs, disassemble-symbol, describe-to-string)
	(describe-symbol, describe-function)
	(describe-definition-for-emacs)
	(documentation-symbol, init-inspector, inspect-nth-part)
	(inspector-pop, inspector-next, describe-inspectee)
	(inspect-current-condition): Use it.

2004-06-10  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-loader.lisp: Initialize swank::*readtable-alist* for SBCL.

	* swank-backend.lisp (default-directory, call-with-syntax-hooks):
	New functions.

	* swank.lisp (*readtable-alist*): New configurable.  The keys are
	package name and the values readtables.  The readtable will be
	used to READ code originating from Emacs buffers in the associated
	slime-buffer-package.
	(drop-thread): Simplified.
	(*buffer-readtable*): New variable.
	(parse-package): New function.
	(parse-string): Renamed from symbol-from-string.  Make it case
	insensitive.
	(eval-for-emacs): Initialize the *buffer-readtable*.
	(symbol-indentation): Don't consider symbols in the CL package.
	Emacs already knows how to indent them.
	(compile-file-if-needed): Used for REPL shortcut
	'compile-and-load'.

	* slime.el (pwd): Re-add REPL shortcut.
	(slime-repl-push-directory, slime-repl-compile-and-load): Simplified.

2004-06-10  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-step): Command is disabled because the function
	`swank:sldb-step' that it calls doesn't exist. I don't see any
	stepping code in our backends.

2004-06-09  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-goto-location-position) [:function-name]: The
	function name can also occur after a ?(, not only after
	whitespace.

	* (slime-init-output-buffer): Initialize the package stack.
	Reported by Rui Patrocínio.

	* (slime-completions): Make it consistent with
	slime-simple-completions. The second argument was never supplied.
	Reported by Rui Patrocínio.

2004-06-09  Eric Blood <eblood@winkywooster.org>

	* slime.el (slime-indent-and-complete-symbol): Renamed from
	slime-repl-indent-and-complete-symbol.

	(slime-typeout-frame-properties): Add more default options for the
	typeout frame--specifically it now has a default width, and moves
	the typeout frame to the upper right.

2004-06-09  Andras Simon <andras@renyi.hu>

	* swank-abcl.lisp: New backend for Armed Bear Common Lisp.

	* swank-loader.lisp: Add ABCL support.

2004-06-09  Martin Simmons <martin@xanalys.com>

	* swank-lispworks.lisp (dspec-stream-position): New function to
	make source location work for anything complicated e.g. methods.
	(with-swank-compilation-unit): Refactoring.
	(who-macroexpands): Implemented.
	(list-callers): Implemented.

	* swank-backend.lisp (network-error): Inherit from simple-error to
	get correct initargs.

2004-06-09  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-insert-references): Added support for hyperlinked
	references as part of conditions being debugged. This is a new
	feature in SBCL to reference appropriate sections of their manual
	or CLHS from condition objects. The references are clickable.

	* swank-backend.lisp (format-sldb-condition): New backend function
	to format conditions for SLDB.
	(condition-references): New function to return a list of
	documentation references associated with a condition.

	* swank.lisp (debugger-condition-for-emacs): Call the above
	backend functions to add a `references' list for Emacs.

	* swank-sbcl.lisp (format-sldb-condition, condition-references):
	Implemented. Requires a recent (latest?) SBCL release.

2004-06-08  Luke Gorrie  <luke@bluetail.com>

	* swank-cmucl.lisp (close-socket): Remove any SERVE-EVENT handlers
	for the socket's file descriptor.

	* swank-sbcl.lisp (close-socket): Same fix.

2004-06-07  Luke Gorrie  <luke@bluetail.com>

	* swank-cmucl.lisp: Minor refactorings.

2004-06-07  Edi Weitz  <edi@agharta.de>

	* swank-allegro.lisp (call-with-compilation-hooks): Implemented.
	Wrap IMPORT call in EVAL-WHEN.

	* swank.lisp, swank-backend.lisp: Wrap EXPORT calls in
	EVAL-WHEN. Fixes many warnings in ACL.

2004-05-25  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-kill-without-query-p): Default to T.
	(sldb-highlight): Variable to control face-based highlighting of
	SLDB locations. (In Emacs21 the point is visible even in unselected
	windows, which is sufficient for me.)
	(sldb-show-location-recenter-arg): Argument to `recenter' when
	showing SLDB locations. Default to nil, i.e. location appears in
	the middle of the window.

2004-05-24  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-input-complete-p): Return nil for unbalanced
	sexps starting with quote ?', backquote ?`, or hash ?#.  C-j can
	be used for more complicated cases.

2004-05-22  Marco Baringer  <mb@bese.it>

	* slime.el (slime-repl-sayoonara): Added "quit" as an alias for
	sayoonara.

2004-05-22  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (arglist): Catch (reader) errors in
	READ-ARGLIST.

	* swank-allegro.lisp (fspec-primary-name): New function.
	(find-fspec-location): Use it, if the start position cannot be
	found.

	* slime.el (slime-pprint-event): New function.
	(slime-log-event): Use it.
	(slime-reindent-defun): Indent the form after point, if point is
	in the first column an immediately before a #\(.

2004-05-21  Bill Clementson  <Bill_Clementson@peoplesoft.com>

	* slime.el (slime-switch-to-output-buffer): Use "P" as interactive
	spec.

2004-05-21  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-switch-to-output-buffer): Override the
	prefix-arg if we are called non-interactively.
	(slime-repl-current-input): Don't add newlines.
	(slime-repl-return): Send input if we are in read-mode also if it
	isn't a complete expression.
	(repl-read-lines): New test case.
	(slime-enable-startup-animation-p): New configurable.
	(slime-repl-update-banner): Use it.
	(slime-hide-inferior-lisp-buffer): New function. Reuse the
	*inferior-lisp* buffer window for the SLIME REPL.

	* swank-allegro.lisp (find-fspec-location): Better handling of
	methods.  From Bill Clementson.

2004-05-17  Luke Gorrie  <luke@bluetail.com>

	* xref.lisp, swank-clisp.lisp: Renamed XREF package to PXREF (P
	for portable). This makes it possible to load the package in
	e.g. CMUCL, which is nice because it's a good package.

	* swank-cmucl.lisp: Some refactoring and high-level
	commenting. Mostly just trying to organise things into fairly
	self-contained sections (my new hobby, sad I know!)

	* slime.el: Added `C-c C-e' as an alternative binding for
	`slime-interactive-eval' (usually `C-c :'). This seems slightly
	more convenient, and has the added bonus of clobbering an unwanted
	`inf-lisp' binding.

2004-05-14  Marco Baringer <mb@bese.it>

	* slime.el (slime-with-output-to-temp-buffer): Now takes a
	package arg specifying what slime-buffer-package should be in the
	generated buffer.
	(slime-show-description): actually pass the package arg.
	(slime-show-apropos): pass the package arg to
	slime-with-output-to-temp-buffer.
	(slime-list-repl-shortcuts): pass a package arg.

2004-05-12  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-openmcl.lisp: Fixes to support openmcl 0.14.2 changes in
	backtrace protocol, from Gary Byers.
	- Replace string "tcr" to "context".
	- Change the call to %current-tcr in map-backtrace
	  to get-backtrace-context,
	defined so as to be back compatible with 0.14.1.
	- Change the call to %catch-top to explicitly use %current-tcr
	instead of the passed in tcr-which-is-now-called-context.

	Users of map-backtrace (outside of slime code) note: The tcr
	position in the function call is now occupied by the backtrace
	"context" which is always nil.  If you really need the tcr then
	you need to call %current-tcr yourself now.

	Gary comments: The part that's a little hard to document about
	the new "context" stuff - used to walk the stacks of thread A from
	thread B - is that thread B has to be aware of when a context
	becomes invalid (a context describing part of thread A's stack is
	valid while thread A's sitting in a break loop and becomes invalid
	as soon as it exits that break loop.)  A thread sort of announces
	when a context becomes valid and when it becomes invalid; whether
	and how SWANK could hook into that isn't yet clear.

	* swank-openmcl.lisp: Minor changes to backtrace display:
	Anonymous functions names in function position surrounded by
	#<>. Use prin1 instead of princ to print function arguments (so
	strings have "s around them).  prefix symbol and list arguments by
	"'" to make them more look like a valid function call. Let me know
	if you don't like this...

2004-05-12  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Fixes for outline-mode in *slime-events* from Edi
	Weitz.

2004-05-11  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-events-buffer): Disable outline-mode by default.
	(slime-inhibit-ouline-mode-in-events-buffer): New variable.
	(slime-expected-failures): Reduce the number for SBCL.

	* swank-sbcl.lisp (resolve-note-location): Resolve the location if
	we are called by swank-compile-string.  The pathname argument is
	never :stream in SBCL, so the method written for CMUCL was never
	called.

2004-05-10  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (from-string): Bind *READ-SUPPRESS* to NIL.
	(swank-compiler): Bind a restart to abort compilation but still
	report the compiler messages already trapped.
	(string-to-package-designator): Function that uses READ to
	case-convert package names.
	(apropos-list-for-emacs): Use it.

	* slime.el (slime-eval-with-transcript): Don't print the "=>"
	prefix in messages showing evaluation results. It mucks up
	alignment in multi-line messages.
	(sldb-eval-in-frame): Don't print "==>" prefix on evaluation
	results, for the same reason.
	(slime-show-source-location): Move the point to the source
	location in addition to highlighting the matching parens.

2004-05-08  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (find-definitions): Add support for variables
	and constants.

2004-05-07  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-clisp.lisp (compiler-note-location): Use make-location to
	instead of `(:location ...). This initializes the new hint slot
	automatically.

2004-05-07  Barry Fishman <barry_fishman@att.net>

	* swank.lisp (prin1-to-string-for-emacs, arglist-to-string): CVS
	CLISP prints NIL as |COMMON-LISP|::|NIL| if *print-readably* is
	true.  Set *print-readably* to nil for a more Emacs friendly
	printer syntax.

2004-05-06  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-maybe-list-compiler-notes): Display the notes
	listing after C-c C-c only if there are no annotations in the
	buffer.  CMUCL creates usually one warning with an error location
	and an almost redundant warning without at the end of the
	compilation unit.  Don't display the listing in this common case.

	(slime-reindent-defun): Pass nil as the third arument to
	indent-region.

2004-05-06  Marco Baringer <mb@bese.it>

	* slime.el (slime-repl-sayoonara): Don't attempt to quit the lisp
	if we're not connected.

	* swank-openmcl.lisp (*buffer-offset*, *buffer-name*): Supply
	default values. This avoids unbound value errors when compiling an
	asdf system signals errors.

2004-05-04  Alan Shutko  <ats@acm.org>

	* slime.el (slime-compiler-notes-show-details/mouse): New command.
	(slime-compiler-notes-mode-map): Use it.

2004-05-04  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (arglist): Handle byte-code functions better.
	We don't know much about the actual argument list, only the number
	of arguments.  Return at least something mildly interesting like
	 (arg0 arg1 &optional arg2 ...)
	(function-location): Special-case byte-code functions.

	* swank-backend.lisp (with-struct): New macro.

2004-05-04  Thomas F. Burdick  <tfb@OCF.Berkeley.EDU>

	* slime.el (slime-reindent-defun): New command on C-M-q. Reindent
	the current Lisp defun after trying to close any unmatched
	parenthesis. If used within a comment it just calls fill-paragraph.

2004-05-04  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-goto-location-position): Regexp fix.
	(slime-reindent-defun): New command on M-q. Reindent the current
	Lisp defun after trying to close any unmatched parenthesis.

	* swank.lisp: Remove (declaim (optimize ...)). The side-effect
	this has on people's environment seems harmful (I saw someone
	having trouble on the OpenMCL list).

	* swank-cmucl.lisp (source-location-from-code-location): Fixed a
	bug where the source-file-cache was not really used.
	Now always report the location based on source file (cached or
	not) even if modified -- not falling back on regexps, which was
	probably a misfeature.

	* slime.el: Remove `slime-cleanup-definition-refs'.

2004-05-02  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-start-and-load): New command.  Suggested by
	Lars Magne Ingebrigtsen.

2004-05-02  Lars Magne Ingebrigtsen  <larsi@netfonds.no>

	* slime.el (slime-kill-without-query-p): New variable.
	(slime-net-connect): Use it.
	(slime-open-stream-to-lisp): Ditto.
	(slime-maybe-start-lisp): Ditto.

2004-05-02  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-goto-source-location): Added support for the
	:snippet "hint" in a location specifier. If Lisp sends the
	(initial) source text for the definition then Emacs isearches for
	it in both directions from the given character position. This
	makes M-. robust when the Emacs buffer has been edited. Requires
	backends to provide this snippet information.
	(slime-goto-location-position): Tightened up the regular
	expressions for :function-name style location search.
	(slime-cleanup-definition-refs): New function to do a little
	post-processing on definition references from Lisp. Mostly this is
	a hack: if POSITION is NIL then we fill it in with the function
	name, ready for regexp search. I was in a hurry and it was easier
	to do here, and it doesn't seem entirely unreasonable.

	* swank-backend.lisp (:location): Added a 'hints' property list
	to the location structure. This is for extra information that
	compliments the buffer/position.

	* swank-cmucl.lisp (code-location-stream-position): Position the
	argument stream at the definition before returning.
	(source-location-from-code-location): Include the :snippet hint
	for Emacs (see above). The snippet will only be accurate provided
	that the source file on disk has not been modified.
	(*source-file-cache*) The contents of all source files consulted
	for M-. are now cached if they match the version of the running
	code. This is so that we can accurately lookup source locations
	even when the file is modified, provided we manage to get the
	right version (by file timestamp) at least once.
	(source-location-from-code-location): If the right source version
	is not available on disk or in our cache then let Emacs fall back
	on a regular expression search.

2004-05-01  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-lispworks.lisp (find-top-frame): New function used to hide
	debugger-internal frames.
	(call-with-debugging-environment): Use it.

2004-05-01  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-abort): Print a message if the Emacs RPC
	returns. It shouldn't, if ABORT manages to unwind the stack, but
	it currently does in OpenMCL due to some bug.
	(slime-edit-definition-fallback-function): Name of a function to
	try if the builtin edit-definition finding fails. You can set
	this to `find-tag' to fall back on TAGS.

	* swank.lisp (list-all-systems-in-central-registry): Use explicit
	:wild in pathname for matching (needed in at least SBCL).

	* swank-openmcl.lisp: Removed obsolete `swank-compile-system'.

	* swank-sbcl.lisp: Removed obsolete `swank-compile-system'.
	Removed some stale comments about supported features.

2004-04-30  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-repl-update-banner): Don't print the working
	directory.  It rarely fits in a line and was only Emacs'
	default-directory.  M-x pwd is convenient enough.

	* swank.lisp (symbol-indentation): Don't infer indentation for
	symbols starting with 'def' or 'with-'.  It was wrong most of the
	time and Emacs' defaults are better.

	* swank-lispworks.lisp (emacs-connected): Add methods to
	stream-soft-force-output for socket-streams and
	slime-output-streams.  This flushes those streams automatically
	(i assume it gets called when Lisp is idle).

2004-04-29  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-repl-mode): Set slime-current-thread to
	:repl-thread.

	* swank.lisp (thread-for-evaluation, dispatch-event): Accept
	:repl-thread as thread specifier and dispatch evaluation and
	interrupt request properly.
	(repl-thread-eval, repl-eval): Deleted. We do the special casing in
	thread-for-evaluation.

2004-04-29  Lars Magne Ingebrigtsen  <larsi@netfonds.no>

	* slime.el (slime-event-buffer-name): New variable.
	(slime-events-buffer): Use it.
	(slime-space-information-p): Ditto.
	(slime-space): Use it.
	(slime-reply-update-banner-p): Ditto.
	(slime-repl-update-banner): Use it.

2004-04-28  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-loader.lisp (*lisp-name*): Add versioning support for
	CLISP.

	* swank-clisp.lisp (arglist): Trap exceptions and return
	:not-available in that case.

	* swank.lisp (arglist-for-insertion): Don't use ~< ..~:@>.
	CLISP's pretty printer can't handle it.

2004-04-28  Luke Gorrie  <luke@bluetail.com>

	* NEWS: Created a NEWS file for recording changes that we want
	users to read about.

	* slime.el (slime-log-event): Use outline-minor-mode in
	*slime-events* instead of hideshow-mode. It's more
	reliable. (Patch from Lawrence Mitchell.)

2004-04-28  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-net-connect): Bind inhibit-quit to nil, so that
	we have a chance to interrupt Emacs if open-network-stream blocks.
	(slime-complete-maybe-restore-window-configuration): Keep trying
	after slime-repl-indent-and-complete-symbol.
	(slime-space): Don't close the completion buffer.  We don't know
	the window-config before the completion, so leave the buffer open.

	* swank.lisp (create-server): New keyword based variant to start
	the server in background.
	(setup-server): Add support to keep the socket open for
	single-threaded Lisps.

2004-04-27  Luke Gorrie  <luke@bluetail.com>

	* doc/slime.texi (Other configurables): Updated instructions on
	globally installing SLDB on *debugger-hook*.

	* slime.el (slime-log-event): Better bug-avoidance with
	hs-minor-mode. Hopefully XEmacs users can rest safely now.
	(slime-prin1-to-string): Bind `print-escape-newlines' to nil.
	(slime-set-connection-info): Commented out call to
	`slime-check-protocol-version'. Let's see how we do without it.
	(slime-oneway-eval): Removed unused function.

	* swank.lisp (oneway-eval-string): Removed unused function.

2004-04-26  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp: Move definition of `with-io-redirection' above
	`with-connection' to avoid a CLISP error. This is really weird.
	(interactive-eval): Bind *package* to *buffer-package*, so that
	`C-x C-e' and related commands evaluate in the expected package.

	* slime.el (sldb-insert-frames): Handle empty backtrace (I got one
	in CLISP).

	* swank-allegro.lisp (arglist): Return :not-available if arglist
	lookup fails with an error.

	* slime.el: Moved snippets of Common Lisp code into swank.lisp
	from the thread control panel. (Remember, no CL code in slime.el!)

	* swank-loader.lisp (*lisp-name*): Include a short version number
	in the Lisp name to separate FASL files for different
	versions. Only implemented for CMUCL and SBCL sofar.

	* swank.lisp (ed-in-emacs): Avoid mutating the argument.
	(spawn-repl-thread): Add a new thread for evaluating REPL
	expressions. This same thread is used for all REPL
	evaluation. This fixes some issues with variables like * and **
	in at least SBCL.

	* nregex.lisp: Typo fix (thanks Barry Fishman).

	* slime.el (slime-events-buffer): Don't use hideshow-mode in
	XEmacs for the *slime-events* buffer. It causes obscure problems
	for some users. Still used in GNU Emacs.

2004-04-25  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-backend.lisp (arglist): Return a list or :not-available.
	Don't return strings or raise exceptions.

	* swank.lisp (arglist-for-echo-area): Simplified and adapted for
	the new semantic of ARGLIST.
	(arglist-for-insertion): Now a separate function.
	(read-arglist): Deleted. No longer needed.

	* swank-cmucl.lisp, swank-lispworks.lisp (arglist): Return
	:not-available if the arglist cannot be determined.

	* slime.el (slime-set-connection-info): Hide the *inferior-lisp*
	buffer here, so that we have all the buffer rearrangement in one
	place.
	(slime-insert-arglist): Use swank:arglist-for-insertion.

2004-04-24  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-init-connection-state): Use an asynchronous RPC
	instead of slime-eval to reduce the amount of work we do in the
	timer function.  We can remove the workaround for the timer
	problem.

2004-04-23  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Updated top comments.
	Make SLIME faces inherit from their font-lock cousins properly.
	(slime-connect): Bind `slime-dispatching-connection' to avoid
	being confused by old buffer-local variables when initializing
	the connection. This fixes a bug where doing `M-x slime' from the
	REPL could give a "Not connected" error.

2004-04-22  Edi Weitz <edi@agharta.de>

	* slime.el (slime-read-system-name): Perform completion on all
	systems in the central registry.

	* swank.lisp (list-all-systems-in-central-registry): New function.

2004-04-22  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-repl-update-banner): Add workaround to force the
	proper behavior of the the first command in the REPL buffer.
	(slime-repl-shortcut-history): Define the variable to make XEmacs
	happy.

2004-04-22  Tiago Maduro-Dias <tcmd@rnl.ist.utl.pt>

	* slime.el (slime-space): Cleanup.
	(slime-complete-restore-window-configuration): Use
	slime-close-buffer instead of bury-buffer.

2004-04-21  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Suppress byte-compiler warnings by binding
	byte-compiler-warnings to nil.
	(slime-repl-shortcut): Use a structure instead of a list for the
	short cut info.  Update the users accordingly.

	* swank-cmucl.lisp (arglist): Return a list instead of the string.

2004-04-21  Edi Weitz <edi@agharta.de>

	* slime.el (slime-apropos): Add support for regexp-based apropos.
	We use nregex, so the regexp syntax is different from Emacs'
	regexps and bit restricted (alternation '|' and optional groups
	'(xy)?' are not implemented).
	(slime-insert-arglist): New command - stolen from ILISP. I always
	thought this was quite useful.
	(slime-oos): Fix typo.

	* swank.lisp (apropos-symbols): Use regexp and support
	case-sensitive matching.
	(arglist-for-echo-area): New argument to control if the operator
	name should be included.

	* nregex.lisp: New file.

	* swank-loader.lisp (*sysdep-pathnames*): Load it.

2004-04-21  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* doc/slime.texi (Compilation): slime-remove-notes is bound to C-c
	M-c not M-c.  Noted by Edi Weitz.

2004-04-21  Edi Weitz <edi@agharta.de>

	* swank.lisp (list-all-package-names): Optionally include
	nicknames in the result.

	* slime.el (slime-read-package-name): Include nicknames in the
	completions set.
	(slime-repl-mode-map): Bind C-c : to slime-interactive-eval just
	like in most other SLIME buffers.
	(read-directory-name): Compatibilty defun.

2004-04-20  Tiago Maduro-Dias <tcmd@rnl.ist.utl.pt>

	* slime.el (slime-close-buffer): New utility function.
	(slime-space): Use it to kill superfluous *Completions* buffers.

2004-04-17  Raymond Toy <rtoy@earthlink.net>

	* swank-cmucl.lisp (source-location-tlf-number)
	(source-location-form-number): New functions to extract the
	encoded form-numbers from source locations.
	(resolve-stream-source-location, resolve-file-source-location):
	Use them.

2004-04-17  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-merge-notes): Use mapconcat instead of
	(concat (slime-intersperse (mapcar ....)))
	(slime-intersperse): Handle empty lists.

2004-04-16  Luke Gorrie  <luke@bluetail.com>

	* doc/Makefile: Added 'install' and 'uninstall' targets for the
	Info manual. It may be necessary to tweak `infodir' in the
	Makefile to suit the local system before installing. (Patch from
	from Richard M Kreuter.)

	* doc/slime.texi (Top): The Top node is now smaller, with details
	moved into Introduction. This makes the Info front page easier to
	navigate. (Patch from Richard M Kreuter.)

2004-04-15  Ivan Boldyrev  <email@secret-by-request>

	* slime.el (slime-handle-repl-shortcut): Call `completing-read'
	with an alist as expected, using `slime-bogus-completion-alist'.

2004-04-14  Luke Gorrie  <luke@bluetail.com>

	* doc/slime.texi (Shortcuts): Described REPL shortcuts.

	* slime.el (slime-oos): Generic ASDF interface.
	(force-compile-system, compile-system, load-system,
	force-load-system): New REPL commands.

	* swank-backend.lisp (operate-on-system): More generic interface
	to ASDF.

	* swank.lisp (operate-on-system-for-emacs): More generic
	interface to ASDF.

	* slime.el (slime-repl-mode-map): Portability fix for definition
	of the REPL command character.
	(slime-maybe-rearrange-inferior-lisp): Bugfix for running
	multiple inferior lisps.

2004-04-13  Marco Baringer  <mb@bese.it>

	* slime.el (slime-handle-repl-shortcut,
	slime-list-all-repl-shortcuts, slime-lookup-shortcut,
	defslime-repl-shortcut): Refactor repl shortcut code to provide a
	more leggible help.

2004-04-09  Lawrence Mitchell  <wence@gmx.li>

	* slime.el (slime-same-line-p): Use `line-end-position', rather
	than searching for a newline manually.
	(slime-repl-defparameter): Use VALUE, not VALUE-FORM.

2004-04-08  Marco Baringer  <mb@bese.it>

	* slime.el (slime-repl-package-stack): New buffer local variable.
	(slime-repl-directory-stack): New buffer local variable.
	(slime-repl-command-input-complete-p): Remove.
	(slime-repl-update-banner): New function.
	(slime-init-output-buffer): Use slime-repl-update-banner.
	(slime-repl-shortcut-dispatch-char): New variable.
	(slime-repl-return): Don't check for repl commands anymore.
	(slime-repl-send-repl-command): Remove.
	(slime-repl-mode-map): Bind slime-repl-shortcut-dispatch-char to
	slime-handle-repl-shortcut.
	(slime-set-default-directory): Use read-directory-name, call
	slime-repl-update-banner.
	(slime-repl-shortcut-table): New global variable.
	(slime-handle-repl-shortcut): New function.
	(defslime-repl-shortcut): New macro for defining repl shortcuts.
	(slime-repl-shortcut-help, "change-directory",
	slime-repl-push-directory, slime-repl-pop-directory,
	"change-package", slime-repl-push-package, slime-repl-pop-package,
	slime-repl-resend, slime-repl-sayoonara, slime-repl-defparameter,
	slime-repl-compile-and-load): New repl shortcuts.
	(slime-kill-all-buffers): Kill sldb buffers as well.

	* swank.lisp: Remove the repl related functions.
	(requires-compile-p): New function.

2004-04-07  Lawrence Mitchell  <wence@gmx.li>

	* slime.el (slime-repl-prompt-face): New face.
	(slime-repl-insert-prompt): Use it.
	(slime-with-chosen-connection, with-struct): Docstring
	fix for function's arglist display.
	(when-let, slime-with-chosen-connection, with-struct): Docstring
	fix for function's arglist display.
	(slime-read-package-name): Use `slime-bogus-completion-alist' to
	construct completion table.
	(slime-maybe-rearrange-inferior-lisp): Use `rename-buffer's
	optional argument to rename uniquely.
	(slime-check-connected): Display keybinding for `slime' via
	`substitute-command-keys'.
	(slime-repl-send-repl-command): Use whitespace character class in
	regexp.
	(slime-autodoc-stop-timer): New function.
	(slime-autodoc-mode): Add `interactive' spec to specify optional
	arg.  This allows prefix toggling of mode (behaves more like
	most Emacs modes now).  Stop timer if switching mode off with
	`slime-autodoc-stop-timer'.
	(slime-autodoc-start-timer, slime-complete-symbol)
	(slime-complete-saved-window-configuration)
	(slime-insert-balanced-comments): Docstring fix.
	(slime-ed): Call `slime-from-lisp-filename' on filename for list
	case of argument.
	(slime-insert-transcript-delimiter, slime-thread-insert): Use
	?\040 to indicate SPC.
	(line-beginning-position): `forward-line' always puts us in
	column 0.
	(line-end-position): Define if not fboundp (for older XEmacs).

2004-04-07  Peter Seibel  <peter@javamonkey.com>

	* swank-allegro.lisp (set-default-directory): Allegro specific
	version that also uses excl:chdir.

	* swank.lisp (swank-pprint): Add swank versions of two missing
	pretty-printer control variables.

2004-04-07  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (completion-set): Also complete package
	names. (Patch from Sean O'Rourke.)
	(find-matching-packages): Add a ":" to the end of package names
	in completion.

2004-04-06  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-bytecode-stale-p): Automatically check if
	slime.elc is older than slime.el and try to help the user out if
	so.

2004-04-06  Marco Baringer  <mb@bese.it>

	* slime.el (slime-repl-command-input-complete-p): New function.
	(slime-repl-send-string): New optional arg specifying what string
	to put on slime-repl-input-history, usefull when this string
	differs from what we actually want to eval.
	(slime-repl-return): Check for repl commands and pass then to
	slime-repl-send-repl-command.
	(slime-repl-send-repl-command): New function.
	(slime-kill-all-buffers): New function.

	* swank.lisp: Define the various repl command handlers: sayoonara,
	cd, pwd, pack and cload.

	* swank-backend.lisp (quit-lisp): Define as part of the backend
	interface and export.

	* swank-sbcl.lisp, swank-openmcl.lisp, swank-cmucl.lisp,
	swank-clisp.lisp, swank-allegro.lisp (quit-lisp): implement.

2004-04-06  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (macro-indentation): Check that the arglist is
	well-formed. This works around a problem with ACL returning
	arglists that aren't real lambda-lists.

2004-04-05  Lawrence Mitchell  <wence@gmx.li>

	* swank.lisp (*swank-pprint-circle*, *swank-pprint-escape*)
	(*swank-pprint-level*, *swank-pprint-length*): Fix typo in
	docstring.

	* slime.el (slime-arglist): Don't `message' arglist directly, in
	case it contains %-signs.
	(slime-repl-output-face): Fix quoting.
	(slime-symbol-at-point): Call `slime-symbol-name-at-point',
	rather than ourselves.
	(slime-check-protocol-version): Docstring fix.

2004-04-05  Luke Gorrie  <luke@bluetail.com>

	* doc/slime.texi (Semantic indentation): Documented new
	automatically-learn-how-to-indent-macros feature.
	Added auto version control header in subtitle.

	* slime.el (slime-close-parens-at-point): New command bound to
	C-a C-a. Inserts close-parenthesis characters at point until the
	top-level form becomes well formed. Could perhaps be made fancier.
	(slime-update-indentation): New command to update indentation
	information (`common-lisp-indent-function' properties) based on
	macro information extracted from Lisp. This happens
	automatically, the command is just to force a full rescan.

	* swank.lisp (connection): Added slots to track indentation caching.
	(*connections*): List of all open connections.
	(default-connection): Function to get a "default"
	connection. This is intended to support globally using the
	debugger hook outside the context of a SLIME request, which is
	broken at present.
	(with-connection): Don't setup a restart: that must be done
	separately.
	(sync-state-to-emacs): Call `update-connection-indentation'.
	(update-connection-indentation): Automatically discover how to
	indent macros and tell Emacs.

	* swank-backend.lisp (arglist): Specify that strings returned
	from ARGLIST should be READable.

2004-04-02  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-maybe-list-compiler-notes): Display the notes
	for C-c C-c, when there are notes without a good source-location.

2004-04-01  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-sbcl.lisp: Remove the non-working workarounds for
	non-existent fcntl.  Reported by Brian Mastenbrook.
	(preferred-communication-style): Use multithreading if futexes are
	available, sigio if fcntl is present, and fd-handlers otherwise.
	(resolve-note-location): Don't try to construct a source-location
	if there's no context.  Notes without location will be displayed
	in the note-listing buffer.

2004-04-01  Bill Clementson <Bill_Clementson@peoplesoft.com>

	* swank-allegro.lisp (send): Fix misplaced parens.

2004-03-31  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (debug-function-arglist): Return symbols if
	possible.
	(class-location): Support for experimental source-location
	recording.

2004-03-30  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-repl-result-face): New face.
	(slime-inspector-mode-map): Add a binding for M-.
	(compile-defun): Add test case for escaped double quotes inside a
	string.

	* swank.lisp (ed-in-emacs): New allowed form for argument.
	(pprint-eval-string-in-frame): Apply arguments in proper order.

	* swank-cmucl.lisp (method-dspec): Include method-qualifiers.
	(class-definitions): Renamed from struct-definitions.  Try to
	locate condition-classes and PCL classes (in the future).
	(debug-function-arglist): Insert &optional, &key, &rest in the
	right places.
	(form-number-stream-position): Make it a separate function.

2004-03-29  Lawrence Mitchell  <wence@gmx.li>

	* swank.lisp (ed-in-emacs): New allowed form for argument.

	* slime.el (slime-ed): Deal with list form of argument.  For a
	list (FILENAME LINE [COLUMN]), visit the correct line and column
	number.

2004-03-29  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-source-path-parser.lisp (cmucl-style-get-macro-character):
	New function. Workaround for bug(?) in SBCL.
	(make-source-recording-readtable): Use it.

2004-03-29  Luke Gorrie  <luke@bluetail.com>

	* HACKING: Some small updates (more needed).

	* slime.el (slime-inspector-buffer): Enter `slime-inspector-mode'
	after `slime-mode'. This seems to give priority of keymap to the
	inspector, so that it can override SPC.
	(slime-easy-menu): Add slime-switch-to-output-buffer.
	Enable SLIME menu in the REPL buffer.
	(slime-symbol-name-at-point): Avoid mistaking the REPL prompt for
	a symbol.
	(slime-words-of-encouragement): A few new ones.
	(slime-insert-xrefs): Removed the final newline from XREF
	buffers. This helps to avoid unwanted scrolling.

	* doc/slime.texi: Added a section about user-interface
	conventions and our relationship with inf-lisp.

2004-03-27  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-changelog-date): Reinitialize it at load-time.
	This avoids the need to restart Emacs (horror!) after an update.

	* swank-cmucl.lisp (debug-function-arglist): Properly reconstruct
	the arglist from the debug-info. (Not complete yet.)
	(arglist): Use it.

	* swank-lispworks.lisp (spawn): Remove CL symbols from
	mp:*process-initial-bindings*, to avoid the irritating behavior
	for requests executed in different threads.  E.g., when someone
	tries to set *package*.

	* swank.lisp (*log-io*): New variable.  Bind it to *terminal-io*
	at load-time, so we can log to a non-redirected stream.
	(disassemble-symbol): Allow generalized function names.
	(apropos-symbols): Handle the PACKAGE argument properly to get
	useful output for C-c P.

	* slime.el (slime-repl-indent-and-complete-symbol): New command.
	Bound to TAB in the REPL mode.  First try to indent the current
	line then try to complete the symbol at point.
	(slime-dispatch-event): Ignore a unused thread variable to keep
	XEmacs' byte compiler quiet.

	* swank-sbcl.lisp (enable-sigio-on-fd): Use sb-posix::fcntl
	instead of sb-posix:fcntl to avoid the ugly reader hack.  SBCL
	doesn't have package locks and even if they add locks in the
	future sb-posix::fcntl will still be valid.
	(getpid): Use defimplementation instead of defmethod.
	(function-definitions): Take generalized function names ala '(setf
	car)' as argument.

2004-03-26  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-group-similar): Bugfix: return NIL if the input
	list is NIL.
	(slime-inspector-buffer): Enter `slime-inspector-mode' after
	`slime-mode'. This seems to give priority of keymap to the
	inspector, so that it can override SPC.

2004-03-26  Bjørn Nordbø <bn@telenor.net>

	* swank.lisp (print-arglist): Updated to handle arglists with
	string elements, causing arglists for macros to display properly
	in LW 4.1.

2004-03-26  Marco Baringer <mb@bese.it>

	* swank-cmucl.lisp (set-default-directory): Define only once;
	define with defimplementation, not defun.

2004-03-26  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-merge-notes-for-display): New function to merge
	together compiler notes that refer to the same location. This is
	an optimization for when there are a lot of compiler notes:
	`slime-merge-note-into-overlay' concat'd messages together one by
	one in O(n^2) time/space, and became noticeably slow in practice
	with ~100 notes or more.
	(slime-tree-insert): This function is now automatically
	byte-compiled (good speed gain).
	Wrap byte-compilation in `save-window-excursion' to avoid showing
	an unwanted warnings buffer (in XEmacs).

2004-03-25  Bjørn Nordbø <bn@telenor.net>

	* swank-lispworks.lisp: (create-socket, set-sigint-handler)
	(who-references, who-binds, who-sets): Add backward compatibility
	for LW 4.1.
	(dspec-buffer-position): Fix inappropriate use of etypecase.

2004-03-24  Luke Gorrie  <luke@bluetail.com>

	* swank-sbcl.lisp (getpid): Use sb-posix:getpid.

	* slime.el (slime-inspector-mode-map): Added SPC as extra binding
	for slime-inspector-next (like info-mode).

	* doc/slime.texi: Added completion style and configuration.

2004-03-23  Alan Shutko  <ats@acm.org>

	* swank-clisp.lisp (set-default-directory): New function.

2004-03-23  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-allegro.lisp (send): Wait a bit if there are already many
	message in the mailbox.

	* swank-clisp.lisp (xref-results): Use fspec-location instead of
	the of fspec-source-locations.  Reported by Alan Shutko.
	(break): Be friendly to case-inverting readtables.

	* swank-lispworks.lisp (emacs-connected): Add default method to
	environment-display-notifier.  Reported by Bjørn Nordbø.
	(set-default-directory, who-specializes): Implemented for
	Lispworks.
	(gfp): New function.
	(describe-symbol-for-emacs, describe-definition): Distinguish
	between ordinary and generic functions.
	(call-with-debugging-environment): Unwind a few frames.  Looks
	better and avoids the problems with the real topframe.
	(interesting-frame-p): Use Lispworks dbg:*print-xxx* variables to
	decide which frames are interesting.
	(frame-actual-args): New function.
	(print-frame): Use it.

	* swank.lisp (open-streams, make-output-function): Capture the
	connection not only the socket.  This way the streams can be used
	from unrelated threads.  Reported by Alain Picard.
	(create-connection): Factorized.  Initialize the streams after the
	connection is created.
	(initialize-streams-for-connection, spawn-threads-for-connection):
	New functions.
	(with-connection): Fix quoting bug and move upwards before first
	use.
	(guess-package-from-string): Add kludge for SBCL !-package names.
	(apropos-list-for-emacs): Lispworks apparently returns duplicates;
	remove them.
	(inspect-object): Princ the label to allow strings and symbols.
	(send-output-to-emacs): Deleted.
	(defslimefun-unimplemented): Deleted.  Was unused.

	* slime.el (slime-easy-menu): Add some more commands.
	(slime-changelog-date): New variable. Initialized with the value
	returned by the function of the same name.  This detects
	incompatible versions if Emacs has not been restarted after an
	upgrade.
	(slime-check-protocol-version, slime-init-output-buffer): Use it.
	(slime-events-buffer, slime-log-event): Use fundamental mode
	instead of lisp-mode to avoid excessive font-locking for messages
	with lots of strings.

2004-03-22  Luke Gorrie  <luke@bluetail.com>

	* doc/slime.texi: New user manual.

	* swank.lisp (*communication-style*): New name for
	*swank-in-background*.
	Exported configuration variables: *communication-style*,
	*log-events*, *use-dedicated-output-stream*.

2004-03-20  Julian Stecklina <der_julian@web.de>

	* swank-sbcl.lisp (+o_async+, +f_setown+, +f_setfl+): Add correct
	constants for FreeBSD.

2004-03-19  Alan Shutko  <ats@acm.org>

	* swank.lisp, swank-loader.lisp: Take into account
	`pathname-device' when deriving paths. A fix for Windows.

2004-03-19  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-connected-hook): New hook called each time SLIME
	successfully connects to Lisp. This is handy for calling
	`slime-ensure-typeout-frame', if you want to use that feature.
	(sldb-print-condition): New command to print the SLDB condition
	description into the REPL, for reference after SLDB exits. Can be
	called from `sldb-hook' if you want the condition to always be
	printed. Bound to 'P' in SLDB.

2004-03-18  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (format-values-for-echo-area): Bind *package* to
	*buffer-package*.
	(load-system-for-emacs): Renamed from swank-load-system.
	(carefully-find-package): Be friendly to case inverting
	readtables.
	(inspect-current-condition): New function.

	* swank-backend.lisp, swank-cmucl.lisp (set-default-directory):
	New backend function.

	* swank-allegro.lisp, swank-clisp.lisp, swank-lispworks.lisp,
	swank-sbcl.lisp (swank-compile-string): Be friendly to
	case-inverting readtables.

	* slime.el (sldb-inspect-condition): Use
	swank:inspect-current-condition.
	(slime-inspector-label-face): Make it bold by default.
	(slime-check-protocol-version, slime-process-available-input):
	Wait 2 secs after displaying the error message.
	(sldb-list-catch-tags, sldb-show-frame-details): Display catch
	tags as symbols not as strings.

2004-03-16  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-dispatch-event, slime-rex): Pass a form instead
	of a string with :emacs-rex.
	(slime-connection-name): New connection variable.  Use it in
	various places instead of slime-lisp-implementation-type-name.

	* swank.lisp: Better symbol completion for case-inverting
	readtables.  (Thanks Thomas F. Burdick for suggestions.)
	(output-case-converter): New function.
	(find-matching-symbols): Case convert the symbol-name before
	comparing.
	(compound-prefix-match, prefix-match-p): Use char= instead of
	char-equal.
	(case-convert-input): Renamed from case-convert.
	(eval-for-emacs): Renamed from eval-string.  Take a form instead
	of a string.
	(dispatch-event, read-from-socket-io): Update callers.
	(eval-region, interactive-eval): Use fresh-line to reset the column.

2004-03-13  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-space): Send a list of the operator names
	surrounding point to Lisp.  Lisp can use the list to select the
	most suitable arglist for the echo area.  Suggested by Christophe
	Rhodes and Ivan Boldyrev.
	(slime-enclosing-operator-names): New function.

	* swank.lisp (arglist-for-echo-area): Renamed from arglist-string.
	(format-arglist-for-echo-area, arglist-to-string): New functions.

2004-03-12  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-backend.lisp (find-definitions): Fix docstring.

	* slime.el (slime-dispatch-event): Re-enable :ed command.
	(sldb-return-from-frame): Send swank:sldb-return-from-frame.

	* swank-cmucl.lisp (find-definitions): Allow names like (setf car).

	* swank.lisp (sldb-return-from-frame): Convert the string to a
	sexp.
	(dispatch-event, send-to-socket-io): Allow %apply events.
	(safe-condition-message): Bind *pretty-print* to t.
	(set-default-directory): Use the truename.
	(find-definitions-for-emacs): Allow names like (setf car).

2004-03-12  Wolfgang Jenkner  <wjenkner@inode.at>

	* swank.lisp (:swank): Export startup-multiprocessing,
	restart-frame, return-from-frame.
	What about kill-thread and interrupt-thread, which are accessed
	as internal symbols?

2004-03-10  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (struct-definitions, find-dd)
	(type-definitions, function-info-definitions)
	(source-transform-definitions, setf-definitions): New funtions.
	(find-definitions): Include struct definitions, deftypes, setf
	defintions, compiler-macros and compiler transforms.

2004-03-10  Andras Simon <andras@renyi.hu>

	* swank.lisp (print-arglist): Use with-standard-io-syntax.

2004-03-10  Pawel Ostrowski  <pasza@zodiac.mimuw.edu.pl>

	* swank-cmucl.lisp (unprofile-all): (eval '(profile:unprofile))
	instead of just calling it since it is a macro in cmucl.

	* swank.lisp (:swank): export profile symbols (profiled-functions,
	profile-report, profile-reset, unprofile-all, profile-package)

2004-03-10  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-allegro.lisp, swank-lispworks.lisp, swank-sbcl.lisp,
	swank-clisp.lisp, swank-cmucl.lisp (find-definitions): Some
	tweaking.

	* swank.lisp (print-arglist): Bind *pretty-circle* to nil to avoid
	output like "(function . (cons))".  Suggested by Michael Livshin.
	(test-print-arglist): Re-enable the tests.
	(find-definitions-for-emacs): Renamed from
	find-function-locations.

	* slime.el (slime-edit-definition): Renamed from
	slime-edit-fdefinition.  Display the dspec if there are multiple
	definitions.
	(slime-symbol-name-at-point): Handle the case when there is no
	symbol at point.
	(slime-expected-failures): New function
	(slime-execute-tests): Use it.

2004-03-09  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (frame-source-location-for-emacs): Export it.
	Reported by Jouni K Seppanen
	(test-print-arglist): Disable the tests until we know what's wrong
	with print-arglist.  Reported by Michael Livshin.

	* swank-source-path-parser.lisp, swank-gray.lisp (in-package): We
	are in-package :swank-backend.  Thanks to Raymond Wiker.

	Merge package-split branch into main trunk.

	* swank-clisp.lisp (find-fspec-location): Handle "No such file"
	errors.

	* swank-openmcl.lisp (preferred-communication-style): Implemented.
	(call-without-interrupts, getpid): Use defimplementation.
	(arglist, swank-compile-file, swank-compile-string)
	(swank-compile-system, backtrace): Renamed.
	(print-frame): New function.
	(frame-catch-tags): Don't exclude nil source location.
	(format-restarts-for-emacs, debugger-info-for-emacs,
	inspect-in-frame). deleted
	(frame-arguments): Don't use to-string.
	(find-source-locations, find-function-locations
	(method-source-location): Deleted.
	(canonicalize-location, find-definitions,
	function-source-location, list-callers): Use
	ccl::edit-definition-p and
	ccl::get-source-files-with-types&classes.  Makes things easier.
	(return-from-frame): Take a sexp not a string.
	(describe-definition): Describe more types.

	* swank-loader.lisp: Change load order. swank.lisp is now the last
	file.

	* swank-allegro.lisp, swank-clisp.lisp, swank-cmucl.lisp,
	swank-gray.lisp, swank-lispworks.lisp, swank-sbcl.lisp,
	swank-source-path-parser.lisp: Implement changed backend interface
	and remove references to frontend symbols.

	* swank-backend.lisp (:swank-backend): New package.
	(definterface): Export the symbol.
	(:location, :error, :position, :buffer): Define structure of
	source locations here.
	(preferred-communication-style, compute-backtrace, print-frame):
	New functions.
	(debugger-info-for-emacs): Deleted.

	Renaming:

	compile-file-for-emacs   -> swank-compile-file
	compile-string-for-emacs -> swank-compile-string
	compile-system-for-emacs -> swank-compile-stystem
	arglist-string           -> arglist
	backrace                 -> compute-backtrace
	find-function-locations  -> find-definitions

	* swank.lisp (:swank): Create the package here.
	(*swank-in-background*): Call the backend function
	preferred-communication-style to for the initial value.
	(find-symbol-designator): Handle NIL properly.
	(arglist-string): Renamed from format-arglist.  Call backend
	function directly.
	(*sldb-restarts*, swank-debugger-hook, format-restarts-for-emacs)
	(nth-restart, invoke-nth-restart, sldb-abort): Handle restarts in
	the front end.
	(frame-for-emacs): Renamed from print-with-frame-label.
	(backtrace, debugger-info-for-emacs, pprint-eval-string-in-frame)
	(set-default-directory): Now in the front end.
	(frame-locals-for-emacs): Use print not princ for variable names.
	(compile-file-for-emacs, compile-string-for-emacs): Small wrappers
	around backend functions.
	(describe-definition-for-emacs): Handle unknown symbols before
	calling the backend.
	(find-function-locations): Wrapper for new backend function
	find-definitions.
	(group-xrefs, partition, location-valid-p, xref-buffer, xref):
	Updated for the new backend functions.

	* slime.el:
	(slime-symbol-at-point, slime-symbol-name-at-point):
	slime-symbol-at-point calls slime-symbol-name-at-point not the
	other way around.  This avoids the mess if the symbol at point is
	NIL.
	(slime-compile-file, slime-load-system, slime-compile-region)
	(slime-call-describer, slime-who-calls, sldb-catch-tags): Updates
	for renamed lisp functions.
	(slime-list-callers, slime-list-callees): Unified with other xref
	commands.
	(sldb-show-frame-details): Catch tags no longer include the source
	location.
	(sldb-insert-locals): Simplified.

2004-03-09  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (read-into-simple-string): Use the correct fix.
	Reported by Håkon Alstadheim.

2004-03-08  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-start-swank-server, slime-maybe-start-lisp):
	Translate filenames.  Reported by Dan Muller.

2004-03-08  Bill Clementson <Bill_Clementson@peoplesoft.com>

	* slime.el (slime-insert-balanced-comments)
	(slime-remove-balanced-comments, slime-pretty-lambdas): New
	functions.

2004-03-07  Jouni K Seppanen  <jks@iki.fi>

	* slime.el (sldb-help-summary): New function.
	(sldb-mode): Add docstring so that describe-mode is useful.
	(sldb-mode-map): Add bindings for sldb-help-summary and
	describe-mode.
	(define-sldb-invoke-restart-key): Generate docstrings.
	(sldb-default-action/mouse, sldb-default-action)
	(sldb-eval-in-frame, sldb-pprint-eval-in-frame)
	(sldb-inspect-in-frame, sldb-down, sldb-up, sldb-details-up)
	(sldb-details-down, sldb-list-locals, sldb-quit, sldb-continue)
	(sldb-abort, sldb-invoke-restart, sldb-break-with-default-debugger)
	(sldb-step): Add rudimentary docstrings.

2004-03-07  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-complete-symbol*, slime-simple-complete-symbol):
	Use the correct block name when returning.
	(slime-display-completion-list): Fix typo.

	* swank-cmucl.lisp (frame-locals): Use #:not-available instead of
	"<not-available>".

2004-03-05  Bill Clementson <Bill_Clementson@peoplesoft.com>

	* swank-lispworks.lisp (getpid, emacs-connected): Conditionalize
	for Windows.

2004-03-05  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (frame-locals-for-emacs): Bind *print-readably* to
	nil.

2004-03-05  Marco Baringer  <mb@bese.it>

	* swank.lisp (frame-locals-for-emacs): New function.

	* slime.el (sldb-frame-locals): Use swank::frame-locals-for-emacs
	not swank::frame-locals.
	(sldb-insert-locals): use the :value property, not the
	:value-string property.

	* swank-allegro.lisp, swank-clisp.lisp, swank-cmucl.lisp,
	swank-lispworks.lisp, swank-sbcl.lisp (frame-locals): Return lisp
	objects, not strings. Use the :value property and not the
	:value-string property.

2004-03-04  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-display-comletion-list): New function. Set
	syntax table properly.
	(slime-complete-symbol*, slime-simple-complete-symbol): Use it.
	(slime-update-connection-list): New function.
	(slime-draw-connection-list): Simplified.
	(slime-connection-list-mode-map): Bind g to update-connection-list.
	(slime-open-inspector): Print the primitive type in brackets.
	(slime-test-arglist): Add test for empty arglist.

	* swank-allegro.lisp, swank-clisp.lisp, swank-cmucl.lisp,
	swank-lispworks.lisp, swank-sbcl.lisp, swank-backend.lisp
	(thread-alive-p): Add default implementation.
	(describe-primitive-type): Add default implementation.
	(inspected-parts): Implemented for Allegro and CLISP.

	* swank.lisp (remove-dead-threads): New function.
	(lookup-thread): Use it.
	(print-arglist): New function. This time without a custom pretty
	print dispatch table.
	(format-arglist): Use it.
	(inspected-parts): Add method for hash-tables.

2004-03-03  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp: Use *emacs-connection*, *active-threads*, and
	*thread-counter* as thread local dynamic variables.
	(init-emacs-connection): Don't set *emacs-connection*.
	(create-connection, dispatch-event): Pass the connection object to
	newly created threads.
	(with-connection): New macro
	(handle-request, install-fd-handler, debug-thread): Use it.

	* swank-allegro.lisp, swank-clisp.lisp, swank-cmucl.lisp,
	swank-openmcl.lisp, swank-sbcl.lisp (call-with-compilation-hooks):
	Bind fewer variables. Most of them are already bound in
	swank.lisp.

	* swank.lisp (setup-server, serve-connection): New dont-close
	argument to keep the socket open after the first connection.
	(start-server, create-swank-server): Update callers.
	Reported by Bill Clementson.

	* swank-cmucl.lisp (resolve-note-location): Don't be too clever,
	if there is no context available.  The compiler notes buffer is
	probably more adequate in this situation.
	(compile-file-for-emacs): Use the :load argument to compile-file.
	(inspect-in-frame): Deleted.

	* slime.el (slime-compilation-finished-hook): Use
	slime-maybe-list-compiler-notes as default.
	(slime-maybe-list-compiler-notes): New function.
	(slime-list-compiler-notes): Insert "[no notes]" if there aren't
	any. Pop to the buffer.
	(slime-complete-symbol*, slime-simple-complete-symbol): Set the
	lisp-mode-syntax-table in the completion buffer.
	(check-parens): Compatibility function for XEmacs and Emacs 20.

	* swank.lisp (find-completions): Deleted.
	(simple-completions): Use longest-common-prefix instead of
	longest-completion.
	(inspect-in-frame): Moved here from swank-cmucl.lisp.

	* swank-lispworks.lisp (call-with-debugging-environment): Bind
	*sldb-top-frame*.
	(nth-frame): Use *sldb-top-frame*.
	(name-source-location, name-source-locations): Renamed from
	dspec-source-location, dspec-source-locations.  The result now
	includes methods for generic functions.
	(eval-in-frame, return-from-frame, restart-frame): Implemented.
	(compile-string-for-emacs): Set dspec::*location* to the buffer
	location.
	(signal-undefined-functions, signal-error-data-base)
	(make-dspec-location): Remove temp-file kludges.
	(patch-source-locations, replace-source-file): Deleted.

2004-03-01  Marco Baringer  <mb@bese.it>

	* swank.lisp (format-arglist): deal with nil arglists.

2004-03-01  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-lispworks.lisp (compile-string-for-emacs): Patch the
	recorded source locations.
	(replace-source-file, patch-source-locations): New function.
	(dspec-buffer-position): Handle defgeneric.
	(make-dspec-location): Handle (patched) emacs-buffer locations.
	(emacs-buffer-location-p): New function.
	(describe-primitive-type, inspected-parts): Implemented.
	(kill-thread): Implemented.

	* swank-sbcl.lisp, swank-cmucl.lisp, swank-allegro.lisp
	(kill-thread): Implemented.

2004-02-29  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-complete-symbol): Make slime-complete-symbol
	customizable.  I don't understand how the ILISP style completion
	is supposed to work and find it unintuitive.
	(slime-complete-symbol-function): New variable.
	(slime-complete-symbol*): Renamed from slime-complete-symbol.
	(slime-simple-complete-symbol, slime-simple-completions): New
	function.
	(slime-compiler-notes-to-tree): Return a list of trees, not a single
	tree.

	* swank.lisp (format-arglist): Don't use a custom pprint table.
	Didn't work with CLISP and the behavior was different in SBCL and
	Lispworks.
	(completions): Factorize.
	(parse-completion-arguments, format-completion-set,
	(completion-set, find-matching-symbols, find-completions): New
	functions.
	(simple-completions): New function.
	(prefix-match-p) New function.

2004-02-28  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-compilation-finished-hook): New hook variable.
	(slime-compilation-finished): Call it.
	(slime-maybe-show-xrefs-for-notes): New function.
	(slime-make-default-connection): Use the current connection.
	(slime-connection-at-point): New function.
	(slime-goto-connection, slime-connection-list-make-default): Use
	it.
	(slime-draw-connection-list): Minor cleanups.

	Define selectors for t and c for thread and connection list.

	* swank.lisp: (*initial-pprint-dispatch-table*)
	(*arglist-pprint-dispatch-table*): Workaround for bug in
	CLISP. Don't supply nil as argument to copy-pprint-dispatch.
	(print-cons-argument): Insert a space after the car.

2004-02-27  Marco Baringer  <mb@bese.it>

	* slime.el (slime-read-port-and-connect,
	slime-read-port-and-connect-to-running-swank): Refactor
	slime-read-port-and-connect into two functions so that
	slime-thread-attach can use the logic in
	slime-read-port-and-connect.
	(slime-thread-control-mode-map): Added key bindings for
	slime-thread-kill, slime-thread-attach, slime-thread-debug and
	slime-list-threads.
	(slime-thread-kill, slime-thread-attach, slime-thread-debug): New
	functions.

	* swank-backend.lisp (kill-thread): Added to swank interface.

	* swank-openmcl.lisp (kill-thread): Implement.

	* swank.lisp (start-server): Add optional background argument,
	defaults to *swank-background*.
	(lookup-thread-by-id): New function.
	(debug-thread): New function.

2004-02-26  Peter Seibel  <peter@javamonkey.com>

	* slime.el (slime-draw-connection-list): Use text-properties to
	associate the connections each line of the connections list
	buffer.

2004-02-26  Peter Seibel  <peter@javamonkey.com>

	* slime.el (slime-list-connections): Make the buffer created by
	this function do a bit more: Can use it to switch to different
	connections and change the default.

2004-02-26  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp (ccl::force-break-in-listener): Pass a
	condition object to invoke-debugger.
	Patch by Bryan O'Connor <bryan-slime@lunch.org>

2004-02-26  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-backend.lisp (:swank): export connection-info.

	* swank-allegro.lisp (lisp-implementation-type-name): Implement
	it.

	* swank-sbcl.lisp (compile-file-for-emacs): Load the fasl file
	regardless of f-p.

	* swank.lisp (swank-pprint): Bind *package* to *buffer-package*.
	Reported by Alan Picard.

	* swank-lispworks.lisp (dspec-buffer-position): Renamed from
	dspec-buffer-buffer-position.  Handle dspecs of the form (defmacro
	foo).  Reported by Alan Picard.
	(arglist-string): Handle unknown arglists properly.

2004-02-25  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (arglist-string): Delay the call to
	di::function-debug-function until it is actually needed.
	(compile-file-for-emacs): Load the fasl file irrespective of
	COMILE-FILE's third return value.

	* swank.lisp (connection-info): New function.
	(open-streams): Don't send the :check-protocol-version message.  Now
	handled with CONNECTION-INFO.

	* slime.el (slime-symbol-at-point): Don't skip backwards across
	whitespace when we are at the first character of a symbol.  To
	handle this case: skip symbol constituents forward before skipping
	whitespace backwards.  Reported by Jan Richter.
	(slime-connection-close-hook, slime-next-connection)
	(slime-make-default-connection): Remove extra call to format.
	(slime-init-connection-state): Use only a single RPC instead of 4.

2004-02-25  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-with-chosen-connection): Bind
	slime-dispatching-connection and not slime-buffer-connection.
	slime-buffer-connection is a buffer local variable not a dynamic
	variable.
	(slime-find-connection-by-type-name)
	(slime-read-lisp-implementation-type-name): Were lost during the
	merge.
	(sldb-fetch-more-frames): Use (goto-char (point-max)) instead of
	end-of-buffer.

2004-02-25  Peter Seibel  <peter@javamonkey.com>

	* slime.el: Various bits of support for maintaining multiple SLIME
	connections to different Lisp implementations simultaneously.

	* swank-backend.lisp (lisp-implementation-type-name): Add function to
	return simple name of lisp implementation; used by new
	multi-connection functionality in slime.el.

2004-02-25  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (format-arglist): Use a special pprint-dispatch table.

2004-02-22  Lawrence Mitchell  <wence@gmx.li>

	* swank.lisp (format-arglist): Bind *PRINT-PRETTY* to NIL.
	(eval-in-emacs): Fix typo in docstring.

	* swank-cmucl.lisp (arglist-string): Bind *PRINT-PRETTY* to NIL.

2004-02-21  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	Add support for SERVE-EVENT based communication.

	* swank-sbcl.lisp (add-sigio-handler, remove-sigio-handlers):
	Renamed.
	(add-fd-handler, remove-fd-handlers): Implement interface.

	* swank-cmucl.lisp (fcntl): New function.
	(add-sigio-handler, remove-sigio-handlers): Renamed.
	(add-fd-handler, remove-fd-handlers): Implement interface.

	* swank.lisp (create-connection): Add support for fd-handlers.
	(install-fd-handler, deinstall-fd-handler): New functions.

	* swank-backend.lisp (add-sigio-handler): Renamed from
	add-input-handler.
	(remove-sigio-handlers): Renamed from remove-input-handlers.
	(add-fd-handler, remove-fd-handlers): New interface functions.

	* slime.el (slime-batch-test): Use sit-for instead of
	accept-process-output, so that we see something when swank gets
	compiled.  May be problematic in real batch mode.
	(loop-interrupt-continue-interrupt-quit): Wait a second before
	interrupting.  The signal seems to arrive before the evaluation
	request if don't wait => the endless loop is executed inside the
	debugger and sldb-quit will not be processed with fd-handlers.

	* swank.lisp (process-available-input): Move auxiliary function to
	toplevel.  Test if the stream is open.
	(install-sigio-handler): Handle the first request after installing
	the signal handler.

	* slime.el (slime-keys): Bind C-c C-x t to slime-list-threads and
	C-c C-x c to slime-list-connections.
	(slime): Disconnect before reconnecting if the inferior-lisp
	buffer wasn't renamed.
	(slime-connect): Use the host argument and not "localhost".
	(slime-compilation-finished): Undo last change.  Switch to the
	buffer to remove old annotations.
	(slime-choose-overlay-region): Ignore errors in
	slime-forward-sexp.

2004-02-18  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime): Just close the connection when called without
	prefix-argument.  Keeping the connection open doesn't make sense.
	We could ask if the Lisp process should be killed, though.
	(slime-maybe-close-old-connections): Delete unused function.
	(slime-start-swank-server): Use comint-send-string instead of
	comint-proc-query, 'cause I don't like Olin "100%" Shivers' code.
	(slime-init-output-buffer): Show some animations.
	(slime-repl-clear-output): Fixed.
	(slime-compilation-finished): It's not necessary to switch to the
	original buffer, because the buffer is encoded in the
	source-locations.
	(sldb-show-source): Don't raise an error if the source cannot be
	located.  Print a message instead, because errors in
	process-filters cause a 1 second delay.

	* swank-cmucl.lisp (read-into-simple-string): Workaround for
	read-sequence bug in 18e.

2004-02-18  Peter Seibel <peter@javamonkey.com>

	* swank-loader.lisp: Place the fasl files of different
	implementations in different directories.

2004-02-18  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-clisp.lisp: Update comments about metering package.

	* metering.lisp: Imported from CLOCC.  Suggested by Peter Seibel.

2004-02-17  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp, slime.el (make-compiler-note): Don't send the
	short-message across the wire if the slot is nil.

	* swank-cmucl.lisp (clear-xref-info): Compare the truenames with
	equalp instead of the unix-truenames.  The old version was very
	inefficient (clearing the tables with about 1000 entries required
	serveral seconds).
	(xref-context-derived-from-p, pathname=): Delete unused functions.

	* swank-clisp.lisp (remove-input-handlers):
	socket:socket-stream-handle is not available on Windows.
	Reported by Alan Shutko.

	* slime.el (slime-length>): New function.
	(slime-compiler-notes-to-tree): Don't collapse if there is only
	one kind of notes.

2004-02-16  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (make-compiler-note): Include short-message.

	* swank-sbcl.lisp (signal-compiler-condition): Initialize
	short-message slot.
	(long-compiler-message-for-emacs): New function.

	* swank-cmucl.lisp (handle-notification-condition): Don't use the
	context of the previous message.
	(signal-compiler-condition): Set short message slot.
	(long-compiler-message-for-emacs): New function.
	(sigio-handler): Ignore arguments.

	* swank-clisp.lisp (set-sigio-handler, add-input-handler):
	Conditionalize for linux.

	* swank-backend.lisp (compile-system-for-emacs): Add default
	implementation.
	(compiler-condition): New slot short-message.

	* slime.el (slime-compilation-finished): Display compiler notes
	grouped by severity in a separate buffer.
	(slime-compilation-finished-continuation, slime-compile-file)
	(slime-load-system, slime-compile-string): Update callers.
	(slime-list-compiler-notes, slime-alistify, slime-tree-for-note)
	(slime-tree-for-severity, slime-compiler-notes-to-tree)
	(slime-compiler-notes-mode, slime-compiler-notes-quit): New
	functions.
	(with-struct, slime-tree): New code for pseudo tree widget.
	(slime-init-connection-state): Set slime-state-name to "".

2004-02-08  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (create-socket): Fix last fix.  Use the proper
	port argument.

	* swank-allegro.lisp, swank-backend.lisp, swank-clisp.lisp,
	swank-cmucl.lisp, swank-lispworks.lisp, swank-openmcl.lisp,
	swank-sbcl.lisp (create-socket): Take interface as argument.

	* slime.el (sldb-show-frame-details): Fix typos.
	(slime-print-apropos): Don't bind action.
	(slime-reset): Kill sldb-buffers.
	(slime-test-find-definition, slime-test-complete-symbol)
	(slime-test-arglist): Add more slime-check-top-level calls.

	* swank.lisp (setup-server): Pass loopback-interface to
	create-socket.  Reported by Dirk Gerrits.
	(*loopback-interface*): New parameter.
	(sldb-loop): Send :debug event inside unwind-protect, so we never
	lose the corresponding :debug-return event.

2004-02-08  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp (find-source-locations): Eliminate unused
	variable warning.

	* swank.lisp (swank-pprint): Bind pretty print vars to
	*swank-pprint-X* counter parts.
	(*swank-pprint-circle*, *swank-pprint-escape*,
	*swank-pprint-level*, *swank-pprint-length*): Swank counterparts
	to *print-X* variables used when swank needs to pretty print a
	form.
	(apply-macro-expander): Use swank-pprint.

2004-02-07  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (send, receive, interrupt-thread): Implement
	more threading functions.

	* swank-sbcl.lisp (inspected-parts): Implemented.

	* slime.el (slime-rex): Mention thread argument in docstring.
	(sldb-break-with-default-debugger): Use slime-rex and don't switch
	to the output buffer (happens automatically).
	(slime-list-threads): Renamed from slime-thread-control-panel.
	(slime-thread-insert): Use slightly different layout.
	(slime-give-goahead, slime-waiting-threads)
	(slime-popup-thread-control-panel, slime-register-waiting-thread)
	(slime-thread-goahead): Deleted.
	(slime-maybe-start-multiprocessing): Call
	swank:startup-multiprocessing.  Reported by Paolo Amoroso.

	* swank.lisp (dispatch-event): :debug, :debug-condition,
	:debug-activate events were all encoded as :debug events, which
	means the debugger never worked!  Fix it.  I guess no one uses
	SLIME with a multithreaded Lisp.
	(read-user-input-from-emacs): Flush the output before reading.
	(sldb-loop): Add a sldb-enter-default-debugger tag, so we can
	enter the default debugger by throwing to it.
	(sldb-break-with-default-debugger): Throw to
	sldb-enter-default-debugger.
	(*thread-list*): New variable.
	(list-threads): New function.

	* swank-backend.lisp (thread-name): Take a thread object as
	argument.
	(thread-status, all-threads, thread-alive-p): New function.
	(thread-id): Deleted.

	* swank-allegro.lisp, swank-cmucl.lisp, swank-lispworks.lisp,
	swank-openmcl.lisp, swank-sbcl.lisp: Update for modified thread
	interface.

	* swank-sbcl.lisp (enable-sigio-on-fd): New function.  Use
	fallback if sb-posix:fcntl isn't fbound.

	* swank-cmucl.lisp (gf-definition-location): Return an error when
	pathname for the GF is nil (this happens if the GF is not compiled
	from a file).

	* swank.lisp (undefine-function): New function.
	(print-with-frame-label, print-part-to-string): Bind
	*print-circle* to t, to avoid unbound recursion when printing
	cyclic data structures.

	* slime.el (slime-undefine-function): New command.  Bound to C-c
	C-u.

2004-02-06  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (sldb-setup): Offer to enter a recursive edit if there
	are pending continuations.
	(slime-eval): Unwind the stack, thereby exititing recursive edits,
	before signaling the error.

2004-02-05  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-openmcl.lisp (compile-system-for-emacs): Remove compile
	time dependency on ASDF.

2004-02-05  Wolfgang Jenkner  <wjenkner@inode.at>

	* swank-clisp.lisp, swank-loader.lisp: Add profiling support via
	Kantrowitz's metering package.  Reporting needs to be
	refined (profile-package currently ignores callers-p and methods).

2004-02-04  Bryan O'Connor <bryan-slime@lunch.org>

	* swank-openmcl.lisp (mailbox): Use a semaphore instead of
	process-wait.  Works better with native threads.

2004-02-04  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-backend.lisp (debugger-info-for-emacs): Export it.

	* swank-sbcl.lisp (add-input-handler): Use fcntl from the sb-posix
	package.

	* swank.lisp (sldb-loop, dispatch-event, send-to-socket-io): Send
	a :debug-activate event instead of a :debug event (to avoid
	sending a potentially long backtrace each time).
	(handle-sldb-condition): Include the thread-id in the message.

	* slime.el (slime-path): Use load-file-name as fallback.
	Suggested by Lawrence Mitchell.
	(slime-dispatch-event): Add support for :debug-activate event.
	(sldb-activate): New function.
	(sldb-mode): make-local-hook doesn't seem to work in Emacs 20.
	Use a buffer local variable instead.
	(slime-list-connections): Don't print Lisp's state.
	(slime-short-state-name): Deleted.

2004-02-02  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-debugger): The customization group is called
	'slime-debugger', fix referrers.  Reported by Jouni K Seppanen.

	* swank.lisp (simple-break): Bind *debugger-hook* before invoking
	the debugger.  Reported by Michael Livshin.

2004-01-31  Robert E. Brown <bbrown@speakeasy.net>

	* swank-sbcl.lisp, swank.lisp: Add more type declarations and
	detect missing initargs for the connection struct.

2004-01-31  Jouni K Seppanen <jks@iki.fi>

	* slime.el (slime-path): Placed inside an eval-and-compile.  Works
	around some problems when byte-compiling slime-changelog-date.

2004-01-31  Marco Baringer  <mb@bese.it>

	* swank-openmcl.lisp: remove defslimefun-unimplemented forms.
	(call-with-compilation-hooks, compile-system-for-emacs): Implement
	them.
	(compile-file-for-emacs, compile-string-for-emacs): Use
	with-compilation-hooks.
	(list-callers): Define with defimplementation and not defslimefun.

	* swank-backend.lisp (compile-system-for-emacs): Declare method
	as part of the interface.

	* slime.el (slime-find-asd): Handle files whose directory does
	not contain an asdf system definition.

2004-01-31  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	Merge stateless-emacs branch into main trunk.  We use now signal
	driven IO for CMUCL and one thread per request for multithreaded
	Lisps.

2004-01-31  Robert E. Brown <bbrown@speakeasy.net>

	* swank-backend.lisp, swank-sbcl.lisp,
	swank-source-path-parser.lisp, swank.lisp: Add type declarations
	to keep SBCL quiet.

2004-01-29  Michael Weber <michaelw+slime@foldr.org>

	* slime.el, swank-backend.lisp, swank-cmucl.lisp, swank-sbcl.lisp,
	swank.lisp: Profiler support.

2004-01-23  Alan Ruttenberg <alanr-l@mumble.net>

	* swank-openmcl.lisp: Bind ccl::*signal-printing-errors* to nil
	inside debugger so that error while printing error take us down.

2004-01-23  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-sbcl.lisp (eval-in-frame, return-from-frame): Implemented.
	(sb-debug-catch-tag-p): New auxiliary predicate.
	(source-path<): Delete unused function.

2004-01-23  Michael Weber  <michaelw@foldr.org>

	* slime.el (slime-keys): Bind C-c M-p to slime-repl-set-package.
	(slime-easy-menu): Add entry for slime-repl-set-package.

2004-01-23  Michael Weber  <michaelw@foldr.org>

	* slime.el (slime-repl-set-package): New command to set the
	package in the REPL buffer.

	* swank.lisp (set-package): Return the shortest nickname.

2004-01-23  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (sldb-disassemble): Was lost somewhere.

2004-01-22  Wolfgang Jenkner  <wjenkner@inode.at>

	* swank-clisp.lisp: Replace defmethod by defimplementation where
	appropriate.
	(return-from-frame, restart-frame): Implement them.

2004-01-22  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* test.sh: Copy the ChangeLog file too.

	* swank-cmucl.lisp: Replace some defmethods with
	defimplementation.

	* swank-allegro.lisp (return-from-frame, restart-name): Implement
	interface (partly).

	* swank-openmcl.lisp (restart-frame, return-from-frame): Remove
	sldb-prefix.

	* swank-backend.lisp (return-from-frame, restart-frame):
	Are now interface functions.

	* swank.asd: Remove dependency on :sb-bsd-sockets.  Is already
	done in swank-sbcl.

	* swank-loader.lisp: Don't reference the swank package at
	read-time.

	* swank.lisp (completions): Never bind *package* to nil.  That's a
	type error in SBCL.
	(swank-debugger-hook): Flush the output streams and be careful
	when accessing *buffer-package*.
	(create-swank-server): Return the port of the serve socket.

	* swank-lispworks.lisp (interesting-frame-p): Don't print catch
	frames.
	(make-sigint-handler): New function.
	(emacs-connected): Use it.

	* slime.el (slime-lisp-implementation-type): New per connection
	variable.
	(slime-handle-oob): Handle debug-condition event.  Can be signaled
	CMUCL when cannot produce a backtrace.
	(slime-debugging-state): Don't pop up the debugger buffer an
	activate events. Annoying.
	(sldb-break-with-default-debugger): Switch to the output buffer
	before returning to the tty-debugger.
	(sldb-return-from-frame, sldb-restart-frame): Use slime-rex.
	(slime-list-connections, slime-short-state-name): New functions.

2004-01-20  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-complete-symbol): Insert the completed-prefix
	before deleting the original text to avoid troubles with left
	inserting markers.
	(slime-symbol-start-pos): Skip backward across symbol
	constituents.
	(slime-evaluating-state): [:read-sring] Save the window
	configuration.
	(slime-read-string-state): Don't handle activate events
	(troublesome if, e.g, complete-symbol is used from another
	buffer).  Restore the window configuration.
	(slime-repl-read-string): Goto the end of buffer.
	(slime-debugging-state): [:activate] Display the debugger buffer
	if not visible.
	(slime-to-lisp-filename, slime-from-lisp-filename)
	(slime-translate-to-lisp-filename-function)
	(slime-translate-from-lisp-filename-function, slime-compile-file)
	(slime-goto-location-buffer, slime-ed, slime-load-file): Support
	for remote filename translation (untested).

	* swank.lisp (create-swank-server): Take announce-fn as optional
	argument.

	* swank-allegro.lisp: Replace defmethod with defimplementation.
	(eval-in-frame): Implemented.

2004-01-20  Lasse Rasinen  <lrasinen@iki.fi>

	* slime.el (slime-prin1-to-string): Replacement for
	prin1-to-string that avoids escaping non-ascii characters in a
	way that the CL reader doesn't understand. Allows use of 8-bit
	characters in Lisp expressions with Emacs in unibyte-mode.

2004-01-20  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-eval-print-last-expression): Insert a newline
	before and after the result.
	(slime-easy-menu): Added menu items:
	"Eval Region", "Scratch Buffer", "Apropos Package..."
	Added some bold to default SLDB faces.

2004-01-19  Alan Ruttenberg  <alanr-l@mumble.net>
        *swank-openmcl.lisp in frame-catch-tags)
	(ppc32::catch-frame.catch-tag-cell -> 0)
	(ppc32::catch-frame.csp-cell -> 3. FIXME when this code is more
	stable in openMCL.

2004-01-19  Michael Weber  <michaelw@foldr.org>

	* slime.el (slime-close-all-sexp): New command to close all
	unmatched parens in the current defun. Bound to `C-c C-]'. With
	prefix argument, only operate in the region (for closing
	subforms).

2004-01-19  Luke Gorrie  <luke@bluetail.com>

	* swank-openmcl.lisp (thread-id, thread-name): Fixed silly bugs
	(thanks Marco Baringer).

	* swank-loader.lisp: Call (swank:warn-unimplemented-interfaces).

	* swank.lisp (ed-in-emacs): New command with the same interface
	as CL:ED.

	* swank-cmucl.lisp, swank-sbcl.lisp, swank-lispworks.lisp,
	swank-openmcl.lisp, swank-allegro.lisp, swank-clisp.lisp: Updated
	to use `defimplementation'.

	* swank-backend.lisp (definterface, defimplementation): New macros
	as sugar around defgeneric/defmethod. This supports conveniently
	supplying a default (on NO-APPLICABLE-METHOD).  Because the
	underly mechanism is still generic functions this doesn't break
	code that isn't updated.
	(warn-unimplemented-interfaces): Print a list of backend functions
	that are not implemented.
	(xref and list-callers): Defined interfaces for these functions.
	(describe-definition): New function that takes over from the many
	other describe-* functions called from apropos listing. Takes the
	type of definition (as returned by describe-symbol-for-emacs) as
	an argument.

	* slime.el (sldb-enable-styled-backtrace): This is now true by
	default.
	(slime-keys): Bound `slime-inspect' to `C-c I'.
	(slime): `M-x slime' now offers to keep existing connections
	alive (else disconnect them). If you disconnect them, the new
	connection gets to reuse the existing REPL.
	(slime-connection): Error if the connection is closed.
	(slime-handle-oob): New message (:ED WHAT) for `slime-ed'.
	(slime-display-output-buffer): Don't pop up the REPL if it is
	already visible in any frame.
	(slime-find-asd): Handle case where (buffer-file-name) is nil.
	(slime-ed): Elisp backend for (CL:ED WHAT).
	(slime-apropos): Add a summary line to apropos listings.
	(slime-print-apropos): Replaced `action' property (name of lisp
	describe function) with `type' (argument to pass to unified
	swank:describe-definition function).
	(slime-apropos-package): New command on `C-c P'. Presents apropos
	listing for all external (with prefix also internal) symbols in a
	package.

2004-01-18  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-lispworks.lisp (sigint-handler): Bind a continue restart.
	(make-dspec-location): Handle strings like pathnames.
	Some multithreading support.

	* slime.el (compile-defun): Don't use keywords.  The keyword
	package is locked in Lispworks and causes the test-suite to hang.
	(slime-eval-with-transcript): Fix bug triggered when 'package' is
	a buffer local variable.  Reported by Janis Dzerins.
	(slime-batch-test): Wait until the connection is ready.

2004-01-18  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-openmcl: Implement frame-catch-tags. Added debugger
	functions sldb-restart-frame, sldb-return-from-frame. Should
	probably be added to backend.lisp but let's discuss first. Do
	other lisps support this?

	* slime.el sldb-restart-frame, sldb-return-from-frame

2004-01-18  Wolfgang Jenkner  <wjenkner@inode.at>

	* swank-clisp.lisp (call-without-interrupts): Evaluate
	linux:SIGFOO at read time since the macro with-blocked-signals
	expects a fixnum.
	(compile-file-for-emacs): Comment fix.

2004-01-18  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-sbcl.lisp (make-fn-streams): Deleted.  Already defined in
	swank-gray.lisp.

	* swank.lisp (find-symbol-or-lose, format-arglist): New functions.
	(without-interrupts): New macro.
	(send-to-emacs): Use it.

	* swank-backend.lisp, swank-clisp.lisp, swank-lispworks.lisp,
	swank-openmcl.lisp, swank-sbcl.lisp, swank-allegro.lisp:
	(arglist-string): Refactor common code to swank.lisp.
	(call-without-interrupts, getpid): Are now generic functions.

	* slime.el (arglist): Test slot readers and closures.

	* swank-cmucl.lisp (arglist-string): Use
	pcl:generic-function-lambda-list for generic functions.  Handle
	closures.  Print arglist in lower case.
	(inspected-parts-of-value-cell): Was lost during the inspector
	refactoring.

2004-01-18  Wolfgang Jenkner  <wjenkner@inode.at>

	* swank-clisp.lisp (compile-file-for-emacs,
	split-compiler-note-line): Revert last change.
	(handle-notification-condition): Don't signal the condition.
	(*compiler-note-line-regexp*): Fix and rewrite it as extended
	regexp.

	* slime.el (slime-changelog-date): Use file-truename of
	byte-compile-current-file.

2004-01-17  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-format-arglist): Add some sanity checks and
	print zero argument functions nicer.  Suggested by Ivan Boldyrev.
	(slime-test-expect): Take test predicate as argument.
	(arglist): Test generic functions.

	* swank-cmucl.lisp (arglist-string): Handle generic functions
	better.  Reported by Ivan Boldyrev.

2004-01-16  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-allegro.lisp: Multiprocessing support.

	* swank-openmcl.lisp, swank-cmucl.lisp, swank-backend.lisp,
	swank.lisp: Refactor inspector code.

	* swank.lisp (changelog-date): Use *compile-file-truename* instead
	of *compile-file-pathname*.
	(with-I/O-lock, with-a-connection): The usual CLISP fixes.
	(create-swank-server): Patch by Marco Baringer <mb@bese.it>.
	Bring it back again.
	(create-connection): Use return the dedicated output stream if
	available.

	* slime.el: Numerous REPL related fixes.
	(slime-update-state-name): Take state as argument.
	(slime-repl-beginning-of-defun, slime-repl-end-of-defun): Fix
	typos.
	(sldb-insert-restarts): Remove duplicate definition.

2004-01-16  Luke Gorrie  <luke@bluetail.com>

	* swank-openmcl.lisp: Multiprocessing support.

	* swank.lisp (changelog-date): make-pathname portability fix
	(from alanr).
	(with-io-redirection): Use (current-connection) instead of
	*dispatching-connection* (from alanr).

	* slime.el (slime-init-output-buffer): XEmacs portability fix, and
	use header-line-format to show info about Lisp in Emacs21.

2004-01-15  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-sbcl.lisp, swank-cmucl.lisp (remove-input-handlers): New
	method.

	* swank-allegro.lisp (excl:stream-read-char-no-hang): Import it.
	(emacs-connected): Add default method.  The method for
	no-applicable-method doesn't seem to work.  ACL bug?

	* swank-loader.lisp (compile-files-if-needed-serially): Don't
	handle compilation errors.  We must compile everything because
	changelog-date requires *compile-file-truename*.

	* slime.el: (slime-changelog-date)
	(slime-check-protocol-version): New functions.
	(slime-handle-oob): Handle :check-protocol-version event.
	(slime-init-output-buffer): Print some info about the remote Lisp.
	(slime-connect): Use it.
	(slime-note-transcript-start): Renamed from
	slime-insert-transcript-delimiter.
	(slime-note-transcript-end): New function.
	(slime-with-output-end-mark, slime-repl-insert-prompt)
	(slime-repl-show-result, slime-compile-file)
	(slime-show-evaluation-result): Insert output from eval commands
	after the prompt and asynchronous output before the prompt.  Needs
	documentation.
	(repl-test, repl-read, interactive-eval-output): New tests.
	(slime-flush-output): Accept output from all processes.

	* swank.lisp (serve-requests): New function.
	(setup-server): Use it.
	(start-server): Pass backgroud to setup-server.
	(create-connection): Check the protocol version.
	(changelog-date): New function.
	(make-output-function): Use write-string instead of princ.

	* swank-backend.lisp (remove-input-handlers): New function.

2004-01-15  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-aux-connect, slime-handle-oob): Support for
	(:open-aux-connection port) message where Lisp requests that
	Emacs make a connection. These are "auxiliary" connections which
	don't (or at least shouldn't) have their own REPL etc.

	* swank.lisp: New support for multiprocessing and multiple
	connections + commentary.
	(with-a-connection): Macro to execute some forms "with a
	connection". This is used in the debugger hook to automatically
	create a temporary connection if needed (i.e. if the current
	thread doesn't already have one).
	(open-aux-connection): Helper function to create an extra
	connection to Emacs.

	* swank-sbcl.lisp: Implemented multiprocessing. Not perfect.

	* swank-cmucl.lisp: Implemented new multiprocessing interface.
	(create-socket): Make FDs non-blocking when multiprocessing is
	enabled.
	(startup-multiprocessing): Set *swank-in-background* to :spawn.

	* swank-backend.lisp: Changed multiprocessing interface.

2004-01-15  Wolfgang Jenkner  <wjenkner@inode.at>

	* swank-clisp.lisp (with-blocked-signals): New macro.
	(without-interrupts): Use it.
	(*use-dedicated-output-stream*, *redirect-output*): Don't set them
	here, use the default settings.
	Make :linux one of *features* if we find the "LINUX" package.

2004-01-14  Luke Gorrie  <luke@bluetail.com>

	* swank-openmcl.lisp (emacs-connected): Typo fix (missing
	close-paren).

2004-01-13  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-input-complete-p): Tolerate extra close parens.
	(slime-idle-state): Don't active the repl.
	(slime-insert-transcript-delimiter): Insert output before prompt.
	(slime-open-stream-to-lisp): Initialize the process-buffer with
	the connection buffer.
	(slime-repl-activate): Deleted.
	(slime-repl-eval-string, slime-repl-show-result)
	(slime-repl-show-abort): Better handling of abortion.
	(slime-compile-file): Insert output before prompt.

	* swank-lispworks.lisp (create-socket): Fix condition message.

	* swank-openmcl.lisp (*swank-in-background*): Set to :spawn.
	(emacs-connected): Initialize ccl::*interactive-abort-process*.

	* swank.lisp (*swank-in-background*): New variable.
	(start-server): Start swank in background, depending on
	*swank-in-background*.

	* swank-cmucl.lisp, swank-sbcl.lisp (*swank-in-background*): Set
	to :fd-handler.

	* swank-clisp.lisp (accept-connection): Remove superfluous call to
	socket-wait.

	New more direct socket interface.  The new interface is closer to
	the functions provided by the implementations.  For Lispworks we
	use some non-exported functions to get a sane interface.  The
	interface also includes add-input-handler and a spawn function
	(not used yet).  The idea is that most of the logic can be shared
	between similar backends.

	* swank-gray.lisp (make-fn-streams): New function.
	(stream-read-char-no-hang, stream-read-char-will-hang-p): Moved to
	here from swank-clisp.lisp.

	* swank-allegro.lisp, swank-clisp.lisp, swank-cmucl.lisp,
	swank-lispworks.lisp, swank-openmcl.lisp, swank-sbcl.lisp:
	(create-socket, local-port, close-socket, accept-connection)
	(add-input-handler, spawn): Implement new socket interface.

	* swank.lisp (start-server, open-dedicated-output-stream &etc):
	Use new socket functions.

	* swank-backend.lisp (create-socket, local-port, close-socket)
	(accept-connection, add-input-handler, spawn): New functions.
	(accept-socket/stream, accept-socket/run): Deleted.

2004-01-13  Luke Gorrie  <luke@bluetail.com>

	* swank-clisp.lisp: Updated for new network interface but not
	tested! Probably slightly broken.

	* swank-lispworks.lisp: Updated for new network interface.
	(accept-socket/stream): This function is currently broken, so
	LispWorks can't use the dedicated output channel at the moment.

	* swank.lisp, swank-cmucl.lisp, swank-sbcl.lisp: Updated for new
	network interface.

	* swank-backend.lisp (accept-socket/stream, accept-socket/run):
	New functions replacing the ancient (over 24 hours!)
	`create-socket-server'. This interface is much simpler.

2004-01-12  Luke Gorrie  <luke@bluetail.com>

	* swank-lispworks.lisp: Partially updated for new backend
	interface, but not actually working. The sockets code is broken, I
	haven't grokked LispWorks the interface properly.

	* swank-gray.lisp (slime-input-stream, slime-output-buffer): Added
	slots to support the new `make-fn-streams' interface from
	swank-backend.lisp. These slots need to be initialized by the
	backend, see swank-sbcl.lisp for an example (very easy).

	* swank-sbcl.lisp (create-socket-server): Implemented new server
	interface.

	* slime.el (slime-handle-oob): Added
	:open-dedicated-output-stream message, previously implemented
	with :%apply.
	(slime-repl-read-string, slime-repl-return-string): Pass integer
	argument to `slime-repl-read-mode' to set rather than toggle.

	* swank.lisp: Taking over previously non-portable jobs:
	(start-server): Now only uses sockets code from the backend.
	(handle-request): Top-level request loop.
	(open-dedicated-output-stream): Dedicated output socket.
	(connection): New data structure that bundles together the things
	that constitute a connection to Emacs: socket-level stream and
	user-level redirected streams.

	* swank-cmucl.lisp (create-socket-server): Generic TCP server
	driven by SERVE-EVENT.
	(serve-one-request, open-stream-to-emacs): Deleted. Now handled
	portably in swank.lisp.
	(make-fn-streams): Implement new stream-redirection interface.
	(slime-input-stream): New slot referencing output sibling, so it
	can be forced before input requests.

	* swank-backend.lisp (create-socket-server): Generic
	callback-driven TCP server interface. Replaces
	`create-swank-server', with the higher-level logic moved into
	swank.lisp.
	(emacs-connected): Invoked when Emacs initially connects, as a
	hook for backend implementations.
	(make-fn-streams): Interface for creating pairs of input/output
	streams that are backended by callback functions. Used to
	implement redirected-via-Emacs standard I/O streams.

2004-01-12  Lawrence Mitchell  <wence@gmx.li>

	* slime.el (slime-events-buffer): Set `hs-block-start-regexp'
	before running `hs-minor-mode'.

2004-01-10  Luke Gorrie  <luke@bluetail.com>

	* slime.el (package-updating): Expected package is now a list (can
	be any), since the shortest nickname is not
	standardized. e.g. USER or CL-USER for COMMON-LISP-USER.

	* swank-cmucl.lisp: Don't enable xref (let the user decide).
	(set-fd-non-blocking): Removed unused function.
	Miscellaneous refactoring of the networking code.

	* slime.el (slime-complete-symbol): Use markers to hold the
	beginning and end of the completion prefix, in case looking up
	completions causes insertions (e.g. GC announcements).

2004-01-09  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-activate-state): Only update state name when
	`slime-default-connection' activates. This fixes an annoying
	"Selecting deleted buffer" bug that prevented SLIME from being
	restarted.
	(slime-next-connection): Fixed a bug where buffer-local connection
	bindings could get in the way and prevent the connection from
	actually changing.
	(slime-complete-restore-window-configuration): Wrap
	`set-window-configuration' in `save-excursion'. This fixes a
	problem where the cursor would end up in the wrong place after
	completion in XEmacs.

2004-01-09  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Place (require 'cl) inside a eval-and-compile.
	(slime-with-connection-buffer): Move definition upwards before the
	first use.
	(package-updateing): New test for package updates in the listeners.

	* swank.lisp (eval-region): Bind *package* outside the
	unwind-protect to detect updates.

	* swank-backend.lisp (debugger-info-for-emacs)
	(find-function-locations): Doc fix.

2004-01-09  Wolfgang Jenkner  <wjenkner@inode.at>

	* swank-clisp.lisp: Add methods for GRAY:STREAM-READ-CHAR-NO-HANG
	and for the CLISP specific GRAY:STREAM-READ-CHAR-WILL-HANG-P.
	This should fix the behaviour of SYS::READ-FORM.

2004-01-08  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-inspector-fontify): Function to insert a string
	in a particular inspector face. Replaces macro-code-generation
	function `slime-inspector-expand-fontify'. Fixes a byte-compile
	problem (macro was calling function not defined at compile-time).

2004-01-07  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Multisession internal improvements. Now there are
	three separate connection variables, in order of priority:
	  slime-dispatching-connection (dynamically-bound)
	  slime-buffer-connection      (buffer-local)
	  slime-default-connection     (global)
	The most specific one available is used. This is splitting
	`slime-connection' into multiple variables, so that you can be
	specific about what you want to assign (i.e. know if you're
	setting a dynamic binding or a buffer-local one).
	Fixed some related bugs.
	(slime-connection-close-hook): If default connection closes,
	select another connection.
	(slime-lisp-package): Initially CL-USER nickname instead of
	COMMON-LISP-USER (for REPL prompt).

	* slime.el (slime): Multisession support: with prefix argument,
	gives the option of keeping existing sessions and firing up an
	additional *inferior-lisp* to connect to. Each connection now has
	its own *slime-repl[<n>]* buffer.
	(slime-connection): Should now be read via the function of the
	same name. The accessor will check if the value is NIL, and if so
	use `slime-default-connection'.
	(slime-default-connection): The connection that will be used by
	default, i.e. unless `slime-connection' is bound. Renamed from
	`slime-primary-connection'.
	(slime-init-connection-state): When reconnecting, update the
	`slime-connection' binding in the REPL to use the new connection.
	(slime-repl-input-history, ...): REPL variables are now
	buffer-local.

2004-01-06  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (eval-string): New argument 'id'.  Used to identify
	the remote continuation.
	(log-event): New debugging function.
	(read-from-emacs, send-to-emacs): Use it.

	* slime.el: The new macro 'slime-rex' can now be used to evaluate
	sexps remotely.  It offers finer control what to do when the
	evaluation aborts.
	(slime-rex): New macro
	(slime-eval, slime-eval-async, sldb-continue)
	(sldb-invoke-restart): Use it.
	(slime-continuation-counter, slime-push-evaluating-state): New
	functions.
	(slime-output-buffer): Initialize markers.
	(sldb-mode): XEmacs doesn't like (add-hook (make-local-hook ...)).
	(slime-init-connection): New optional argument SELECT.
	(slime-def-connection-var): Workarounds for Emacs 20 reader bugs.
	Backquote is pretty broken Emacs 20.

2004-01-06  Ignas Mikalajunas <i.mikalajunas@mbt.lt>

	* swank-loader.lisp (user-init-file): Use merge-pathames.  Fix
	Windows support.

2004-01-05  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Multiple session support, i.e. Emacs can open
	multiple connections to Lisps. The guts is there, but
	user-interface is currently minimal.
	(slime-net-process): Replaced with slime-net-processes.
	(slime-net-send): Take process as argument.
	(slime-process-available-input): Poll all connections.
	(slime-connection): Current connection (process) to use for
	talking to Lisp. Can be bound dynamically or buffer-local.
	(slime-with-connection-buffer): Macro to enter the process-buffer
	of `slime-connection' to manipulate the local variables.
	(slime-stack-stack): Now buffer-local in the process-buffer of
	each connection.
	(slime-push-state, slime-pop-state): Operate on the stack inside
	`slime-connection's process-buffer.
	(slime-dispatch-event): Take optional process argument, to bind
	`slime-connection' appropriately when events arrive from the
	network.
	(slime-def-connection-var): Macro to define variables that are
	"connection-local". Such variables are used via (setf'able)
	accessor functions, and their real bindings exist as local
	variables in the process-buffers of connections. The accessors
	automatically work on `slime-connection'.
	(slime-lisp-features, slime-lisp-package, slime-pid, sldb-level):
	These variables are now connection-local.
	(slime-read-from-minibuffer): Inherit `slime-connection' as
	buffer-local so that we complete towards the right Lisp.
	(sldb-mode): Inherit `slime-connection' as buffer-local so that we
	debug towards the right Lisp.
	(get-sldb-buffer): New function to return (optionally create) the
	SLDB buffer for the current connection. Since multiple Lisps can
	be debugged simultaneously, the buffername now includes the
	connection number.
	(slime-connection-abort): New command to abort a connection
	attempt (don't use `slime-disconnect' anymore - that closes all
	connections).
	(slime-execute-tests): Honor `slime-test-debug-on-error'.
	(slime-next-connection): Cycle through open Lisp connections.

2004-01-02  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-display-output-buffer): Move the output markers
	to the end of the buffer.

	* swank-clisp.lisp (frame-do-venv): Rename the :symbol property to
	:name.
	(format-condition-for-emacs): Replaced with
	debugger-condition-for-emacs.
	(backtrace): Use print-with-frame-label.

	* swank-openmcl.lisp (format-condition-for-emacs): Replaced with
	debugger-condition-for-emacs.
	(backtrace): Use print-with-frame-label.
	(frame-locals): Rename the :symbol property to :name.

	* swank-lispworks.lisp (format-condition-for-emacs): Replaced with
	debugger-condition-for-emacs.
	(backtrace): Use print-with-frame-label.
	(frame-locals): Rename the :symbol property to :name.

	* swank-allegro.lisp (frame-locals): Rename the :symbol property
	to :name.
	(format-condition-for-emacs): Replaced with
	debugger-condition-for-emacs.
	(backtrace): Use print-with-frame-label.

	* swank-sbcl.lisp (tracedp, toggle-trace-fdefinition)
	(format-condition-for-emacs): Remove unused functions.
	(format-frame-for-emacs): Use print-with-frame-label.
	(compute-backtrace): Simplified.
	(backtrace): Return our frame numbers.
	(frame-locals): Rename the :symbol property to :name.  Remove the
	:validity property.

	* swank-cmucl.lisp (accept-loop, safe-definition-finding): Doc
	fix.
	(location-buffer=, file-xrefs-for-emacs)
	(sort-contexts-by-source-path, source-path<)
	(format-condition-for-emacs): Remove unused functions.
	(format-frame-for-emacs): Don't include the frame number in the
	description, but use the frame number for indentation. Update
	callers.
	(frame-locals): Rename the :symbol property to :name.

	* slime.el (slime-add-face): New function.
	(sldb-add-face): Use it.
	(sldb-setup): Some refactoring.
	(sldb-insert-condition): New function.  Factorized from
	sldb-setup.  Message and types are now separate.
	(sldb-insert-restarts): New function.  Factorized from sldb-setup.
	(sldb-insert-frame): Factorized from slime-insert-frames. The
	frame number in no longer part of the string describing the frame.
	(sldb-insert-frames): Use it.
	(sldb-show-frame-details): Print frame numbers.  Fix printing of
	catch tags.  Move to the start of the frame before at the
	beginning to get unfontified text properties.
	(sldb-inspect-condition): New command.
	(sldb-insert-locals): The :symbol property is now called :name.
	Fix locals with :id attribute.
	(slime-open-inspector): Fix the bugs I introduced last time.

	* swank.lisp (safe-condition-message): New function.
	(debugger-condition-for-emacs): Used to be
	format-condition-for-emacs in each backend.  Separate the
	condition message from the type description.  Update all backends
	accordingly.
	(print-with-frame-label): New function.

	* slime.el (slime-hyperspec-lookup): New function.

2004-01-02  Wolfgang Jenkner <wjenkner@inode.at>

	* swank-clisp.lisp: New file.  Merged with Vladimir's version.

	* xref.lisp: New file.  Used by swank-clisp.

	* swank-loader.lisp (user-init-file): Add CLISP files.

	* swank.lisp (eval-region, tokenize-completion): Modify loops a
	bit to make CLISP happy.

	* swank-backend.lisp (with-compilation-hooks): Replace () with
	(&rest _) to make CLISP happy.

	* slime.el (slime-goto-source-location): Support for CLISP style
	line numbers. Split it up.
	(slime-goto-location-buffer, slime-goto-location-position): New
	functions.
	(slime-load-system): Use slime-display-output-buffer.
	(slime-repl-mode): Disable conservative scrolling. Not sure if it
	was a good idea.
	(sldb-insert-frames, sldb-show-frame-details, sldb-list-locals):
	Minor fixes.
	(sldb-insert-locals): Renamed from sldb-princ-locals.
	(sldb-invoke-restart): Use slime-eval instead of
	slime-oneway-eval, because interactive restarts may read input.
	(slime-open-inspector): Minor indentation fixes.
	(slime-net-output-funcall): Removed.  Was unused.

2003-12-19  Alan Ruttenberg  <alanr-l@mumble.net>

	* slime.el 1.157 fix bug in sldb-princ-locals I introduced when
	adding fonts to sldb

2003-12-19  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-openmcl.lisp 1.42 in request-loop register output stream
	to be periodically slushed per Gary Byer's email.
	* slime.el 1.156 slime-goto-source-location. Sometimes source
	information is recorded but it isn't a standard "def" in that
	case, don't error out, just look for the most likely place for the
	definition.

2003-12-19  Luke Gorrie  <luke@bluetail.com>

	* null-swank-impl.lisp: Deleted this old file. See
	swank-backend.lisp instead.

2003-12-18  Alan Ruttenberg  <alanr-l@mumble.net>

	* swank-openmcl.lisp 1.41
	in openmcl (break) now goes into slime debugger.
	(setq swank:*break-in-sldb* nil) to disable that.

2003-12-17  Alan Ruttenberg  <alanr-l@mumble.net>

        * slime.el 1.155 Allow font choices for backtrack. Add group for
	customizing them: sldb.  Whole thing is enabled with
	sldb-enable-styled-backtrace which is off by default, for now.

	Try
	 '(sldb-condition-face
	    ((t (:foreground "DarkSlateGray" :weight bold))))
	 '(sldb-detailed-frame-line-face
	     ((t (:foreground "brown" :weight bold :height 1.2))))
	 '(sldb-local-name-face ((t (:weight bold))))
	 '(sldb-restart-face ((t (:foreground "DarkBlue" :weight bold))))
	 '(sldb-restart-number-face ((t (:underline t :weight bold))))
	 '(sldb-restart-type-face
	   ((t (:foreground "DarkSlateGrey" :weight bold))))
	 '(sldb-section-face ((t (:weight bold :height 1.2))))
	 '(sldb-selected-frame-line-face
	    ((t (:foreground "brown" :weight bold :height 1.2))))
	 '(sldb-topline-face
	      ((t (:foreground "brown" :weight bold :height 1.2))))

2003-12-17 Alan Ruttenberg <alanr-l@mumble.net>

         slime.el 1.154
	Allow some face choices in the inspector. Try
	 '(slime-inspector-label-face ((t (:weight bold))))
	 '(slime-inspector-topline-face
	   ((t (:foreground "brown" :weight bold :height 1.2))))
	 '(slime-inspector-type-face
	  ((t (:foreground "DarkRed" :weight bold))))
	You can also set slime-inspector-value-face

2003-12-17 Alan Ruttenberg <alanr-l@mumble.net>

	* swank-openmcl.lisp 1.40
	Fix an error with frame-source-location-for-emacs when the
	function was a method-function.
	Defined method-source-location that handles this case. You can
	still end up looking at the wrong definition, as the protocol
	doesn't allow passing back the qualifiers and specializers to look
	up the correct one in the file.

	* swank-openmcl.lisp 1.39
	Allow you to continue after interrupting.
	Properly set *swank-debugger-stack-frame* when interrupting.

	* slime.el 1.152
	sldb-continue now uses slime-oneway-eval

2003-12-17  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Better handling of asynchronous output.
	(slime-output-end): New variable.  Use this marker to insert
	output.  Insert asynchronous output inserted before the "input
	region" and before the prompt.
	(slime-show-last-output): Use it.
	(slime-repl-insert-prompt): Initialize it.
	(slime-last-output-start): Removed.
	(slime-flush-output): Increase delay to 20 usecs.
	(slime-with-output-end-mark): Renamed from
	slime-with-output-at-eob.  Insert a newline if needed.
	(slime-output-string, slime-repl-activate): Use it.
	(slime-repl-return): Ensure that slime-repl-input-end-mark points
	to a reasonable location.

2003-12-17  Luke Gorrie  <luke@bluetail.com>

	* HACKING: New file summarising our way of working.

2003-12-16  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-lisp-preferred-package-nicknames): Removed. Not
	very interesting (and slightly broken) now that shortest-nicknames
	are automatically used.
	(slime-output-oneway-evaluate-request): New function to evaluate
	an expression for side-effects (without getting a
	result).
	(slime-idle-state): Handle new :emacs-evaluate-oneway.
	(slime-debugging-state): Handle :emacs-evaluate-oneway.
	(sldb-invoke-restart): Use slime-oneway-eval. This avoids pushing
	an evaluating state (which will be aborted, and print an unnecessary
	message saying so).
	(sldb-break-with-default-debugger): New command to break into the
	default TTY debugger. Bound to 'B' in *sldb*.
	(slime-read-string-state): Added :emacs-evaluate-oneway.

	* swank.lisp (invoke-nth-restart-for-emacs): Wrapper around
	INVOKE-NTH-RESTART that checks that Lisp and Emacs agree on the
	debug level. This detects and ignores old restart requests when
	several are sent at once (possible because of new oneway-eval
	feature).
	(oneway-eval-string): New function to evaluate a string without
	sending a result, and with *DEBUGGER-HOOK* bound to NIL. (The
	debugger hook is inhibited to avoid state conflicts.)

2003-12-15  Luke Gorrie  <luke@bluetail.com>

	* swank-openmcl.lisp (ccl::*warn-if-redefine-kernel*): Support for
	interrupting the listener (by Alan Ruttenberg).

2003-12-15  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp *start-swank-in-background*: Set to t by default.

	* slime.el (slime-eval-last-expression-display-output): New
	command.  Bound to C-x M-e.  Suggested by Nicolas Neuss.
	(slime-display-output-buffer): New function.
	(slime-slime-compile-file): Use it.

2003-12-15  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (*processing-rpc*, *multiprocessing-enabled*,
	*debugger-hook-passback*): New variables.
	(with-conversation-lock, with-I/O-lock): New macros.
	(read-next-form): Use with-I/O-lock.
	(send-to-emacs): Use with-I/O-lock.
	(swank-debugger-hook): When called asynchronously (i.e. not
	during RPC) and multiprocessing is enabled, suspend until
	acknowleged by Emacs.
	(install-global-debugger-hook): Install a SLIME-DEBUGGER-FUNCTION
	globally on *DEBUGGER-HOOK*.
	(startup-multiprocessing-for-emacs): Called to initialize
	multiprocessing.
	(eval-string): Dynamically set the *PROCESSING-RPC* flag.
	(eval-string): Nasty hack with *DEBUGGER-HOOK-PASSBACK* to
	install debugger hook. Temporary, I swear!
	(eval-region, shortest-package-nickname): Report the shortest
	package nickname to Emacs (for the REPL prompt). Patch from Marco
	Baringer.

	* swank-backend.lisp: Defined multiprocessing interface.

	* swank-cmucl.lisp: Implmemented the multiprocessing interface.

	* slime.el (slime-multiprocessing): When true, use
	multiprocessing in Lisp if available.
	(slime-global-debugger-hook): When true, globally set
	*debugger-hook* to use the SLIME debugger. For use with
	SERVE-EVENT and multiprocessing.
	(slime-handle-oob): Handle :AWAITING-GOAHEAD message from threads
	that have suspended to wait for Emacs's attention.
	(slime-give-goahead): New command to allow a suspended thread to
	continue (bound to RET in the thread-control-panel).
	(slime-thread-control-panel): New command to display a buffer
	showing all threads that are suspending waiting for Emacs's
	attention. Bound to `C-c C-x t'.
	(slime-popup-thread-control-panel): When true, automatically
	popup the thread-control buffer when a new thread suspends.

2003-12-14  Alan Ruttenberg <alanr-l@mumble.net>

	* swank-openmcl.lisp (eval-in-frame, inspect-object and friends):
	Most of this is copied from swank-cmucl. The parts between &&&&&
	are what I added for openmcl. I piggyback off the inspector which
	is shipped with openmcl, so inspecting won't look the same as it
	would in cmucl, I imagine. Still, it's a start.  eval in frame
	uses frame-locals to get bindings so if you have debug settings
	low or don't have *save-local-symbols* set you won't be able to
	evaluate.

2003-12-14  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-lispworks.lisp (tracedp, toggle-trace-fdefinition): Moved
	to swank.lisp.

	* swank-allegro.lisp (create-swank-server): Add support for
	BACKGROUND and CLOSE argument.
	(call-with-debugging-environment): Use excl::int-newest-frame to
	avoid the kludge with *break-hook*.
	(sldb-abort): New function.
	(frame-source-location-for-emacs): Dummy definition.
	(compile-file-for-emacs): The argument is called
	:load-after-compile and not :load.
	(xref-results-for-emacs): Use dolist instead of loop.

	* swank-openmcl.lisp (create-swank-server): Add support for
	BACKGROUND and CLOSE argument.
	(open-stream-to-emacs): Support for dedicated output stream.

	* swank.lisp: *start-swank-in-background*,
	*close-swank-socket-after-setup*, *use-dedicated-output-stream*:
	Moved here from swank-cmucl.
	(sldb-continue): Don't pass the condition as argument, because
	that doesn't work with Allegro.
	(toggle-trace-fdefinition, tracedp): Replace backend specific code
	with portable, but ugly, calls to eval.

	* swank-cmucl.lisp (compile-system-for-emacs): Add method for
	CMUCL.

	* slime.el (slime-goto-source-location): Better regexp for package
	qualified symbols.  Allow dashes in the name and two colons.
	Reported by Alan Ruttenberg.

2003-12-13  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-openmcl.lisp (create-swank-server): Interrupt the right
	thread.  Patch by Alan Ruttenberg.  Not yet enabled, due to lack
	of test platform.
	(sldb-disassemble): Implement sldb-disassemble command.  Patch by
	Alan Ruttenberg.
	Remove #' from lambdas.

2003-12-12  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (create-swank-server): New keyword arguments to
	control the server: BACKGROUND and CLOSE.  fd-handlers are used if
	BACKGROUND is true.  If close CLOSE is true, close the socket
	after the first connection; keep it open otherwise.
	*start-swank-in-background*, *close-swank-socket-after-setup*: The
	default values of the corresponding arguments for
	create-swank-server.
	(compile-file-for-emacs): Don't load the fasl-file when the
	compilation failed.

	* swank-openmcl.lisp (toggle-trace-fdefinition, tracedp):
	Implement trace command.  Patch by Alan Ruttenberg.
	(find-function-locations, find-source-locations): Handle
	variables, and method-combinations.  General cleanups.
	(source-info-first-file-name): Removed.
	(list-callers): Fixed.
	(list-callers): Fixed some more.  method-name is not exported in
	0.14.  From Marco Baringer.
	(swank-accept-connection): Accept multiple connections.  Patch by
	Marco Baringer.

	* swank-loader.lisp (user-init-file): Use homedir's truename.
	Reported by Friedrich Dominicus.

	* slime.el (slime-repl-current-input): Don't remove the final
	newline if we are in reading state.
	(slime-goto-source-location): Regex-quote the function-name and
	handle package prefixes.  Reported by Alan Ruttenberg.
	(slime-output-string): Insert asynchronous output before the
	prompt.

2003-12-12  Daniel Barlow  <dan@telent.net>

	* swank-source-path-parser.lisp: new file, excerpting part of
	swank-cmucl.lisp to where SBCL can find it as well.

2003-12-11  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-one-line-ify): New function to convert
	multi-line strings to one-liners by replacing any newline
	followed by indentation by a single space.
	(slime-xrefs-for-notes): Use it.

2003-12-11  Daniel Barlow  <dan@telent.net>

	* swank-sbcl.lisp (compiler-note-location): replace with
	thinly-ported version from the CMUCL backend which understands
	:lisp as a pathname

	* slime.el (slime-xrefs-for-notes): a little more temporary
	variables, a little less cdr.  Should be slightly faster on
	big systems
	(slime-goto-next-xref): set window point as well as buffer point -
	now works in GNU Emacs 21.2.1

	* swank.lisp (swank-compiler): new function abstracts commonality
	between swank-compile-{file, string}.
	(swank-load-system): call swank-compiler to load asdf system

	* swank-sbcl.lisp (compiler-note-location and elsewhere):
	remove all trace of *compile-filename*
	(compile-*-for-emacs): shorten

	* swank-backend.lisp (call-with-compilation-hooks): new GF
	should set up all appropriate error condition loggers etc
	to do a compilation preserving the notes.  Implement for
	sbcl, cmucl

	* slime.el (slime-find-asd, slime-load-system): new command
	to compile and load an ASDF system with all the usual compiler
	notes and stuff
	(slime-compilation-finished): if more than one file has new
	errors/notes, create an xref buffer to show them all
	(slime-remove-old-overlays): bug fix: now removes overlays even
	at start of buffer
	(slime-overlay-note): do nothing quietly if
	slime-choose-overlay-region returns nil
	(slime-choose-overlay-region): return nil if note has no location

2003-12-11  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-repl-previous-prompt, slime-repl-next-prompt):
	New commands.  Suggested by Håkon Alstadheim.
	(slime-repl-beginning-of-defun, slime-repl-end-of-defun): New
	commands.  Suggested by Andreas Fuchs.
	(slime-repl-insert-prompt): Mark the prompt with a
	slime-repl-prompt text property.
	(slime-repl-eol): New function. Mostly for symmetry.
	(slime-repl-in-input-area-p, slime-repl-at-prompt-end-p): New
	predicates.
	(slime-repl-find-prompt, slime-search-property-change-fn): New
	functions.
	(slime-ir1-expand): New command.

	* swank-cmucl.lisp (accept-connection, request-loop): Don't use
	fd-handlers. The code for the request-loop itself is now almost
	the same as in the Allegro version.
	(print-ir1-converted-blocks, expand-ir1-top-level): New functions.

2003-12-10  Daniel Barlow  <dan@telent.net>

	* swank-sbcl.lisp (serve-request): more fiddling with serve-event
	descriptors

	* slime.el (slime-repl-return): slime-check-connected, otherwise
	pressing Return in an unconnected repl gets a bit weird

2003-12-10  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-allegro.lisp, swank-lispworks.lisp, swank-openmcl.lisp,
	swank-sbcl.lisp (create-swank-server): Accept an announce-function
	keyword argument.

	* swank.lisp (start-server): Pass an announce callback function to
	create-swank-server.  Works better with single threaded
	implementations.
	(announce-server-port, simple-announce-function): New functions.
	(alistify): Doc fix.

	* swank-cmucl.lisp (create-swank-server): Use announce callback.
	(sldb-disassemble): New function.

	* slime.el (sldb-disassemble): New command. Bound to D.

2003-12-08  Luke Gorrie  <luke@bluetail.com>

	* swank-cmucl.lisp (*debug-definition-finding*): Now nil by
	default, so that errors while looking for definitions are printed
	as a message and not debugged.

	* slime.el (slime-read-from-minibuffer): Now the only
	completing-read function, stale ones deleted.

2003-12-07  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-prune-initial-frames): Use regexp-heuristics and
	the '--more--' token to avoid showing the user Swank-internal
	backtrace frames initially.
	(slime-repl-current-input): Don't include the final newline
	character, to make backtraces prettier.
	(slime-autodoc): Fixed annoying case where autodocs would be
	fetched in a loop for undocumented symbols.

	* swank.lisp (compound-prefix-match): New name and rewritten for
	speed. Completion is much faster now.
	(*sldb-initial-frames*): Send up to this many (default 20)
	backtrace frames to Emacs when entering the debugger.

2003-12-07  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-allegro.lisp, swank-backend.lisp, swank-cmucl.lisp,
	swank-lispworks.lisp, swank-openmcl.lisp, swank-sbcl.lisp
	(function-source-locations): Make it at generic function.
	(function-source-location-for-emacs): Removed.  Fixes bug reported
	by Marco Baringer.

	* slime.el (slime-interactive-eval): Insert the result at point,
	if called with prefix argument.

2003-12-06  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-easy-menu): Added menubar support, contributed
	by Friedrich Dominicus.

2003-12-06  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-allegro.lisp: New file.

	* swank-loader.lisp (user-init-file): Translate logical
	pathnames.  Reported by Friedrich Dominicus.

	* swank-sbcl.lisp (handle-notification-condition): Don't ignore
	warnings without context.
	(compiler-note-location, brief-compiler-message-for-emacs,
	compiler-note-location): Handle null context.
	(compile-file-for-emacs): Bind *compile-filename* and load the
	fasl file only if it exists.
	(function-source-location): The name argument is now optional and
	should be a symbol.
	(find-function-locations): Return errors as a list of one error.
	(call-with-debugging-environment): Set *print-level* to 4 and
	*print-length* to 10.  (Both where nil.)
	(source-location-for-emacs): Fall back to the location of the
	function, if there is no debug-block-info.
	(safe-source-location-for-emacs): Don't catch all conditions; only
	errors.
	*compile-filename*: New variable
	(open-listener): Don't make the socket non-blocking.

	* slime.el (slime-eval/compile-defun-dwim): New command.
	Suggested by "jan" <janmar@iprimus.com.au>.

2003-12-04  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-debugging-state): Don't set sldb-level after
	sldb-setup. Breaks the test-suite.
	(slime-eval-defun): Fix typos.
	(slime-xref-buffer, slime-goto-next-xref): Updated for the new
	xref code.
	(sldb-inspect-in-frame): Query with the sexp at point as initial
	value.
	(sldb-step): New command. Bound to s.

	* swank-cmucl.lisp (format-frame-for-emacs, compute-backtrace,
	backtrace): Don't send CMUCL's frame numbers to Emacs, use our own
	numbering.
	(set-step-breakpoints, sldb-step): Lisp side of sldb-step command.

2003-12-04  Luke Gorrie  <luke@bluetail.com>

	* hyperspec.el: Updated URL to point to a live copy of the
	hyperspec at lispworks.com, because the one on xanalys.com has
	disappeared. Patch from Vincent Arkesteijn on the ilisp-devel
	mailing list.

2003-12-04  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-lispworks.lisp (toggle-trace-fdefinition, tracedp): New
	support functions for toggle-trace command.  Written by Alain
	Picard.
	(compile-from-temp-file): Don't delete the binary file if there is
	none.
	(lispworks-severity): Map all ERRORs to :error.

	* slime.el (slime-eval-defun): Use slime-re-evaluate-defvar if the
	defun starts with "defvar".  C-M-x in elisp does this too.
	(slime-re-evaluate-defvar): Take the form as argument.

2003-12-03  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-debugging-state): Initialize the sldb-buffer if
	(/= sldb-level level).
	(slime-who-specializes): New command.

	* swank-cmucl.lisp (create-swank-server): Set reuse-address to t
	by default.
	(resolve-note-location): Add method for warnings in interpreted
	code.
	(who-specializes): New function.
	(dd-source-location): Handle case without constructors more
	correctly.
	(source-path-source-position): Skip ambigous entries in
	source-map.
	(source-location-from-code-location): Simplified.

2003-12-03  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-completing-read-internal): Fix from Sean
	O'Rourke.

2003-12-02  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-sbcl.lisp (find-function-locations): Return a non-empty
	list of source locations.

	* slime.el (slime-with-xref-buffer): Remove spurious comma. (Bug
	reported by Raymond Wiker).  Some reordering of the xref code.

	* swank.lisp (documentation-symbol): New optional argument for
	return value if the symbol is not documented.

2003-12-02  Sean O'Rourke  <sorourke@cs.ucsd.edu>

        * slime.el: (slime-repl-{clear-buffer,clear-output}): clear the
	last and entire output in the *slime-repl* buffer
	(slime-documentation): pop up a buffer with a symbol's
	documentation instead of its description, if found.
	(slime-complete-symbol): tweak the completion, taken from ilisp, to
	complete filenames inside strings.
	(slime-set-default-directory): also set *slime-repl*'s
	default-directory, so e.g. find-file makes sense.

2003-12-02  Daniel Barlow  <dan@telent.net>

	* slime.el (slime-with-xref-buffer): moved further up the file so
	it's defined before slime-show-xrefs needs it

	* swank-sbcl.lisp (function-source-location-for-emacs): return a
	list of source locations (one per method) when the request is
	for a GF.  This seems to make the elisp side popup a window
	to let the user select one.  Cool.

2003-12-01  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-[cmucl,sbcl,openmcl,lispworks].lisp (invoke-nth-restart):
	Use invoke-restart-interactively.

	* slime.el (slime-create-note-overlay, slime-sexp-depth): The
	'priority' property is unused. Remove it.

	* swank-openmcl.lisp (find-function-locations): Return all methods
	for generic functions. Doesn't work very well if multiple methods
	are in the same file.
	(swank-accept-connection): Don't create an extra thread, call
	request-loop directly.

2003-12-01  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-repl-return): Goto end of input area before
	inserting newline.
	(slime-autodoc-message-ok-p): Test to see if a documentation
	message should be printed (returns nil if the
	minibuffer/echo-area is already being used).
	(slime-symbol-at-point): Skip back over whitespace before
	looking for the symbol.
	(slime-autodoc-delay): New configurable to specify the delay
	before printing an autodoc message (default 0.2 secs).
	(slime-ensure-typeout-frame): New function to call create a
	typeout frame unless it already exists. Suitable to run on
	slime-mode-hook if you always want to have a typeout window.
	(slime-log-events): When nil, don't log events to
	*slime-events*. This works-around a problem Raymond Toy has when
	starting SLIME under XEmacs. Still investigating..

2003-11-29  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Rewrite the xref code to work with other source
	locations.
	(slime-edit-fdefinition): Use the xref window to display generic
	functions with methods.
	(slime-goto-source-location): New representation for source
	locations. Drop old code.
	(slime-list-callers, slime-list-callees): Use the xref window.
	Remove the slime-select-* stuff.
	(slime-describe-function): New command. Bound to C-c C-f.
	Primarily useful in Lispworks.
	(slime-complete-symbol): Display the completion window if the
	prefix is complete but not unique.
	(slime-forward-positioned-source-path): Enter the sexp only if the
	remaining sourcepath is not empty.
	(slime-read-symbol-name): New optional argument QUERY forces
	querying.

	* swank.lisp (group-xrefs): Handle unresolved source locations.
	(describe-symbol): Print something sensible about unknown symbols.

	* swank-cmucl.lisp: Use the new format for source locations.
	(find-function-locations): New function.  Replaces
	function-source-location-for-emacs.  Returns a list of
	source-locations.
	(resolve-note-location): Renamed from resolve-location.
	Simplified.
	(brief-compiler-message-for-emacs): Print the source context
	 (that's the thing after ==>).
	(who-xxxx): Take strings, not symbols, as arguments.
	(function-callees, function-callers): Use the same format as the
	who-xxx functions.  Support for byte-compiled stuff.
	(code-location-stream-position): Try to be clever is the source
	path doesn't match the form.
	(call-with-debugging-environment): Bind *print-readably* to nil.

	* swank-lispworks.lisp: Use the new format for source
	locations. Implement the find-function-locations.
	(list-callers, list-callers): New functions.

	* swank-sbcl.lisp, swank-openmcl.lisp: Use the new format for
	source locations and implement find-function-locations (just calls
	the old code).

2003-11-29  Daniel Barlow  <dan@telent.net>

	* swank-sbcl.lisp (source-location-for-emacs):
	sb-debug::print-description-to-string takes only two args, not
	three.  Now 'v' command works in sldb :-)

	* slime.el (slime-idle-state): added :debug as a valid transition

	* swank.lisp (slime-debugger-function): New.  Returns a function
	suitable for use as the value of *DEBUGGER-HOOK* to install the
	SLIME debugger globally.  Must be run from the *slime-repl* buffer
	or somewhere else that the slime streams are visible so that it
	can capture them.  e.g. for Araneida:
	PKG> (setf araneida:*restart-on-handler-errors*
	           (swank:slime-debugger-fucntion))

2003-11-29  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Some tweaking to the REPL.  slime-repl-input-end-mark
	is now always left inserting and slime-mark-input-end
	"deactivates" the end mark by moving it to the beginning of the
	buffer.
	(slime-goto-source-location): Next try for more uniform
	source-locations.  A source-location is now a structure with a
	"buffer-designator" and  "position-designator".  The buffer-designator
	open the file or buffer and the position-designator moves point to the
	right position.
	(slime-autodoc-mode): New command.
	(slime-find-fdefinitions): Experimental support for generic functions
	with methods.
	(slime-show-xrefs, slime-insert-xrefs, slime-goto-xref): Rewritten to
	work with more general source locations.

	* swank.lisp: Structure definitions for source-locations.
	(alistify, location-position<, group-xrefs): Utilities for xref
	support.

	* swank-cmucl.lisp (code-location-source-location): Renamed from
	safe-source-location-for-emacs.
	(code-location-from-source-location): Renamed from
	source-location-for-emacs.
	(find-fdefinitions, function-source-locations): New functions.
	(safe-definition-finding): New macro.

	* swank-lispworks.lisp: Xref support.
	(make-dspec-location): Updated for the new source-location format.

2003-11-29  Luke Gorrie  <luke@bluetail.com>

	* slime.el (complete-symbol, arglist): Updated test cases for new
	completion interface.

2003-11-28  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-complete-symbol): Use the new completion
	support from the Lisp side. Don't obscure minibuffer input with
	completion messages.

	* completer.el: Dead and buried! Replaced by half a page of Common
	Lisp. Thanks Bill Clementson for a motivational and well-deserved
	taunt.

	* swank.lisp (longest-completion): Compute the best partial
	completion for Emacs.

	* slime.el (slime-swank-port-file): Try (temp-directory),
	temporary-file-directory, or "/tmp/", depending on what
	is (f)bound.

2003-11-28  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-lispworks.lisp (make-dspec-location): Handle logical
	pathnames.  Reported by Alain Picard.

	* swank-sbcl.lisp, swank-cmucl.lisp: Support for output
	redirection to an Emacs buffer via a dedicated network stream.
	Can be enabled with *use-dedicated-output-stream*.

	* swank.lisp (slime-read-string, eval-string): Flush *emacs-io*.
	(eval-in-emacs): New function.

	* slime.el: Support for output from a dedicated socket.
	(slime-open-stream-to-lisp, slime-output-filter): New functions.
	Reorganized REPL code a bit.
	(slime-input-complete-p): Use vanilla forward-sexp, because
	slime-forward-sexp sometimes caused endless loops.
	(slime-disconnect): Close the output-stream-connection if present.
	(slime-handle-oob): A new :%apply event.  Executes arbitrary code;
	useful for bootstrapping.
	(slime-flush-output): New function.
	(slime-symbol-end-pos): Didn't work at all in Emacs20.  Just use
	point until someone commits a proper fix.
	Various uses of display-buffer: The second argument is different in
	XEmacs.
	(interrupt-bubbling-idiot): Reduce the timeout to 5 seconds.

2003-11-27  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-swank-port-file): Use `temporary-file-directory'
	instead of hardcoding "/tmp/".

2003-11-27  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-lispworks.lisp: New backend.

	* slime.el (slime-with-output-to-temp-buffer): Save the window
	configuration in a buffer local variable instead on a global
	stack.
	(slime-show-last-output): Behavior customizable with
	slime-show-last-output-function.  Various tweaking for better
	multi-frame support.

	* swank-backend.lisp: List exported symbols explicitly.

	* swank-cmucl.lisp (function-source-location): Better support for
	generic functions.

	* swank.lisp (briefly-describe-symbol-for-emacs): Don't return
	unbound symbols.
	(describe-symbol, describe-function): Support package-qualified
	strings.

	* swank-loader.lisp: *sysdep-pathnames*: Add Lispworks files.
	(compile-files-if-needed-serially): Compile all files in a
	compilation unit.

2003-11-27  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-complete-symbol): Make a bogus alist out of the
	completion set, for compatibility with XEmacs.

	* completer.el: Stolen^Wimported from ILISP version 1.4. This is
	one revision prior to their latest, where they added a (require)
	for some other ILISP code. I backed down a revision to make it
	stand-alone, but this may mean that putting SLIME in the load-path
	before ILISP will break ILISP. So, beware.
	(completer-message): Cut dependency on undefined ilisp constant
	testing for xemacs.

2003-11-27  Zach Beane  <xach@xach.com>

	* swank.lisp (completions): Complete compound symbols (see below).

	* slime.el (slime-complete-symbol): Use `completer' package to
	handle more sophisticated completions. This includes abbreviations
	like "m-v-b" => "multiple-value-bind". It also (somewhat scarily)
	redefines other standard Emacs completion functions with similar
	capabilities. See commentary in completer.erl for details.

2003-11-25  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-make-typeout-frame): New command to create a
	frame where commands can print messages that would otherwise go to
	the echo area.
	(slime-background-message): Function for printing "background"
	messages. Uses the "typeout-frame" if it exists.
	(slime-arglist): Print arglist with `slime-background-message'.
	(slime-message): Use typeout frame if it exists, but only for
	multi-line messages.

2003-11-25  Daniel Barlow  <dan@telent.net>

	* swank-sbcl.lisp: delete big chunk of leftover commented-out
	code

	* slime.el: arglist command to use slime-read-symbol-name,
	not slime-read-symbol

	* README: Minor updates for currency

2003-11-24  Luke Gorrie  <luke@bluetail.com>

	* swank-backend.lisp (compiler-condition): Removed use of
	:documentation slot option. That is not portable (to CMUCL 18e).

	* swank.lisp (eval-string-in-frame): Fixed symbol-visibility
	problem (thanks Lawrence Mitchell).

	* swank-sbcl.lisp (function-source-location): Use TRUENAME to
	resolve source file name (thanks Lawrence Mitchell).

	* slime.el (slime-goto-source-location): Fixes when finding
	definition by regexp: open the right file (was missed), and
	tweaked regexp to match more 'def' forms - especially
	`defmacro-mundanely' (hyphen wasn't allowed before).

2003-11-23  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-fetch-more-frames): Call swank:backtrace instead
	of (renamed) swank:backtrace-for-emacs.

	* swank-cmucl.lisp, swank-sbcl.lisp, swank-openmcl-lisp: Updated
	to use new debugger interfaces in swank-backend.lisp.

	* swank-backend.lisp (backtrace, eval-in-frame, frame-catch-tags,
	frame-locals, frame-source-location-for-emacs): More interface
	functions.

	* slime.el (slime-goto-source-location): Added optional `align-p'
	argument for :file and :emacs-buffer location types. This is for
	OpenMCL - unlike CMUCL its positions are not character-accurate so
	it needs to be aligned to the beginning of the sexp.
	(slime-connect): Don't delete a random window when *inferior-lisp*
	isn't visible.

	* swank-cmucl.lisp: Tidied up outline-minor-mode structure and
	added comments and docstrings.

	* swank-cmucl.lisp, swank-sbcl.lisp, swank-openmcl-lisp: Updated
	to use new debugger interface in swank-backend.lisp.

	* swank-backend.lisp (call-with-debugging-environment,
	sldb-condition, debugger-info-for-emacs): More callbacks defined.

	* swank.lisp: Tidied up outline-minor-mode structure, added
	comments and docstrings.
	(sldb-loop): Took over the main debugger loop.

	* swank-openmcl.lisp: Updated after refactoring of other backends
	(was broken).

	* slime.el (slime-goto-source-location): Align at beginning of
	sexp after (:file name pos) and (:emacs-buffer buffer pos).

	* swank-sbcl.lisp (describe-symbol-for-emacs): Don't ask for
	(documentation SYM 'class), CLHS says there isn't any 'class
	documentation (and SBCL warns).

	* swank.lisp, swank-cmucl.lisp, swank-sbcl.lisp: Refactored
	interface through swank-backend.lisp for: swank-compile-file,
	swank-compile-string, describe-symbol-for-emacs (apropos),
	macroexpand-all, arglist-string.

	* swank-backend.lisp: New file defining the interface between
	swank.lisp and the swank-*.lisp implementation files.

2003-11-22  Brian Mastenbrook  <bmastenb@cs.indiana.edu>

	* swank.asd: ASDF definition to load "swank-loader.lisp". This is
	useful for starting the Swank server in a separate Lisp and later
	connecting with Emacs. The file includes commentary.

2003-11-22  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-connect): Slightly reordered some window
	operations to ensure that *slime-repl* is popped up after `M-x
	slime-connect'.
	(slime-show-last-output): If the *slime-repl* buffer is already
	visible in any frame, don't change anything.

	* swank.lisp (listener-eval): Format results in *buffer-package*.
	Exporting (CREATE-SWANK-SERVER <port>). This function can be
	called directly to start a swank server, which you can then
	connect to with `M-x slime-connect'. It takes a port number as
	argument, but this can be zero to use a random available port.
	The function always returns the actual port number being used.

2003-11-19  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp: Better printing off return values.  In the REPL
	buffer we print now every value in a separate line and in the echo
	area separated by a comma.  We also print "; No value" for the
	degenerated case (values).  A new variable *sldb-pprint-frames*
	controls the printing of frames in the debugger. (Thanks Raymond
	Toy for the suggestions.)

	* swank-cmucl.lisp (format-frame-for-emacs): Bind *pretty-print*
	to *sldb-pprint-frames*.

	* slime.el: Window configuration are now saved on a stack, not in
	a single global variable.
	(slime-with-output-to-temp-buffer) We use now our own version of
	with-output-to-temp-buffer.  The default version is painfully
	incompatible between Emacs versions.  The version selects the
	temporary buffer and the behaivor of "q" is now more consistent
	(as suggested by Jan Rychter).
	(slime-connect): Hide the *inferior-lisp-buffer* when we are
	connected.
	sldb-mode-map: Bind n and p to sldb-down and sldb-up.
	(slime-edit-fdefinition-other-window): New function. Suggested by
	Christian Lynbech.

	* swank-loader.lisp (user-init-file): There is now a user init
	file (~/.swank.lisp).  It is loaded after the other files.

2003-11-16  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: [slime-keys] Override C-c C-r with slime-eval-region
	 (reported by Paolo Amoroso).

	* swank-loader.lisp: Compile and load gray stream stuff for SBCL
	and OpenMCL.

	* swank-openmcl.lisp, swank-sbcl.lisp: Import gray stream symbols.
	(without-interrupts*): New function.

	* swank.lisp (send-to-emacs): Protect the write operations by a
	without-interrupts, so that we don't trash the *cl-connection*
	buffer with partially written messages.

	* swank-cmucl.lisp (without-interrupts*): New function.

	* swank-gray.lisp (stream-write-char): Don't flush the buffer on
	newlines.

	* slime.el: Add some docstring.
	(interrupt-bubbling-idiot): New test.
	[slime-keys]:  Don't bind "\C- ".  Problematic on LinuxPPC.

2003-11-15  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Some tweaking for better scrolling in the *slime-repl*
	buffer (suggested by Jan Rychter).
	(slime-compile-file): Display the output buffer at the beginning.
	(slime-show-last-output): Include the prompt so that window-point
	is updated properly.
	(slime-with-output-at-eob): Update window-point if the buffer is
	visible.
	(slime-state/event-panic): Include the *slime-events* and
	*cl-connection* buffers in the report.

	* swank-cmucl.lisp (sos/out): Don't flush the buffer on newlines.

2003-11-13  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Imititate an "output-mark".  Output from Lisp should
	move point only if point is at the end of the buffer. (Thanks
	William Halliburton for the suggestion.)
	(slime-with-output-at-eob): New function.
	(slime-output-string, slime-repl-maybe-prompt): Use it.

	slime-repl-mode-map: Override "\C-\M-x".

	An experimental scratch buffer:
	(slime-eval-print-last-expression): New function.
	(slime-scratch-mode-map, slime-scratch-buffer,
	 slime-switch-to-scratch-buffer, slime-scratch): New functions.

	* swank-cmucl.lisp (resolve-location): Emacs buffer positions are
	1 based.  Add 1 to the 0 based file-position.

2003-11-13  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-connect): pop-to-buffer into *slime-repl* when
	we connect.

2003-11-13  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el, swank-cmucl.lisp, swank-sbcl.lisp, swank-openmcl: New
	representation for "source-locations".  Compiler notes have now a
	message, a severity, and a source-location field.  Compiler notes,
	edit-definition, and the debugger all use now the same
	representation for source-location.  CMUCL does the source-path to
	file-position translation at the Lisp side.  This works better
	with reader macros, in particular with backquote.  The SBCL
	backend still does the translation on the Emacs side.  OpenMCL
	support is probably totally broken at the moment

2003-11-13  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-repl-previous-input, slime-repl-next-input):
	When partial input has already been entered, the M-{p,n} REPL
	history commands only match lines that start with the
	already-entered prefix. This is comint-compatible behaviour which
	has been requested. The history commands also skip over line
	identical to the one already entered.
	(slime-complete-maybe-restore-window-confguration): Catch errors,
	so that we don't cause `pre-command-hook' to be killed.
	(slime-truncate-lines): If you set this to nil, slime won't set
	`truncate-lines' in buffers like sldb, apropos, etc.

2003-11-12  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-show-description): XEmacs portability: don't use
	`temp-buffer-show-hook'.
	(slime-inspect): Use `(slime-sexp-at-point)' as default inspection
	value (thanks Jan Rychter).

2003-11-10  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-post-command-hook): Inhibit unless (still) in
	slime-mode. Only call `slime-autodoc-post-command-hook' when
	`slime-autodoc-mode' is non-nil.
	(slime-setup-command-hooks): Use `make-local-hook' instead of
	`make-local-variable'.

2003-11-08  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: slime-highlight-face: Use the :inherit attribute if
	possible.
	(slime-face-inheritance-possible-p): New function.

	* slime.el (slime-repl-return): Only send the current input to
	Lisp if it is a complete expression, like inferior-slime-return.

	* swank.lisp (completions): Use *buffer-package* if no other
	package is given.

	* slime.el: Remove the non-working face inheriting stuff.
	Hardcode colors for slime-highlight-face and specify the :inherit
	attribute for slime-repl-output-face.  So Emacs21 will do the
	right thing and the others get at least a customizable face.

	* slime.el (slime-buffer-package): Try to find be the
	package name before resorting to slime-buffer-package.  Return nil
	and not "CL-USER" if the package cannot be determined.
	(slime-goto-location): Insert notes with a source path, but
	without filename or buffername, at point.  This can happen for
	warnings during macro expansion. (The macro expander is a
	interpreted function and doesn't have a filename or buffername.)
	(slime-show-note): Display 2 double quotes "" in the echo area for
	zero length messages.  SERIES tends to signal warnings with zero
	length messages.
	(slime-print-apropos): Add support for alien types.

	* swank-cmucl.lisp (briefly-describe-symbol-for-emacs): Add
	support for alien types.
	(source-path-file-position): Read the entire expression with a
	special readtable.  The readtable records source positions for
	each sub-expression in a hashtable.  Extract the sub-expression
	for the source path from the read object and lookup the
	sub-expression in the hashtable to find its source position.

	* swank-sbcl.lisp (swank-macroexpand-all): Implemented.

2003-11-06  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-autodoc-mode): When non-nil, display the
	argument list for the function-call near point each time the point
	moves in a slime-mode buffer. This is a first-cut; more useful
	context-sensitive help to follow (e.g. looking up variable
	documentation).
	(slime-autodoc-cache-type): Cache policy "autodoc" documentation:
	either nil (no caching), 'last (the default - cache most recent
	only), or 'all (cache everything on symbol plists forever).

	* slime.el: Convenience macros:
	(when-bind (var exp) &rest body)
	  => (let ((var exp)) (when var . body))
	(with-lexical-bindings (var1 ...) . body)
	  => (lexical-let ((var1 var1) ...) . body)

	* slime.el (slime, slime-lisp-package): Reset `slime-lisp-package'
	(the REPL package) when reconnecting.
	(slime-buffer-package): Return `slime-lisp-package' when the
	major-mode is `slime-repl-mode'.

2003-11-04  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-read-string-state): Add support for evaluation
	requests.
	(slime-repl-read-break): New command.
	alternative.
	slime-keys: XEmacs cannot rebind C-c C-g.  Use C-c C-b as an
	alternative.
	(slime-selector): XEmacs has no prompt argument for read-char.
	(slime-underline-color, slime-face-attributes): Make face
	definitions compatible with XEmacs and Emacs20.
	(slime-disconnect): Delete the buffer of the socket.
	(slime-net-connect): Prefix the connection buffer name with a
	space to avoid accidental deletion.

	* swank.lisp (slime-read-string): Send a :read-aborted event for
	non-local exits.
	(case-convert): Handle :invert case better.

2003-11-03  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-display-message-or-view,
	slime-remove-message-window): Display too long lines in a new
	window.  Add a temporary pre-command-hook to remove the multiline
	window before the next command is executed.

	(slime-complete-symbol): Save the window configuration before
	displaying the completions and try to restore it later.  The
	configuration is restored when: (a) the completion is unique (b) there
	are no completion.  It is also possible to delay the restoration until
	(c) certain characters, e.g, space or a closing paren, are inserted.

	(slime-selector): Don't abort when an unkown character is pressed;
	display a message and continue.  Similiar for ?\?.  Add a selector for
	the *sldb* buffer.

	(slbd-hook, sldb-xemacs-post-command-hook): Emulate Emacs'
	point-entered text property with a post-command hook.

	* swank.lisp (case-convert, find-symbol-designator): New
	functions.

	* swank-cmucl.lisp, swank-openmcl.lisp, swank-sbcl.lisp
	(arglist-string): Don't intern the function name.  Use
	find-symbol-designator instead.

2003-11-03  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-display-buffer-region): Hacked to fix completely
	inexplicable XEmacs problems.

2003-11-2  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* null-swank-impl.lisp, swank-cmucl.lisp, swank-openmcl.lisp,
	swank.lisp: Input redirection works now on the line level, like a
	tty.  Output streams are now line buffered.  We no longer compute
	the backtrace-length.

	* slime.el:
	(slime-repl-read-mode, slime-repl-read-string, slime-repl-return,
	slime-repl-send-string, slime-read-string-state,
	slime-activate-state): Reorganize input redirection.  We no longer
	work on the character level but on a line or region; more like a
	terminal.  This works better, because REPLs and debuggers are
	usually written with a line buffering tty in mind.
	(sldb-backtrace-length, slime-debugging-state,
	slime-evaluating-state, sldb-setup, sldb-mode, sldb-insert-frames,
	sldb-fetch-more-frames): Don't use backtrace-length.  Computing
	the length of the backtrace is (somewhat strangely) an expensive
	operation in CMUCL, e.g., it takes >30 seconds to compute the
	length when the yellow zone stack guard is hit.

2003-11-02  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-log-event): Added a *slime-events* buffer
	recording all state machine events. The buffer uses hideshow-mode
	to fold messages down to single lines.
	(slime-show-source-location): Bugfix: only create source-highlight
	overlay if the source was actually located.
	(slime-selector): Renamed from `slime-select' because that
	function name was already in use. Ooops!

	* swank.lisp (eval-string): force-output on *slime-output* before
	returning the result. This somewhat works around some trouble
	where output printed by lisp is being buffered too long.

	* slime.el (slime-lisp-package-translations): Association list of
	preferred package nicknames, for the REPL prompt. By default maps
	COMMON-LISP->CL and COMMON-LISP-USER->CL-USER.

2003-11-01  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-select): Added an extensible "Select" command,
	which I gather is a LispM/Martin-Cracauer knock-off. When invoked,
	the select command reads a single character and uses that to
	decide which buffer to switch to. New characters can be defined,
	and the currently availables ones can be seen with '?'. I have not
	assigned a key to Select, because it seems like a command that
	should have a global binding. I would suggest `C-c s'.

	* swank.lisp (*slime-features*): Variable remembering the FEATURES
	list.
	(sync-state-to-emacs): Update Emacs about any state changes -
	currently this just means changes to the FEATURES list.
	(eval-string): Call `sync-state-to-emacs' before sending result.
	(eval-region): With optional PACKAGE-UPDATE-P, if the evaluation
	changes the current package, tell Emacs about the new package.
	(listener-eval): Tell `eval-region' to notify Emacs of package
	changes, so that e.g. (in-package :swank) does the right thing
	when evaluated in the REPL.

	* slime.el (slime-repl-output-face, slime-repl-input-face): Face
	definitions for output printed by Lisp and for previous REPL user
	inputs, respectively. Defaulting the input face to bold rather
	than underline, because it looks better on multi-line input.
	(slime-handle-oob): Two new out-of-band messages
	(:new-features FEATURES) and (:new-package PACKAGE-NAME). These
	are used for Lisp to tell Emacs about changes to *FEATURES* and
	*PACKAGE* when appropriate.
	(slime-same-line-p): Better implementation (does what the name
	suggests).
	(slime-lisp-package): New variable keeping track of *PACKAGE* in
	Lisp -- or at least, the package to use for the REPL.
	(slime-repl-insert-prompt): The prompt now includes the package
	name.
	(slime-repl-bol): C-a in the REPL now stops at the prompt.
	(slime-repl-closing-return): C-RET & C-M-m now close all open
	lists and then send input in REPL.
	(slime-repl-newline-and-indent): C-j in REPL is now better with
	indentation (won't get confused by unmatched quotes etc appearing
	before the prompt).

2003-11-1  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-debugging-state): Save the window configuration
	in a state variable.
	sldb-saved-window-configuration: Removed.
	(slime-repl-mode): Use conservative scrolling.
	(slime-repl-insert-prompt): Set window-point after the prompt.
	(slime-repl-add-to-input-history): Don't add subsequent duplicates to
	the history.

	* swank.lisp (slime-read-char): Flush the output before reading.
	(listener-eval): Like eval region but set reader variables (*, **,
	*** etc.)

	* swank-openmcl.lisp, swank-sbcl.lisp: Implement stream-line-column.

	* swank-cmucl.lisp (slime-input-stream-misc-ops): Renamed from
	slime-input-stream-misc.

2003-10-31  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-repl-mode-map): Bound `slime-interrupt' on both
	C-c C-c and C-c C-g.

	* swank.lisp (interactive-eval): Evaluate in *buffer-package*.

	* slime.el: Tweaked debugger window management somewhat: the
	window configuration is saved when the debugger is first entered
	and then restored when the idle state is reached.

2003-10-31  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: (slime-repl-read-mode, slime-repl-read-xxx): New minor
	mode for stream character based input to Lisp.

	* swank.lisp: *read-input-catch-tag*, take-input, slime-read-char:
	Moved here from swank-cmucl.lisp.
	(defslimefun, defslimefun-unimplemented): Move macro definitions to
	the beginning of the file.

	* swank-cmucl.lisp: (slime-input-stream, slime-input-stream-read-char,
	lime-input-stream-misc): Character input stream from Emacs.
	(slime-input-stream/n-bin): Removed.

	* swank-openmcl.lisp, swank-sbcl.lisp: Gray stream based input
	redirection from Emacs.

2003-10-29  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el:
	Beginnings of a REPL-mode.
	Minor debugger cleanups.

	* swank.lisp:
	slime-read-error: New condition.
	(read-next-form): Re-signal the conditions as slime-read-errors.  And
	check the result of read-sequence (i.e. detect CMUCL's read-sequence
	bug).
	(sldb-continue, throw-to-toplevel): Was more or less the same in all
	backends.

	* swank-openmcl.lisp, swank-sbcl.lisp, swank-cmucl.lisp:
	(serve-request): Handle slime-read-errors and bind a
	slime-toplevel catcher.

	* swank-cmucl.lisp:
	(sldb-loop): Flush output at the beginning.
	(inspect-in-frame): New function.
	(frame-locals): Don't send the validity indicator across wire.  Too
	cmucl specific.

2003-10-29  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-net-sentinel): Only show a message about
	disconnection if the inferior-lisp is still running.
	(slime-interrupt, slime-quit): Only send the quit/interrupt
	message to Lisp if it is in fact evaluating something for us. This
	fixes a protocol bug reported by Paolo Amoroso.  Added (require
	'pp).

2003-10-28  James Bielman  <jamesjb@jamesjb.com>

	* null-swank-impl.lisp: New file.

	* swank-openmcl.lisp: Pre-refactoring updates to the OpenMCL backend:
	(map-backtrace): Renamed from DO-BACKTRACE.
	(frame-source-location-for-emacs): New function.
	(function-source-location-for-emacs): New function,

	* swank-openmcl.lisp: Docstring updates/additions.

2003-10-25  Luke Gorrie  <luke@bluetail.com>

	* Everywhere: Changed the connection setup to use a dynamic
	collision-free TCP port. The new protocol is this:

	  Emacs calls (swank:start-server FILENAME) via the
	    listener. FILENAME is /tmp/slime.${emacspid}
	  Lisp starts a TCP server on a dynamic available port and writes
	    the port number it gets to FILENAME.
	  Emacs asynchronously polls for FILENAME's creation. When it
	    exists, Emacs reads the port number, deletes the file, and makes
	    the connection.

	The advantage is that you can run multiple Emacsen each with an
	inferior lisp, and the port numbers will never collide and Emacs
	will always connect to the right lisp.

	All backends are updated, but only CMUCL and SBCL are
	tested. Therefore, OpenMCL is almost certainly broken just now.

	* slime.el (inferior-slime-closing-return): New command that
	closes all open lists and sends the result to Lisp. Bound to C-RET
	and (for people who use C-m for RET) C-M-m.
	(inferior-slime-indent-line): Improved indentation in the inferior
	list buffer.

2003-10-24  Luke Gorrie  <luke@bluetail.com>

	* slime.el (inferior-slime-return): Command bound to RET in
	inferior-slime-mode: only send the current input to Lisp if it is
	a complete expression (or prefix argument is given). Two reasons:
	it makes the input history contain complete expressions, and it
	lets us nicely indent multiple-line inputs. (Thanks Raymond Toy
	for the suggestions.)

2003-10-23  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-maybe-start-lisp): Restart inferior-lisp if the
	process has died.

	* swank-sbcl.lisp (accept-connection): Use a character stream to
	match swank.lisp.

2003-10-22  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp (setup-request-handler): Create a character
	stream.
	(read-next-form): Removed.

	* swank.lisp (read-next-form, send-to-emacs): Assume *emacs-io* is
	a character stream. Add the necessary char-code/code-char
	conversions.

	* slime.el: slime-keys: Add :sldb keywords for keys useful in the
	debugger.
	(slime-init-keymaps): Allow allow :sldb keywords.

	inferior-lisp-mode-hook: Display the inf-lisp buffer if there is
	some output.

	(slime-process-available-input): Start a timer to process any
	remaining input.
	(slime-dispatch-event): The timer should take care of any lost
	input. So don't process the available input here.  Remove the
	process-input argument.
	(slime-push-state, slime-pop-state, slime-activate-state,
	 slime-idle-state, slime-evaluating-state): Update callers.
	(slime-debugging-state): Remove the unwind-protect in the
	:debug-return clause.  Should not be necessary.

	sldb-mode-map: Define more slime-mode keys.

	(slime-time<, slime-time-add): Removed. Emacs-21 has equivalent time
	functions.
	(slime-sync-state-stack): Use Emacs-21 time-date functions.
	(seconds-to-time, time-less-p, time-add): Compatibility defuns.

2003-10-22  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime): With a prefix argument, prompt for the port
	number to use for communication with Lisp. This is remembered for
	future connections.

2003-10-22  Hannu Koivisto  <azure@iki.fi>

	* slime.el (slime-space): Now allows one to insert several spaces
	with a prefix argument.

2003-10-21  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-space): Don't give an error when not connected,
	to avoid feeping.

	* swank-sbcl.lisp (swank-compile-string): Include only one
	:SOURCE-PATH attribute in the plist, and replace the front element
	with a 0 (fixes a problem probably due to recent hacks to the
	elisp source-path lookups).

	* slime.el (inferior-slime-mode): New minor mode for use with
	`inferior-lisp-mode'. Defines a subset of the `slime-mode' keys
	which don't clash with comint (e.g. doesn't bind M-{p,n}).
	(slime-keys): List of keybinding specifications.
	(slime-find-buffer-package): If we don't find the "(in-package" by
	searching backwards, then try forwards too.

	* swank.lisp (completions): Fixed semantics: should now consider
	only/all completions that would not cause a read-error due to
	symbol visibility. Also avoiding duplicates and sorting on
	symbol-name.

2003-10-20  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (completions): Slight change of semantics: when a
	prefix-designator is package-qualified, like "swank:", only match
	symbols whose home-package matches the one given - ignore
	inherited symbols.

	* slime.el: Updated test suite to work with the different backends:
	(find-definition): Lookup definitions in swank.lisp.
	(arglist): Lookup arglists of functions in swank.lisp.

2003-10-20  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el (interactive-eval): Make test case independent of
	*print-case*.

2003-10-20  Luke Gorrie  <luke@bluetail.com>

	* swank-cmucl.lisp (clear-xref-info): Conditionalised
	xref:*who-is-called* and xref:*who-macroexpands* with
	#+CMU19. This makes SLIME compatible with CMUCL 18e, but also
	disables the `who-macroexpands' command in any CMUCL version that
	doesn't have the "19A" feature (which does break the command in
	some snapshot builds that can actually support it).

2003-10-20  Daniel Barlow  <dan@telent.net>

	* swank.lisp (*notes-database*): tyop fix

	* swank-sbcl.lisp (throw-to-toplevel): select TOPLEVEL restart
	instead of throwing to a catch that no longer exists

	* slime.el: change some strings containing 'CMUCL' to more
        backend-agnostic phrases

2003-10-19  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el, swank-cmucl.lisp, swank.lisp: First shoot at input
	redirection.

	* swank-sbcl.lisp, swank-openmcl.lisp: Bind *slime-input* and
	*slime-io* to dummy values.

2003-10-19  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime): Connection setup is now asynchronous, with
	retrying on a timer. This makes it possible to bring the server up
	by hand while debugging. `M-x slime' while already connected will
	cause the old connection to be dropped and a new one established.
	(slime-disconnect): New command to disconnect from Swank, or
	cancel asynchronous connection attempts when not yet connected.
	(slime-state/event-panic): Illegal events in the communication
	state machine now trigger a general panic that disconnects from
	Lisp, and displays a message describing what has happened. This is
	a bug situation.
	(slime-connect): Print a message during connection attempts unless
	the minibuffer is active (it's annoying to get messages while
	trying to enter commands).

2003-10-18  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Fix some bugs in the state machine and be a bit more
	careful when processing pending input.
	(slime-compile-region): New command.
	Some more tests.

2003-10-17  James Bielman  <jamesjb@jamesjb.com>

	* .cvsignore: Add OpenMCL and SBCL fasl file extensions.

	* swank-openmcl.lisp (who-calls): Fix bug where we would try to
	take the TRUENAME of NIL when source information isn't available
	for a caller.
	(backtrace-for-emacs): Clean up the backtrace code a bit in
	preparation for implementing FRAME-LOCALS.
	(frame-catch-tags): Implement a stub version of this.
	(frame-locals): Implemented fully for OpenMCL.

	* swank-loader.lisp (compile-files-if-needed-serially): Be a little
	more verbose when compiling files.

2003-10-17  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp, swank-sbcl.lisp, swank-openmcl.lisp,
	swank-cmucl.lisp: Move more stuff to swank.lisp.

2003-10-17  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-post-command-hook): Check that we are connected
	before trying to process input.
	(slime-net-connect): Handle `network-error' condition for XEmacs
	21.5. (Thanks Raymond Toy.)

	* swank-sbcl.lisp: Report style-warnings separately from notes
	(patch from Christophe Rhodes). Use REQUIRE to load sb-introspect
	instead of loading the source file (requires the sb-introspect
	library to be installed, which doesn't yet happen in the
	sourceforge-lagged SBCL anoncvs, but does in the real one).

	* slime.el (slime-style-warning-face): Added style-warnings, which
	are between a warning and a note in severity. (Patch from
	Christophe Rhodes).

	* test.sh: When the test fails to complete, print "crashed"
	instead of reporting nonsense.

2003-10-17  James Bielman  <jamesjb@jamesjb.com>

	* swank.lisp (apropos-symbols): Change back to using the standard
	2-argument APROPOS-LIST and check symbols explicitly when
	EXTERNAL-ONLY is true.
	Move loading of sys-dependent backend code into 'swank-loader'.

	* swank-sbcl.lisp: Moved declarations of *PREVIOUS-COMPILER-CONDITION*
	into 'swank.lisp' to kill warnings about undefined variables.

	* swank-openmcl.lisp (handle-compiler-warning): Use source position
	instead of function name for warning locations.
	(swank-compile-string): Compile into a temporary file instead of
	using COMPILE so finding warning positions works when using C-c C-c.
	(compute-backtrace): Don't display frames without a function.
	(apropos-list-for-emacs): Implement APROPOS.
	(who-calls): Implement WHO-CALLS.
	(completions): Implement COMPLETIONS.
	Use NIL instead of zero so FRESH-LINE does the right thing.

	* slime.el (slime-maybe-compile-swank): Removed function---compile
	the backend using 'swank-loader.lisp' instead.
	(slime-backend): Changed default backend to 'slime-loader'.
	(slime-lisp-binary-extension): Deleted as this is no longer needed.

	* swank-loader.lisp: New file.

2003-10-17  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-net-connect): Check that
	`set-process-coding-system' is fbound before calling it. This is
	needed in the XEmacs I built from sources.

2003-10-17  Daniel Barlow  <dan@telent.net>

	* swank-sbcl.lisp: Transplanted Helmut's serve-event server to
	replace the existing thread-using server.  SLIME now has no
	dependency on SB-THREAD

	* slime.el (slime-find-buffer-package): handle errors from (read)
	for the case where the buffer ends before the in-package form does
	(slime-set-package): insert missing comma
	(slime-goto-source-location): sbcl has a disagreement with emacs
	over the meaning of a character position.  Level up with
	C-M-f C-M-b

	* assorted typo fixes

2003-10-16  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-forward-source-path): Improved somewhat. Seems
	to work for all common cases except backquote. Backquote is
	tricky, because the source-paths are based on the reader's
	expansion, e.g.:
	* (let ((*print-pretty* nil))
	    (print (read-from-string "`(a ,@(b c) d)")))
	  -->
	  (COMMON-LISP::BACKQ-CONS (QUOTE A)
	                           (COMMON-LISP::BACKQ-APPEND (B C)
			                                      (QUOTE (D))))
	Must investigate whether we need to write a hairy
	backquote-traversing state machine or whether this is something
	that could be fixed in CMUCL.

	* swank*.lisp (with-trapping-compiler-notes): This macro is now
	defined here, and expands to a call to the backend-defined
	`call-trapping-compiler-notes' with the body wrapped in a
	lambda. This is to avoid swank.lisp referring to macros in the
	backends -- it gets compiled first so it thinks they're functions.

	* slime.el (slime-swank-connection-retries): New default value is
	`nil', which means unlimited retries (until user aborts). Retry
	interval also reduced from once per second to four times per
	second.

2003-10-16  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank-cmucl.lisp, swank.lisp: Fix CMUCL support.

2003-10-15  Daniel Barlow  <dan@telent.net>

	* swank.lisp: rearrange the backends.  rename swank.lisp to
	swank-cmucl.lisp, then create new swank.lisp which loads an
	appropriate backend according to *features*.  Next up,
	identify common functions in the backends and move them
	into swank.lisp

2003-10-15  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* slime.el: Inspector support.  list-callers, list-callees
	implemented without xref.

	* swank.lisp: Lisp side for inspector and list-callers,
	list-calees.  Better fdefinition finding for struct-accessors.


2003-10-15  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-point-moves-p): Macro for executing subforms and
	returning true if they move the point.

	* test.sh: New file to run the test suite in batch-mode. Will need
	a little extending to allow configuring the right variables to
	work with non-CMUCL backends.

	* slime.el: Set `indent-tabs-mode' to nil. This makes diffs look
	better.
	(slime-start-swank-server): Now passing the port number to
	SWANK:START-SERVER.
	(slime-evaluating-state): Debugging synchronous evaluations with
	recursive edits now works.
	(slime-forward-sexp): Added support for #|...|# reader comments.
	(sldb-hook): New hook for entry to the debugger (used for the test
	suite).
	(slime-run-tests): Reworked the testing framework. Now presents
	results in an outline-mode buffer, with only the subtrees
	containing failed tests expanded initially.
	(slime-check): Check-name can now be a string or
	format-control. (Test cases have been updated to take advantage of
	this.)
	(compile-defun): This test case now works for the case containing
	#|..|#
	(async-eval-debugging): New test case for recursively debugging
	asynchronous evaluation.

2003-10-15  Daniel Barlow  <dan@telent.net>

	* README.sbcl: new file

	* README: update for new backends, change of hosting provider

	* swank-sbcl.lisp: new file.
	New SWANK backend for Steel Bank Common Lisp, adapted from
	swank.lisp with bits of swank-openmcl.lisp

2003-10-12  Daniel Barlow  <dan@telent.net>

	* slime.el (sldb-mode-map): add mouse-2 clickability for areas
	in sldb buffers covered by the sldb-default-action property:
	restarts can now be mouse-activated

2003-09-28  James Bielman  <jamesjb@jamesjb.com>

	* swank-openmcl.lisp: New file, a Slime backend for OpenMCL 0.14.x.
	(condition-function-name): Figure out the name of methods correctly
	instead of passing a list to Emacs.

	* slime.el (slime-goto-location): Try to position notes based on
	some (questionable) regex searching if the :FUNCTION-NAME property
	is set.  Used in the OpenMCL backend which does not support source
	paths.

2003-09-29  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Fairly major hacking.
	Rewrote the evaluation mechanics: similar design but some macros
	to make it look more like a push-down automaton (which it really
	was!). Debugging Lisp no longer uses recursive edits, partly as a
	side-effect and partly to see if it's better this way.
	Removed the asynchronous-communication test cases that tested
	something we decided not to do.
	(slime-eval-string-async): Give a meaningful error message when
	trying to make a request while already busy.
	(slime-lisp-binary-extension): Uh oh, time to start taking out
	gratuitous CMUCL-isms. This variable renamed from
	`slime-cmucl-binary-extension'.
	(slime-backend): Name of the Lisp backend file, defaulting to
	"swank", but can be set to e.g. "swank-openmcl".

	* swank.lisp: Minor protocol changes to accomodate slime.el's
	changes above.

2003-09-28  Helmut Eller  <e9626484@stud3.tuwien.ac.at>

	* swank.lisp
	(getpid, set-package, set-default-directory): New functions.
	(slime-out-misc): Don't send empty strings.
	(*redirect-output*, read-from-emacs): A new switch to turn output
	redirection off. Useful for debugging.
	(interactive-eval, interactive-eval-region, pprint-eval,
	re-evaluate-defvar): Bind *package* to *buffer-package*.
	(with-trapping-compilation-notes): Add a dummy argument for better
	indentation.
	(measure-time-intervall, call-with-compilation-hooks): Measure
	compilation time.
	(frame-locals): Use di::debug-function-debug-variables instead of
	di:ambiguous-debug-variables. Don't access non-valid variables.

	* slime.el
	(slime-display-message-or-view): Delete old multi-line windows.
	(slime-read-package-name): Added an optional initial-value
	argument.  slime-pid: New variable.
	(slime-init-dispatcher): Initialize slime-pid.
	(slime-send-sigint): Use slime-pid instead of inferior-lisp-proc.
	(slime-eval): Accept debug-condition messages.
	(slime-output-buffer): Turn slime-mode on.
	(slime-switch-to-output-buffer): New command.  Bound to C-c C-z.
	(slime-show-note-counts): Display compilation time.
	(slime-untrace-all, slime-set-package, slime-set-default-directory
	slime-sync-package-and-default-directory): New commands.
	(slime-princ-locals): Don't access non-valid variables.  This may
	cause segfaults and severely confuse CMUCL.
	(slime-define-keys): New macro.

2003-09-28  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (create-swank-server): Bind the listen-socket on the
	loopback interface by default, so that remote machines can't
	connect to the Swank server.

2003-09-27  Luke Gorrie  <luke@bluetail.com>

	* swank.lisp (with-trapping-compilation-notes): New macro for
	bindings the handlers to record compiler notes. Now being used in
	`compile-string', which I had broken when removing the compilation
	hook.

	* slime.el (slime-function-called-at-point): Rewritten to work
	better. Now considers "((foo ..." _not_ to be a function call to
	foo because of the double ('s - this will keep it from misfiring
	in e.g. LET bindings.
	(def-slime-test): All tests now being with (slime-sync). This
	fixes some accidental/bogus test failures.

	* swank.lisp (handle-notification-condition): Rewrote
	compiler-note collection. Now it uses lower-level condition
	handlers instead of c:*compiler-notification-function*. This way
	the error messages are tailored to omit redundant information,
	like the filename and original source text (which are displayed
	and highlighted in Emacs already). Much nicer.
	(sort-contexts-by-source-path): Now sorting xref results by
	lexical source-path order, so that you're always jumping in the
	same direction.
	(*debug-definition-finding*): New variable. You can set this to
	true if you want to be popped into the debugger when M-. fails to
	find a definition (for debugging the
	definition-finding). Otherwise it reports the error to Emacs as a
	message, like "Error: SETQ is a special form."

	* slime.el (slime-fetch-features-list): New command to fetch the
	*FEATURES* list from Lisp and store it away. This is done
	automatically upon connection, but can also be called manually to
	update.
	(slime-forward-reader-conditional): Now does the right things with
	reader-conditionals (#+ and #-) based on the Lisp features.

2003-09-26  Luke Gorrie  <luke@bluetail.com>

	* slime.el (sldb-setup): Setting `truncate-lines' to t in the
	debug buffer. I like having the backtrace take strictly one line
	per frame, since otherwise a few ugly arguments (e.g. streams) can
	chew up a lot of space. (Can make this a configurable on request
	if tastes differ :-)

	* swank.lisp: Did a little defensive programming so that asking
	for the definition of an unbound function will return nil to Emacs
	instead of entering the debugger.
	(format-frame-for-emacs): Binding *PRETTY-PRINT* to nil when
	formatting frames (due to truncate-lines change above).

2003-09-24  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* swank.lisp:
	Support for stream redirection.
	slime-output-stream: New structure.
	(slime-out-misc): New function.
	*slime-output*: New variable.
	(read-from-emacs): Redirect output to *slime-output*.
	(read-form): Bind *package* inside the standard-io-syntax macro.
	(eval-string): Read the string with read-form.
	(completions): Support for keyword completion.

	* slime.el (slime-process-available-input, slime-eval): Rewritten
	once again.  Don't use unwind-protect anymore. Didn't work
	properly when the Lisp side aborted due to too many debug
	levels. "Continuing" from the Emacs debugger aborts one level on
	the Lisp side. "Quitting" from the Emacs debugger quits the Lisp
	side too. Increase stack sizes before entering the recursive edit.
	(slime-eval-async-state, slime-eval, sldb-state): Support for stream
	output.
	slime-last-output-start: New variable.
	(slime-output-buffer, slime-output-buffer-position,
	 slime-insert-transcript-delimiter, slime-show-last-output,
	 slime-output-string): New functions.
	(slime-show-evaluation-result,
	slime-show-evaluation-result-continuation): Use them.
	(slime-use-inf-lisp-p, slime-insert-transcript-delimiter,
	 slime-inferior-lisp-marker-position,
	 slime-inferior-lisp-show-last-output): Deleted.
	(slime-use-tty-debugger, slime-debugger-hook,
	slime-enter-tty-debugger, slime-tty-debugger-state): Deleted. Removed
	tty debugger support.
	(def-sldb-invoke-restart): Renamed.
	(define-sldb-invoke-restart-key, define-sldb-invoke-restart-keys):
	Version without eval.
	(defun-if-undefined): New macro.
	Many indentation fixes.

2003-09-23  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* swank.lisp (completions):
	Moved most of the completion code to Lisp.
	(string-prefix-p): Be case insensitive.

	* slime.el:
	Make sure define-minor-mode is defined before we use it.
	(slime-completing-read-internal, slime-completing-read-symbol-name,
	slime-read-from-minibuffer, slime-completions, slime-complete-symbol):
	Support for reading symbols and expressions with completion.
	(slime-read-symbol-name): New function.
	(slime-read-symbol): Use it.
	(slime-read-package-name): Case insensitive completion.

	(slime-edit-symbol-fdefinition, slime-edit-fdefinition): Rename
	slime-edit-symbol-fdefinition to slime-edit-fdefinition.

2003-09-23  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-show-xrefs): Improved the xrefs buffer, now
	using a custom minor mode.
	(slime-next-location): This function goes to the next "something"
	by funcall'ing slime-next-location-function. Currently that
	variable is set by xref commands like who-calls to go to the next
	matching reference. In future it can also be used to go to the
	next function definition for a generic-function-understanding
	version of edit-fdefinition. Bound to C-M-. and C-c C-SPC, until
	we see which binding is better.

2003-09-22  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-symbol-at-point): Now returns a symbol, as the
	name suggests.
	(slime-symbol-name-at-point): This one returns a string.
	(slime-read-symbol): New function for taking the symbol at point,
	or prompting if there isn't one.
	(slime-edit-fdefinition): Now uses looks up the symbol at point,
	not the function being called at point.

	* swank.lisp (who-calls, who-references, who-binds, who-sets,
	who-macroexpands): New function.
	(present-symbol-before-p): Use `*buffer-package*' when checking
	accessibility of symbols.

	* slime.el (slime-restore-window-configuration): New command to
	put the Emacs window configuration back the way it was before
	SLIME last changed it.
	(slime-who-calls, etc): Very basic WHO-{CALLS,..} support. Not
	finished, wrestling around trying to make `view-mode' or
	`help-mode' help me (I just want to hijack RET and C-m). Bound to
	"C-c C-w ...".

2003-09-21  Luke Gorrie  <luke@bluetail.com>

	* slime.el: Rearranged the `outline-mode' structure slightly.
	(slime-check-connected): Using new function to give a helpful
	error message if you try to use commands before establishing a
	connection to CMUCL.
	(sldb-mode): Keys 0-9 are now shortcuts to invoke restarts.

	* README, swank.el: Updated commentary.

2003-09-20  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-choose-overlay-region): Tweaked overlay
	placement.

	* swank.lisp (handle-notification): Skipping null
	notifications. For some reason CMUCL occasionally calls us with
	NIL as each argument.

2003-09-19  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-connect): Propose default values when called
	interactively.
	(slime-process-available-input): If possible, use while rather than
	recursion.
	(slime-compilation-finished-continuation): New function.
	(slime-compile-file, slime-compile-defun): Use it.
	(slime-forward-source-path): Id an error is encounter move back to the
	last valid point.
	(slime-eval-region): Use append COND.  Send the entire string to the
	Lisp side and read&evaluate it there.
	(slime-eval-buffer): New function.
	(sldb-sugar-move, sldb-details-up, sldb-details-down): New functions.

	* swank.lisp (interactive-eval-region): New function.
	(re-evaluate-defvar): New function.
	(compile-defun): Install handler for compiler-errors.
	(function-first-code-location): Simplified.

2003-09-17  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-apropos-all): New command, bound to C-c M-a.
	(slime-eval): Simplified.
	(swank:arglist-string): Send a string and not a symbol.  It easier
	to package related thins in CL.
	(slime-edit-symbol-fdefinition): Prompt when called with
	prefix-argument.
	(slime-eval-region): New function.
	(slime-load-file): New function.
	(slime-show-description): Set slime minor mode in Help buffer.

	* swank.lisp: (read-string, from-string): Renamed read-string to
	from-string.
	(to-string) New function.
	(arglist-string): Catch reader errors.
	(sldb-loop): Also bind *readstrable*.


2003-09-16  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* slime.el (slime-toggle-trace-fdefinition): New command.
	(slime-symbol-at-point, slime-sexp-at-point): New utility functions.
	(slime-edit-symbol-fdefinition): Similar to slime-edit-fdefinition but
	uses swank:function-source-location-for-emacs.
	(slime-goto-source-location): New function.
	(sldb-show-source): Use it.
	(slime-read-package-name): Completing read for package names.
	(slime-apropos): Use it.

	* swank.lisp (function-source-location,
	function-source-location-for-emacs): New functions to extract
	source locations from compiled code.  For struct-accessors we try
	to find the source location of the corresponding constructor.
	(list-all-package-names): New function.
	(toggle-trace-fdefinition, tracedp): New functions.

2003-09-15  Helmut Eller <e9626484@stud3.tuwien.ac.at>

	* slime.el: Moved many CL fragments from slime.el to swank.lisp.
	(slime-compile-file, slime-compile-defun, slime-goto-location):
	Compiler notes are now represented with a property list.  To find
	the source expression first move to the file offset of the
	top-level form and then use the source path to find the
	expression.  This should avoid many reader issues.  For
	compile-defun store the start position of the top-level expression
	from the buffer in the compiler notes and use that to locate error
	messages.  Add error overlays for notes without context to the
	first available expression.

	* swank.lisp: Moved many CL fragments from slime.el to swank.lisp.
	(defslimefun): New macro.

2003-09-15  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-setup-command-hooks): Removed post-command-hook
	that was used for cleaning up input that was unprocessed due to an
	error breaking out of the process filter. This is now handled by
	an `unwind-protect' in the filter.

	* swank.lisp (apropos-list-for-emacs): Hacked the apropos listing
	to accept more options and to specially sort results.

	* slime.el (slime-net-send): Added newlines to messages over the
	wire. This makes the protocol nicely readable in Ethereal.
	(slime-sync): New function for blocking until asynchronous
	requests are complete.
	(slime-apropos): Hacked the apropos command: by default, only
	external symbols are shown. With a prefix argument you have the
	option to include internal symbols and to specify a package.
	(slime-run-tests): Extended the test suite. Use `M-x
	slime-run-tests' to run it.

2003-09-14  Luke Gorrie  <luke@bluetail.com>

	* slime.el, swank.lisp: Added the debugger written by Helmut.

	* cmucl-wire.el: Removed. The WIRE communication protocol has been
	replaced by a simple custom TCP protocol based on READ/PRIN1 to
	send sexps as ascii text. This simplifies the code, makes the
	protocol nicely debugable with ethereal, and should ease porting
	to other Lisps. Incremented TCP port number to 4005 in honor of
	the new protocol.

	In addition, Lisp now always uses *print-case* of :DOWNCASE when
	preparing sexps for Emacs. This is in reaction to a bug with Emacs
	reading the empty list as `NIL' instead of `nil'.

	* slime.el (slime-net-connect): The Emacs end of the new
	communication protocol.

	* swank.lisp (create-swank-server): The Lisp end of the new
	communication protocol.

2003-09-11  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-mode): Added Helmut's commands to the mode
	description.
	(slime-show-apropos): Setting `truncate-lines' to t in apropos
	listings, to avoid line-wrapping on overly long descriptions.
	(slime-run-tests): Added the beginnings of an automated test
	suite. (This is most useful for testing cross-Emacsen
	compatibility before releases.)

	* swank.lisp (symbol-external-p): Put back this function which was
	lost in a merge.

2003-09-10  Luke Gorrie  <luke@bluetail.com>

	* slime.el, cmucl-wire.el, swank.lisp: Large patch from Helmut
	Eller. Includes: apropos, describe, compile-defun, fully
	asynchronous continuation-based wire interface, interactive
	evaluation, and more. Very nice :-)

2003-09-08  Luke Gorrie  <luke@bluetail.com>

	* cmucl-wire.el (wire-symbol-name, wire-symbol-package): Fixed to
	handle internal references (pkg::name).

	* slime.el (slime-swank-connection-retries): Increased default
	number of connection retries from 5 to ten.

	* swank.lisp (find-fdefinition): Support for finding
	function/macro definitions for Emacs.

	* slime.el: Indentation "cleanups": somehow I was using
	`common-lisp-indent-function' for Emacs Lisp code previously.
	(slime-edit-fdefinition): Added M-. (edit definition) and M-, (pop
	definition stack) commands. Definitions are found in much the same
	way Hemlock does it. The user-interface is not the same as TAGS,
	because I like this one better. We can add TAGS-compatibility as
	an optional feature in future.

2003-09-04  Luke Gorrie  <luke@bluetail.com>

	* slime.el (slime-completions): Now supports completing
	package-internal symbols with "pkg::prefix" syntax.

	* Everything: imported slime-0.2 sources.

;; Local Variables:
;; coding: utf-8
;; End:

This file has been placed in the public domain.
