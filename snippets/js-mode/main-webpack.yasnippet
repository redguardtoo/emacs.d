# -*- mode: snippet -*-
# name: webpack.conf.js
# key: main
# --
// So you need prepare follow files:
//   - frontend/index.js (@see react-indexjs.yasnippet)
//   - frontend/index.template.ejs (used by HtmlWebpackPlugin, @see html5-webpack.yasnippet)
//   - frontend/components/Home/Home.js
//   - frontend/components/Dashboard/Dashboard.js
//   - frontend/styles/ (storing global css files)
//   - package.json (@see package-reactjs.yasnippet)
//   - webpack.config.js
//   - .babelrc (file contents: {"presets": ["react", "es2015"], "plugins": ["transform-object-rest-spread"]})

var HtmlWebpackPlugin = require('html-webpack-plugin');
var CopyWebpackPlugin = require('copy-webpack-plugin');
var webpack = require('webpack');
var path = require('path');

function getSrcDir(child) {
  return process.env.NODE_ENV === 'development'? child: '' + child;
}

function getDistDir() {
  return process.env.NODE_ENV === 'development'? 'frontend-dist/js': 'src/main/resources/static/js';
}

function getFilesToCopy() {
  var arr =[
    {from: 'node_modules/bootstrap/dist/css/bootstrap.min.css', to: '../css/' },
    {from: 'node_modules/bootstrap/dist/fonts/glyphicons-halflings-regular.eot', to: '../fonts/' },
    {from: 'node_modules/bootstrap/dist/fonts/glyphicons-halflings-regular.svg', to: '../fonts/' },
    {from: 'node_modules/bootstrap/dist/fonts/glyphicons-halflings-regular.ttf', to: '../fonts/' },
    {from: 'node_modules/bootstrap/dist/fonts/glyphicons-halflings-regular.woff', to: '../fonts/' },
    {from: 'node_modules/bootstrap/dist/fonts/glyphicons-halflings-regular.woff2', to: '../fonts/' },
    {from: 'node_modules/font-awesome/css/font-awesome.min.css', to: '../css/' },
    {from: 'node_modules/font-awesome/fonts/FontAwesome.otf', to: '../fonts'},
    {from: 'node_modules/font-awesome/fonts/fontawesome-webfont.eot', to: '../fonts'},
    {from: 'node_modules/font-awesome/fonts/fontawesome-webfont.svg', to: '../fonts'},
    {from: 'node_modules/font-awesome/fonts/fontawesome-webfont.ttf', to: '../fonts'},
    {from: 'node_modules/font-awesome/fonts/fontawesome-webfont.woff', to: '../fonts'},
    {from: 'node_modules/font-awesome/fonts/fontawesome-webfont.woff2', to: '../fonts'},
  ];
  return arr;
}

function getWebpackPlugins() {
  var arr = [
    // it's stupid to copy file one by one, but I haven't figured out another way
    new CopyWebpackPlugin(getFilesToCopy()),
    new webpack.DefinePlugin({
      isDev: process.env.NODE_ENV === 'development'
    }),
    new HtmlWebpackPlugin({
      filename: '../index.html',
      template: path.resolve(__dirname, 'frontend/index.template.ejs'),
      inject: 'body',
      cssDir: getSrcDir('/css')
    })
  ];
  if(process.env.NODE_ENV === 'production') {
    arr.push(
      new webpack.optimize.UglifyJsPlugin({
        // Don't beautify output (enable for neater output)
        beautify: false,
        // Eliminate comments
        comments: false,
        // Compression specific options
        compress: {
          warnings: false,
          // Drop `console` statements
          drop_console: true
        },
        // Mangling specific options
        mangle: {
          // Don't mangle $
          except: ['$'],
          // Don't care about IE8
          screw_ie8 : true,
          // Don't mangle function names
          keep_fnames: true
        }
      })
    );
  }
  return arr;
}

module.exports = {
  entry: './frontend/index.js',
  output: {
    path: path.resolve(__dirname, getDistDir()),
    filename: 'bundle.js',
    publicPath: getSrcDir('/js/')
  },
  devServer: {
    historyApiFallback: true,
    compress:true
  },
  plugins: getWebpackPlugins(),
  resolve: {
    extensions: ['', '.js', '.jsx'],
    modules: [
      'frontend',
      'node_modules'
    ],
    // root for es2015 import
    // @see http://moduscreate.com/es6-es2015-import-no-relative-path-webpack/
    root: [
      path.resolve('./frontend/components')
    ]
  },

  module: {
    loaders: [
      {
        test: /\.woff(2)?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
        loader: "url-loader?limit=10000&minetype=application/font-woff"
      }, {
        test: /\.(ttf|eot|svg)(\?v=[0-9]\.[0-9]\.[0-9])?$/,
        loader: "file-loader"
      } ,
      {
        test: /\.css$/,
        exclude: /node_modules|styles/,
        loader: 'style-loader!css-loader?localIdentName=[name]__[local]__[hash:base64:5]&modules&importLoaders=1&sourceMap!postcss-loader'
      }, {
        test: /\.css$/,
        include: /styles/, // global css
        loader: 'style-loader!css-loader!postcss-loader'
      }, {
        test: /\.css$/,
        include: /node_modules/,
        loaders: ['style-loader', 'css-loader']
      }, {
        test: /\.jsx*$/,
        exclude: [/node_modules/, /.+\.config.js/],
        loader: 'babel'
      }, {
        test: /\.(jpe?g|gif|png|svg)$/i,
        loader: 'url-loader?limit=10000'
      }, {
        test: /\.json$/,
        loader: 'json-loader'
      },
      {
        test: /\.font.(js|json)$/,
        loader: "style!css!fontgen?embed&types=woff,eot,ttf"
      }
    ]
  },
  postcss: (webpack) => [
    require('postcss-import')({
      // where to search styles
      path: ['frontend/styles'],
      addDependencyTo: webpack
    }),
    require('postcss-simple-vars')({ silent: false}),
    require('postcss-nested')()
  ]
};
